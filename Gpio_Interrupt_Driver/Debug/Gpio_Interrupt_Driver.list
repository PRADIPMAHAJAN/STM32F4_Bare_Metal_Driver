
Gpio_Interrupt_Driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001238  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  080013d8  080013d8  000113d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001420  08001420  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001420  08001420  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001420  08001420  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001420  08001420  00011420  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001424  08001424  00011424  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001428  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001484  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001484  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000132e  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000059c  00000000  00000000  000213fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000148  00000000  00000000  000219a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000dd  00000000  00000000  00021ae8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000fa1b  00000000  00000000  00021bc5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001ac8  00000000  00000000  000315e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00055ae9  00000000  00000000  000330a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b6c  00000000  00000000  00088b94  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000056  00000000  00000000  00089700  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080013c0 	.word	0x080013c0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	080013c0 	.word	0x080013c0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
 8000286:	4603      	mov	r3, r0
 8000288:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800028a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800028e:	2b00      	cmp	r3, #0
 8000290:	db0b      	blt.n	80002aa <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000292:	79fb      	ldrb	r3, [r7, #7]
 8000294:	f003 021f 	and.w	r2, r3, #31
 8000298:	4907      	ldr	r1, [pc, #28]	; (80002b8 <__NVIC_EnableIRQ+0x38>)
 800029a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800029e:	095b      	lsrs	r3, r3, #5
 80002a0:	2001      	movs	r0, #1
 80002a2:	fa00 f202 	lsl.w	r2, r0, r2
 80002a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80002aa:	bf00      	nop
 80002ac:	370c      	adds	r7, #12
 80002ae:	46bd      	mov	sp, r7
 80002b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b4:	4770      	bx	lr
 80002b6:	bf00      	nop
 80002b8:	e000e100 	.word	0xe000e100

080002bc <pc13_exti_init>:
#define GPIOCEN      (1U<<2)
#define SYSCFGEN     (1U<<14)


void pc13_exti_init(void)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80002c0:	b672      	cpsid	i
}
 80002c2:	bf00      	nop
	/*Disable global interrupt*/
	__disable_irq();

	/*Enable clock access for GPIOC*/
	RCC->AHB1ENR |= GPIOCEN;
 80002c4:	4b18      	ldr	r3, [pc, #96]	; (8000328 <pc13_exti_init+0x6c>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c8:	4a17      	ldr	r2, [pc, #92]	; (8000328 <pc13_exti_init+0x6c>)
 80002ca:	f043 0304 	orr.w	r3, r3, #4
 80002ce:	6313      	str	r3, [r2, #48]	; 0x30

	/* Set PC13 as Input */
	GPIOC->MODER &=~(1U<<26);
 80002d0:	4b16      	ldr	r3, [pc, #88]	; (800032c <pc13_exti_init+0x70>)
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	4a15      	ldr	r2, [pc, #84]	; (800032c <pc13_exti_init+0x70>)
 80002d6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80002da:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~(1U<<27);
 80002dc:	4b13      	ldr	r3, [pc, #76]	; (800032c <pc13_exti_init+0x70>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	4a12      	ldr	r2, [pc, #72]	; (800032c <pc13_exti_init+0x70>)
 80002e2:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80002e6:	6013      	str	r3, [r2, #0]

	/*Enable clock access for SYSCFG*/
	RCC->APB2ENR |= SYSCFGEN;
 80002e8:	4b0f      	ldr	r3, [pc, #60]	; (8000328 <pc13_exti_init+0x6c>)
 80002ea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002ec:	4a0e      	ldr	r2, [pc, #56]	; (8000328 <pc13_exti_init+0x6c>)
 80002ee:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002f2:	6453      	str	r3, [r2, #68]	; 0x44

	/*Select PORTC for EXTI1 -> External Interrupt configuration register 4 start from 0 then 3*/
	SYSCFG->EXTICR[3] |= (1U<<5);
 80002f4:	4b0e      	ldr	r3, [pc, #56]	; (8000330 <pc13_exti_init+0x74>)
 80002f6:	695b      	ldr	r3, [r3, #20]
 80002f8:	4a0d      	ldr	r2, [pc, #52]	; (8000330 <pc13_exti_init+0x74>)
 80002fa:	f043 0320 	orr.w	r3, r3, #32
 80002fe:	6153      	str	r3, [r2, #20]

	/*Unmask EXTI13 interrupt mask register */
	EXTI->IMR |= (1U<<13);
 8000300:	4b0c      	ldr	r3, [pc, #48]	; (8000334 <pc13_exti_init+0x78>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	4a0b      	ldr	r2, [pc, #44]	; (8000334 <pc13_exti_init+0x78>)
 8000306:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800030a:	6013      	str	r3, [r2, #0]

	/*Select falling edge trigger Falling trigger selection register*/
	EXTI->FTSR |= (1U<<13);
 800030c:	4b09      	ldr	r3, [pc, #36]	; (8000334 <pc13_exti_init+0x78>)
 800030e:	68db      	ldr	r3, [r3, #12]
 8000310:	4a08      	ldr	r2, [pc, #32]	; (8000334 <pc13_exti_init+0x78>)
 8000312:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000316:	60d3      	str	r3, [r2, #12]

	/*Enable EXTI13 line in NVIC*/
	NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000318:	2028      	movs	r0, #40	; 0x28
 800031a:	f7ff ffb1 	bl	8000280 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 800031e:	b662      	cpsie	i
}
 8000320:	bf00      	nop

	/*Enable global interrupt*/
	__enable_irq();
}
 8000322:	bf00      	nop
 8000324:	bd80      	pop	{r7, pc}
 8000326:	bf00      	nop
 8000328:	40023800 	.word	0x40023800
 800032c:	40020800 	.word	0x40020800
 8000330:	40013800 	.word	0x40013800
 8000334:	40013c00 	.word	0x40013c00

08000338 <main>:
/* ---------------------*/

static void exti_callback(void);

int main(void)
{
 8000338:	b580      	push	{r7, lr}
 800033a:	af00      	add	r7, sp, #0
	/* LED */
	RCC->AHB1ENR |= GPIOAEN;
 800033c:	4b0a      	ldr	r3, [pc, #40]	; (8000368 <main+0x30>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a09      	ldr	r2, [pc, #36]	; (8000368 <main+0x30>)
 8000342:	f043 0301 	orr.w	r3, r3, #1
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->MODER |= (1U<<10);
 8000348:	4b08      	ldr	r3, [pc, #32]	; (800036c <main+0x34>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	4a07      	ldr	r2, [pc, #28]	; (800036c <main+0x34>)
 800034e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000352:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~ (1U<<11);
 8000354:	4b05      	ldr	r3, [pc, #20]	; (800036c <main+0x34>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	4a04      	ldr	r2, [pc, #16]	; (800036c <main+0x34>)
 800035a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800035e:	6013      	str	r3, [r2, #0]
	/*--------------------------*/
	pc13_exti_init();
 8000360:	f7ff ffac 	bl	80002bc <pc13_exti_init>
	while(1)
 8000364:	e7fe      	b.n	8000364 <main+0x2c>
 8000366:	bf00      	nop
 8000368:	40023800 	.word	0x40023800
 800036c:	40020000 	.word	0x40020000

08000370 <exti_callback>:

	}
}

static void exti_callback(void)
{
 8000370:	b580      	push	{r7, lr}
 8000372:	b082      	sub	sp, #8
 8000374:	af00      	add	r7, sp, #0
	printf("BTN Pressed....\n\r"); // use UART2 for print this.
 8000376:	480c      	ldr	r0, [pc, #48]	; (80003a8 <exti_callback+0x38>)
 8000378:	f000 f9ae 	bl	80006d8 <iprintf>
	GPIOA->BSRR = LED_PIN;
 800037c:	4b0b      	ldr	r3, [pc, #44]	; (80003ac <exti_callback+0x3c>)
 800037e:	2220      	movs	r2, #32
 8000380:	619a      	str	r2, [r3, #24]
	for(int i=0; i<1000000; i++){}
 8000382:	2300      	movs	r3, #0
 8000384:	607b      	str	r3, [r7, #4]
 8000386:	e002      	b.n	800038e <exti_callback+0x1e>
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	3301      	adds	r3, #1
 800038c:	607b      	str	r3, [r7, #4]
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a07      	ldr	r2, [pc, #28]	; (80003b0 <exti_callback+0x40>)
 8000392:	4293      	cmp	r3, r2
 8000394:	ddf8      	ble.n	8000388 <exti_callback+0x18>
	GPIOA->BSRR = (1U<<21);
 8000396:	4b05      	ldr	r3, [pc, #20]	; (80003ac <exti_callback+0x3c>)
 8000398:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800039c:	619a      	str	r2, [r3, #24]
}
 800039e:	bf00      	nop
 80003a0:	3708      	adds	r7, #8
 80003a2:	46bd      	mov	sp, r7
 80003a4:	bd80      	pop	{r7, pc}
 80003a6:	bf00      	nop
 80003a8:	080013d8 	.word	0x080013d8
 80003ac:	40020000 	.word	0x40020000
 80003b0:	000f423f 	.word	0x000f423f

080003b4 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
{
 80003b4:	b580      	push	{r7, lr}
 80003b6:	af00      	add	r7, sp, #0
	/* Set 1 Pending register of EXTI_PR*/
	if((EXTI->PR & LINE13) != 0)
 80003b8:	4b07      	ldr	r3, [pc, #28]	; (80003d8 <EXTI15_10_IRQHandler+0x24>)
 80003ba:	695b      	ldr	r3, [r3, #20]
 80003bc:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80003c0:	2b00      	cmp	r3, #0
 80003c2:	d007      	beq.n	80003d4 <EXTI15_10_IRQHandler+0x20>
	{
		/* Clear PR Flag*/
		EXTI->PR |= LINE13;
 80003c4:	4b04      	ldr	r3, [pc, #16]	; (80003d8 <EXTI15_10_IRQHandler+0x24>)
 80003c6:	695b      	ldr	r3, [r3, #20]
 80003c8:	4a03      	ldr	r2, [pc, #12]	; (80003d8 <EXTI15_10_IRQHandler+0x24>)
 80003ca:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80003ce:	6153      	str	r3, [r2, #20]
		/* Do something...*/
		exti_callback();
 80003d0:	f7ff ffce 	bl	8000370 <exti_callback>
	}
}
 80003d4:	bf00      	nop
 80003d6:	bd80      	pop	{r7, pc}
 80003d8:	40013c00 	.word	0x40013c00

080003dc <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003dc:	b580      	push	{r7, lr}
 80003de:	b086      	sub	sp, #24
 80003e0:	af00      	add	r7, sp, #0
 80003e2:	60f8      	str	r0, [r7, #12]
 80003e4:	60b9      	str	r1, [r7, #8]
 80003e6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e8:	2300      	movs	r3, #0
 80003ea:	617b      	str	r3, [r7, #20]
 80003ec:	e00a      	b.n	8000404 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003ee:	f3af 8000 	nop.w
 80003f2:	4601      	mov	r1, r0
 80003f4:	68bb      	ldr	r3, [r7, #8]
 80003f6:	1c5a      	adds	r2, r3, #1
 80003f8:	60ba      	str	r2, [r7, #8]
 80003fa:	b2ca      	uxtb	r2, r1
 80003fc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003fe:	697b      	ldr	r3, [r7, #20]
 8000400:	3301      	adds	r3, #1
 8000402:	617b      	str	r3, [r7, #20]
 8000404:	697a      	ldr	r2, [r7, #20]
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	429a      	cmp	r2, r3
 800040a:	dbf0      	blt.n	80003ee <_read+0x12>
  }

  return len;
 800040c:	687b      	ldr	r3, [r7, #4]
}
 800040e:	4618      	mov	r0, r3
 8000410:	3718      	adds	r7, #24
 8000412:	46bd      	mov	sp, r7
 8000414:	bd80      	pop	{r7, pc}

08000416 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000416:	b580      	push	{r7, lr}
 8000418:	b086      	sub	sp, #24
 800041a:	af00      	add	r7, sp, #0
 800041c:	60f8      	str	r0, [r7, #12]
 800041e:	60b9      	str	r1, [r7, #8]
 8000420:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000422:	2300      	movs	r3, #0
 8000424:	617b      	str	r3, [r7, #20]
 8000426:	e009      	b.n	800043c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000428:	68bb      	ldr	r3, [r7, #8]
 800042a:	1c5a      	adds	r2, r3, #1
 800042c:	60ba      	str	r2, [r7, #8]
 800042e:	781b      	ldrb	r3, [r3, #0]
 8000430:	4618      	mov	r0, r3
 8000432:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000436:	697b      	ldr	r3, [r7, #20]
 8000438:	3301      	adds	r3, #1
 800043a:	617b      	str	r3, [r7, #20]
 800043c:	697a      	ldr	r2, [r7, #20]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	429a      	cmp	r2, r3
 8000442:	dbf1      	blt.n	8000428 <_write+0x12>
  }
  return len;
 8000444:	687b      	ldr	r3, [r7, #4]
}
 8000446:	4618      	mov	r0, r3
 8000448:	3718      	adds	r7, #24
 800044a:	46bd      	mov	sp, r7
 800044c:	bd80      	pop	{r7, pc}

0800044e <_close>:

int _close(int file)
{
 800044e:	b480      	push	{r7}
 8000450:	b083      	sub	sp, #12
 8000452:	af00      	add	r7, sp, #0
 8000454:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000456:	f04f 33ff 	mov.w	r3, #4294967295
}
 800045a:	4618      	mov	r0, r3
 800045c:	370c      	adds	r7, #12
 800045e:	46bd      	mov	sp, r7
 8000460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000464:	4770      	bx	lr

08000466 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000466:	b480      	push	{r7}
 8000468:	b083      	sub	sp, #12
 800046a:	af00      	add	r7, sp, #0
 800046c:	6078      	str	r0, [r7, #4]
 800046e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000470:	683b      	ldr	r3, [r7, #0]
 8000472:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000476:	605a      	str	r2, [r3, #4]
  return 0;
 8000478:	2300      	movs	r3, #0
}
 800047a:	4618      	mov	r0, r3
 800047c:	370c      	adds	r7, #12
 800047e:	46bd      	mov	sp, r7
 8000480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000484:	4770      	bx	lr

08000486 <_isatty>:

int _isatty(int file)
{
 8000486:	b480      	push	{r7}
 8000488:	b083      	sub	sp, #12
 800048a:	af00      	add	r7, sp, #0
 800048c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800048e:	2301      	movs	r3, #1
}
 8000490:	4618      	mov	r0, r3
 8000492:	370c      	adds	r7, #12
 8000494:	46bd      	mov	sp, r7
 8000496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049a:	4770      	bx	lr

0800049c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800049c:	b480      	push	{r7}
 800049e:	b085      	sub	sp, #20
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	60f8      	str	r0, [r7, #12]
 80004a4:	60b9      	str	r1, [r7, #8]
 80004a6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004a8:	2300      	movs	r3, #0
}
 80004aa:	4618      	mov	r0, r3
 80004ac:	3714      	adds	r7, #20
 80004ae:	46bd      	mov	sp, r7
 80004b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b4:	4770      	bx	lr
	...

080004b8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004b8:	b580      	push	{r7, lr}
 80004ba:	b086      	sub	sp, #24
 80004bc:	af00      	add	r7, sp, #0
 80004be:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004c0:	4a14      	ldr	r2, [pc, #80]	; (8000514 <_sbrk+0x5c>)
 80004c2:	4b15      	ldr	r3, [pc, #84]	; (8000518 <_sbrk+0x60>)
 80004c4:	1ad3      	subs	r3, r2, r3
 80004c6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004c8:	697b      	ldr	r3, [r7, #20]
 80004ca:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004cc:	4b13      	ldr	r3, [pc, #76]	; (800051c <_sbrk+0x64>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	2b00      	cmp	r3, #0
 80004d2:	d102      	bne.n	80004da <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004d4:	4b11      	ldr	r3, [pc, #68]	; (800051c <_sbrk+0x64>)
 80004d6:	4a12      	ldr	r2, [pc, #72]	; (8000520 <_sbrk+0x68>)
 80004d8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004da:	4b10      	ldr	r3, [pc, #64]	; (800051c <_sbrk+0x64>)
 80004dc:	681a      	ldr	r2, [r3, #0]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	4413      	add	r3, r2
 80004e2:	693a      	ldr	r2, [r7, #16]
 80004e4:	429a      	cmp	r2, r3
 80004e6:	d207      	bcs.n	80004f8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004e8:	f000 f99a 	bl	8000820 <__errno>
 80004ec:	4603      	mov	r3, r0
 80004ee:	220c      	movs	r2, #12
 80004f0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004f2:	f04f 33ff 	mov.w	r3, #4294967295
 80004f6:	e009      	b.n	800050c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004f8:	4b08      	ldr	r3, [pc, #32]	; (800051c <_sbrk+0x64>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004fe:	4b07      	ldr	r3, [pc, #28]	; (800051c <_sbrk+0x64>)
 8000500:	681a      	ldr	r2, [r3, #0]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	4413      	add	r3, r2
 8000506:	4a05      	ldr	r2, [pc, #20]	; (800051c <_sbrk+0x64>)
 8000508:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800050a:	68fb      	ldr	r3, [r7, #12]
}
 800050c:	4618      	mov	r0, r3
 800050e:	3718      	adds	r7, #24
 8000510:	46bd      	mov	sp, r7
 8000512:	bd80      	pop	{r7, pc}
 8000514:	20020000 	.word	0x20020000
 8000518:	00000400 	.word	0x00000400
 800051c:	20000078 	.word	0x20000078
 8000520:	200001c8 	.word	0x200001c8

08000524 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000524:	480d      	ldr	r0, [pc, #52]	; (800055c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000526:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000528:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800052c:	480c      	ldr	r0, [pc, #48]	; (8000560 <LoopForever+0x6>)
  ldr r1, =_edata
 800052e:	490d      	ldr	r1, [pc, #52]	; (8000564 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000530:	4a0d      	ldr	r2, [pc, #52]	; (8000568 <LoopForever+0xe>)
  movs r3, #0
 8000532:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000534:	e002      	b.n	800053c <LoopCopyDataInit>

08000536 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000536:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000538:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800053a:	3304      	adds	r3, #4

0800053c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800053c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800053e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000540:	d3f9      	bcc.n	8000536 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000542:	4a0a      	ldr	r2, [pc, #40]	; (800056c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000544:	4c0a      	ldr	r4, [pc, #40]	; (8000570 <LoopForever+0x16>)
  movs r3, #0
 8000546:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000548:	e001      	b.n	800054e <LoopFillZerobss>

0800054a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800054a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800054c:	3204      	adds	r2, #4

0800054e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800054e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000550:	d3fb      	bcc.n	800054a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000552:	f000 f96b 	bl	800082c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000556:	f7ff feef 	bl	8000338 <main>

0800055a <LoopForever>:

LoopForever:
  b LoopForever
 800055a:	e7fe      	b.n	800055a <LoopForever>
  ldr   r0, =_estack
 800055c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000560:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000564:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000568:	08001428 	.word	0x08001428
  ldr r2, =_sbss
 800056c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000570:	200001c8 	.word	0x200001c8

08000574 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000574:	e7fe      	b.n	8000574 <ADC_IRQHandler>
	...

08000578 <std>:
 8000578:	2300      	movs	r3, #0
 800057a:	b510      	push	{r4, lr}
 800057c:	4604      	mov	r4, r0
 800057e:	e9c0 3300 	strd	r3, r3, [r0]
 8000582:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000586:	6083      	str	r3, [r0, #8]
 8000588:	8181      	strh	r1, [r0, #12]
 800058a:	6643      	str	r3, [r0, #100]	; 0x64
 800058c:	81c2      	strh	r2, [r0, #14]
 800058e:	6183      	str	r3, [r0, #24]
 8000590:	4619      	mov	r1, r3
 8000592:	2208      	movs	r2, #8
 8000594:	305c      	adds	r0, #92	; 0x5c
 8000596:	f000 f8f4 	bl	8000782 <memset>
 800059a:	4b05      	ldr	r3, [pc, #20]	; (80005b0 <std+0x38>)
 800059c:	6263      	str	r3, [r4, #36]	; 0x24
 800059e:	4b05      	ldr	r3, [pc, #20]	; (80005b4 <std+0x3c>)
 80005a0:	62a3      	str	r3, [r4, #40]	; 0x28
 80005a2:	4b05      	ldr	r3, [pc, #20]	; (80005b8 <std+0x40>)
 80005a4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005a6:	4b05      	ldr	r3, [pc, #20]	; (80005bc <std+0x44>)
 80005a8:	6224      	str	r4, [r4, #32]
 80005aa:	6323      	str	r3, [r4, #48]	; 0x30
 80005ac:	bd10      	pop	{r4, pc}
 80005ae:	bf00      	nop
 80005b0:	080006fd 	.word	0x080006fd
 80005b4:	0800071f 	.word	0x0800071f
 80005b8:	08000757 	.word	0x08000757
 80005bc:	0800077b 	.word	0x0800077b

080005c0 <stdio_exit_handler>:
 80005c0:	4a02      	ldr	r2, [pc, #8]	; (80005cc <stdio_exit_handler+0xc>)
 80005c2:	4903      	ldr	r1, [pc, #12]	; (80005d0 <stdio_exit_handler+0x10>)
 80005c4:	4803      	ldr	r0, [pc, #12]	; (80005d4 <stdio_exit_handler+0x14>)
 80005c6:	f000 b869 	b.w	800069c <_fwalk_sglue>
 80005ca:	bf00      	nop
 80005cc:	20000000 	.word	0x20000000
 80005d0:	0800111d 	.word	0x0800111d
 80005d4:	2000000c 	.word	0x2000000c

080005d8 <cleanup_stdio>:
 80005d8:	6841      	ldr	r1, [r0, #4]
 80005da:	4b0c      	ldr	r3, [pc, #48]	; (800060c <cleanup_stdio+0x34>)
 80005dc:	4299      	cmp	r1, r3
 80005de:	b510      	push	{r4, lr}
 80005e0:	4604      	mov	r4, r0
 80005e2:	d001      	beq.n	80005e8 <cleanup_stdio+0x10>
 80005e4:	f000 fd9a 	bl	800111c <_fflush_r>
 80005e8:	68a1      	ldr	r1, [r4, #8]
 80005ea:	4b09      	ldr	r3, [pc, #36]	; (8000610 <cleanup_stdio+0x38>)
 80005ec:	4299      	cmp	r1, r3
 80005ee:	d002      	beq.n	80005f6 <cleanup_stdio+0x1e>
 80005f0:	4620      	mov	r0, r4
 80005f2:	f000 fd93 	bl	800111c <_fflush_r>
 80005f6:	68e1      	ldr	r1, [r4, #12]
 80005f8:	4b06      	ldr	r3, [pc, #24]	; (8000614 <cleanup_stdio+0x3c>)
 80005fa:	4299      	cmp	r1, r3
 80005fc:	d004      	beq.n	8000608 <cleanup_stdio+0x30>
 80005fe:	4620      	mov	r0, r4
 8000600:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000604:	f000 bd8a 	b.w	800111c <_fflush_r>
 8000608:	bd10      	pop	{r4, pc}
 800060a:	bf00      	nop
 800060c:	2000007c 	.word	0x2000007c
 8000610:	200000e4 	.word	0x200000e4
 8000614:	2000014c 	.word	0x2000014c

08000618 <global_stdio_init.part.0>:
 8000618:	b510      	push	{r4, lr}
 800061a:	4b0b      	ldr	r3, [pc, #44]	; (8000648 <global_stdio_init.part.0+0x30>)
 800061c:	4c0b      	ldr	r4, [pc, #44]	; (800064c <global_stdio_init.part.0+0x34>)
 800061e:	4a0c      	ldr	r2, [pc, #48]	; (8000650 <global_stdio_init.part.0+0x38>)
 8000620:	601a      	str	r2, [r3, #0]
 8000622:	4620      	mov	r0, r4
 8000624:	2200      	movs	r2, #0
 8000626:	2104      	movs	r1, #4
 8000628:	f7ff ffa6 	bl	8000578 <std>
 800062c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000630:	2201      	movs	r2, #1
 8000632:	2109      	movs	r1, #9
 8000634:	f7ff ffa0 	bl	8000578 <std>
 8000638:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800063c:	2202      	movs	r2, #2
 800063e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000642:	2112      	movs	r1, #18
 8000644:	f7ff bf98 	b.w	8000578 <std>
 8000648:	200001b4 	.word	0x200001b4
 800064c:	2000007c 	.word	0x2000007c
 8000650:	080005c1 	.word	0x080005c1

08000654 <__sfp_lock_acquire>:
 8000654:	4801      	ldr	r0, [pc, #4]	; (800065c <__sfp_lock_acquire+0x8>)
 8000656:	f000 b90d 	b.w	8000874 <__retarget_lock_acquire_recursive>
 800065a:	bf00      	nop
 800065c:	200001bd 	.word	0x200001bd

08000660 <__sfp_lock_release>:
 8000660:	4801      	ldr	r0, [pc, #4]	; (8000668 <__sfp_lock_release+0x8>)
 8000662:	f000 b908 	b.w	8000876 <__retarget_lock_release_recursive>
 8000666:	bf00      	nop
 8000668:	200001bd 	.word	0x200001bd

0800066c <__sinit>:
 800066c:	b510      	push	{r4, lr}
 800066e:	4604      	mov	r4, r0
 8000670:	f7ff fff0 	bl	8000654 <__sfp_lock_acquire>
 8000674:	6a23      	ldr	r3, [r4, #32]
 8000676:	b11b      	cbz	r3, 8000680 <__sinit+0x14>
 8000678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800067c:	f7ff bff0 	b.w	8000660 <__sfp_lock_release>
 8000680:	4b04      	ldr	r3, [pc, #16]	; (8000694 <__sinit+0x28>)
 8000682:	6223      	str	r3, [r4, #32]
 8000684:	4b04      	ldr	r3, [pc, #16]	; (8000698 <__sinit+0x2c>)
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	2b00      	cmp	r3, #0
 800068a:	d1f5      	bne.n	8000678 <__sinit+0xc>
 800068c:	f7ff ffc4 	bl	8000618 <global_stdio_init.part.0>
 8000690:	e7f2      	b.n	8000678 <__sinit+0xc>
 8000692:	bf00      	nop
 8000694:	080005d9 	.word	0x080005d9
 8000698:	200001b4 	.word	0x200001b4

0800069c <_fwalk_sglue>:
 800069c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006a0:	4607      	mov	r7, r0
 80006a2:	4688      	mov	r8, r1
 80006a4:	4614      	mov	r4, r2
 80006a6:	2600      	movs	r6, #0
 80006a8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006ac:	f1b9 0901 	subs.w	r9, r9, #1
 80006b0:	d505      	bpl.n	80006be <_fwalk_sglue+0x22>
 80006b2:	6824      	ldr	r4, [r4, #0]
 80006b4:	2c00      	cmp	r4, #0
 80006b6:	d1f7      	bne.n	80006a8 <_fwalk_sglue+0xc>
 80006b8:	4630      	mov	r0, r6
 80006ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006be:	89ab      	ldrh	r3, [r5, #12]
 80006c0:	2b01      	cmp	r3, #1
 80006c2:	d907      	bls.n	80006d4 <_fwalk_sglue+0x38>
 80006c4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006c8:	3301      	adds	r3, #1
 80006ca:	d003      	beq.n	80006d4 <_fwalk_sglue+0x38>
 80006cc:	4629      	mov	r1, r5
 80006ce:	4638      	mov	r0, r7
 80006d0:	47c0      	blx	r8
 80006d2:	4306      	orrs	r6, r0
 80006d4:	3568      	adds	r5, #104	; 0x68
 80006d6:	e7e9      	b.n	80006ac <_fwalk_sglue+0x10>

080006d8 <iprintf>:
 80006d8:	b40f      	push	{r0, r1, r2, r3}
 80006da:	b507      	push	{r0, r1, r2, lr}
 80006dc:	4906      	ldr	r1, [pc, #24]	; (80006f8 <iprintf+0x20>)
 80006de:	ab04      	add	r3, sp, #16
 80006e0:	6808      	ldr	r0, [r1, #0]
 80006e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80006e6:	6881      	ldr	r1, [r0, #8]
 80006e8:	9301      	str	r3, [sp, #4]
 80006ea:	f000 f9e7 	bl	8000abc <_vfiprintf_r>
 80006ee:	b003      	add	sp, #12
 80006f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80006f4:	b004      	add	sp, #16
 80006f6:	4770      	bx	lr
 80006f8:	20000058 	.word	0x20000058

080006fc <__sread>:
 80006fc:	b510      	push	{r4, lr}
 80006fe:	460c      	mov	r4, r1
 8000700:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000704:	f000 f868 	bl	80007d8 <_read_r>
 8000708:	2800      	cmp	r0, #0
 800070a:	bfab      	itete	ge
 800070c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800070e:	89a3      	ldrhlt	r3, [r4, #12]
 8000710:	181b      	addge	r3, r3, r0
 8000712:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000716:	bfac      	ite	ge
 8000718:	6563      	strge	r3, [r4, #84]	; 0x54
 800071a:	81a3      	strhlt	r3, [r4, #12]
 800071c:	bd10      	pop	{r4, pc}

0800071e <__swrite>:
 800071e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000722:	461f      	mov	r7, r3
 8000724:	898b      	ldrh	r3, [r1, #12]
 8000726:	05db      	lsls	r3, r3, #23
 8000728:	4605      	mov	r5, r0
 800072a:	460c      	mov	r4, r1
 800072c:	4616      	mov	r6, r2
 800072e:	d505      	bpl.n	800073c <__swrite+0x1e>
 8000730:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000734:	2302      	movs	r3, #2
 8000736:	2200      	movs	r2, #0
 8000738:	f000 f83c 	bl	80007b4 <_lseek_r>
 800073c:	89a3      	ldrh	r3, [r4, #12]
 800073e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000742:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000746:	81a3      	strh	r3, [r4, #12]
 8000748:	4632      	mov	r2, r6
 800074a:	463b      	mov	r3, r7
 800074c:	4628      	mov	r0, r5
 800074e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000752:	f000 b853 	b.w	80007fc <_write_r>

08000756 <__sseek>:
 8000756:	b510      	push	{r4, lr}
 8000758:	460c      	mov	r4, r1
 800075a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800075e:	f000 f829 	bl	80007b4 <_lseek_r>
 8000762:	1c43      	adds	r3, r0, #1
 8000764:	89a3      	ldrh	r3, [r4, #12]
 8000766:	bf15      	itete	ne
 8000768:	6560      	strne	r0, [r4, #84]	; 0x54
 800076a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800076e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000772:	81a3      	strheq	r3, [r4, #12]
 8000774:	bf18      	it	ne
 8000776:	81a3      	strhne	r3, [r4, #12]
 8000778:	bd10      	pop	{r4, pc}

0800077a <__sclose>:
 800077a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800077e:	f000 b809 	b.w	8000794 <_close_r>

08000782 <memset>:
 8000782:	4402      	add	r2, r0
 8000784:	4603      	mov	r3, r0
 8000786:	4293      	cmp	r3, r2
 8000788:	d100      	bne.n	800078c <memset+0xa>
 800078a:	4770      	bx	lr
 800078c:	f803 1b01 	strb.w	r1, [r3], #1
 8000790:	e7f9      	b.n	8000786 <memset+0x4>
	...

08000794 <_close_r>:
 8000794:	b538      	push	{r3, r4, r5, lr}
 8000796:	4d06      	ldr	r5, [pc, #24]	; (80007b0 <_close_r+0x1c>)
 8000798:	2300      	movs	r3, #0
 800079a:	4604      	mov	r4, r0
 800079c:	4608      	mov	r0, r1
 800079e:	602b      	str	r3, [r5, #0]
 80007a0:	f7ff fe55 	bl	800044e <_close>
 80007a4:	1c43      	adds	r3, r0, #1
 80007a6:	d102      	bne.n	80007ae <_close_r+0x1a>
 80007a8:	682b      	ldr	r3, [r5, #0]
 80007aa:	b103      	cbz	r3, 80007ae <_close_r+0x1a>
 80007ac:	6023      	str	r3, [r4, #0]
 80007ae:	bd38      	pop	{r3, r4, r5, pc}
 80007b0:	200001b8 	.word	0x200001b8

080007b4 <_lseek_r>:
 80007b4:	b538      	push	{r3, r4, r5, lr}
 80007b6:	4d07      	ldr	r5, [pc, #28]	; (80007d4 <_lseek_r+0x20>)
 80007b8:	4604      	mov	r4, r0
 80007ba:	4608      	mov	r0, r1
 80007bc:	4611      	mov	r1, r2
 80007be:	2200      	movs	r2, #0
 80007c0:	602a      	str	r2, [r5, #0]
 80007c2:	461a      	mov	r2, r3
 80007c4:	f7ff fe6a 	bl	800049c <_lseek>
 80007c8:	1c43      	adds	r3, r0, #1
 80007ca:	d102      	bne.n	80007d2 <_lseek_r+0x1e>
 80007cc:	682b      	ldr	r3, [r5, #0]
 80007ce:	b103      	cbz	r3, 80007d2 <_lseek_r+0x1e>
 80007d0:	6023      	str	r3, [r4, #0]
 80007d2:	bd38      	pop	{r3, r4, r5, pc}
 80007d4:	200001b8 	.word	0x200001b8

080007d8 <_read_r>:
 80007d8:	b538      	push	{r3, r4, r5, lr}
 80007da:	4d07      	ldr	r5, [pc, #28]	; (80007f8 <_read_r+0x20>)
 80007dc:	4604      	mov	r4, r0
 80007de:	4608      	mov	r0, r1
 80007e0:	4611      	mov	r1, r2
 80007e2:	2200      	movs	r2, #0
 80007e4:	602a      	str	r2, [r5, #0]
 80007e6:	461a      	mov	r2, r3
 80007e8:	f7ff fdf8 	bl	80003dc <_read>
 80007ec:	1c43      	adds	r3, r0, #1
 80007ee:	d102      	bne.n	80007f6 <_read_r+0x1e>
 80007f0:	682b      	ldr	r3, [r5, #0]
 80007f2:	b103      	cbz	r3, 80007f6 <_read_r+0x1e>
 80007f4:	6023      	str	r3, [r4, #0]
 80007f6:	bd38      	pop	{r3, r4, r5, pc}
 80007f8:	200001b8 	.word	0x200001b8

080007fc <_write_r>:
 80007fc:	b538      	push	{r3, r4, r5, lr}
 80007fe:	4d07      	ldr	r5, [pc, #28]	; (800081c <_write_r+0x20>)
 8000800:	4604      	mov	r4, r0
 8000802:	4608      	mov	r0, r1
 8000804:	4611      	mov	r1, r2
 8000806:	2200      	movs	r2, #0
 8000808:	602a      	str	r2, [r5, #0]
 800080a:	461a      	mov	r2, r3
 800080c:	f7ff fe03 	bl	8000416 <_write>
 8000810:	1c43      	adds	r3, r0, #1
 8000812:	d102      	bne.n	800081a <_write_r+0x1e>
 8000814:	682b      	ldr	r3, [r5, #0]
 8000816:	b103      	cbz	r3, 800081a <_write_r+0x1e>
 8000818:	6023      	str	r3, [r4, #0]
 800081a:	bd38      	pop	{r3, r4, r5, pc}
 800081c:	200001b8 	.word	0x200001b8

08000820 <__errno>:
 8000820:	4b01      	ldr	r3, [pc, #4]	; (8000828 <__errno+0x8>)
 8000822:	6818      	ldr	r0, [r3, #0]
 8000824:	4770      	bx	lr
 8000826:	bf00      	nop
 8000828:	20000058 	.word	0x20000058

0800082c <__libc_init_array>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	4d0d      	ldr	r5, [pc, #52]	; (8000864 <__libc_init_array+0x38>)
 8000830:	4c0d      	ldr	r4, [pc, #52]	; (8000868 <__libc_init_array+0x3c>)
 8000832:	1b64      	subs	r4, r4, r5
 8000834:	10a4      	asrs	r4, r4, #2
 8000836:	2600      	movs	r6, #0
 8000838:	42a6      	cmp	r6, r4
 800083a:	d109      	bne.n	8000850 <__libc_init_array+0x24>
 800083c:	4d0b      	ldr	r5, [pc, #44]	; (800086c <__libc_init_array+0x40>)
 800083e:	4c0c      	ldr	r4, [pc, #48]	; (8000870 <__libc_init_array+0x44>)
 8000840:	f000 fdbe 	bl	80013c0 <_init>
 8000844:	1b64      	subs	r4, r4, r5
 8000846:	10a4      	asrs	r4, r4, #2
 8000848:	2600      	movs	r6, #0
 800084a:	42a6      	cmp	r6, r4
 800084c:	d105      	bne.n	800085a <__libc_init_array+0x2e>
 800084e:	bd70      	pop	{r4, r5, r6, pc}
 8000850:	f855 3b04 	ldr.w	r3, [r5], #4
 8000854:	4798      	blx	r3
 8000856:	3601      	adds	r6, #1
 8000858:	e7ee      	b.n	8000838 <__libc_init_array+0xc>
 800085a:	f855 3b04 	ldr.w	r3, [r5], #4
 800085e:	4798      	blx	r3
 8000860:	3601      	adds	r6, #1
 8000862:	e7f2      	b.n	800084a <__libc_init_array+0x1e>
 8000864:	08001420 	.word	0x08001420
 8000868:	08001420 	.word	0x08001420
 800086c:	08001420 	.word	0x08001420
 8000870:	08001424 	.word	0x08001424

08000874 <__retarget_lock_acquire_recursive>:
 8000874:	4770      	bx	lr

08000876 <__retarget_lock_release_recursive>:
 8000876:	4770      	bx	lr

08000878 <_free_r>:
 8000878:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800087a:	2900      	cmp	r1, #0
 800087c:	d044      	beq.n	8000908 <_free_r+0x90>
 800087e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000882:	9001      	str	r0, [sp, #4]
 8000884:	2b00      	cmp	r3, #0
 8000886:	f1a1 0404 	sub.w	r4, r1, #4
 800088a:	bfb8      	it	lt
 800088c:	18e4      	addlt	r4, r4, r3
 800088e:	f000 f8df 	bl	8000a50 <__malloc_lock>
 8000892:	4a1e      	ldr	r2, [pc, #120]	; (800090c <_free_r+0x94>)
 8000894:	9801      	ldr	r0, [sp, #4]
 8000896:	6813      	ldr	r3, [r2, #0]
 8000898:	b933      	cbnz	r3, 80008a8 <_free_r+0x30>
 800089a:	6063      	str	r3, [r4, #4]
 800089c:	6014      	str	r4, [r2, #0]
 800089e:	b003      	add	sp, #12
 80008a0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80008a4:	f000 b8da 	b.w	8000a5c <__malloc_unlock>
 80008a8:	42a3      	cmp	r3, r4
 80008aa:	d908      	bls.n	80008be <_free_r+0x46>
 80008ac:	6825      	ldr	r5, [r4, #0]
 80008ae:	1961      	adds	r1, r4, r5
 80008b0:	428b      	cmp	r3, r1
 80008b2:	bf01      	itttt	eq
 80008b4:	6819      	ldreq	r1, [r3, #0]
 80008b6:	685b      	ldreq	r3, [r3, #4]
 80008b8:	1949      	addeq	r1, r1, r5
 80008ba:	6021      	streq	r1, [r4, #0]
 80008bc:	e7ed      	b.n	800089a <_free_r+0x22>
 80008be:	461a      	mov	r2, r3
 80008c0:	685b      	ldr	r3, [r3, #4]
 80008c2:	b10b      	cbz	r3, 80008c8 <_free_r+0x50>
 80008c4:	42a3      	cmp	r3, r4
 80008c6:	d9fa      	bls.n	80008be <_free_r+0x46>
 80008c8:	6811      	ldr	r1, [r2, #0]
 80008ca:	1855      	adds	r5, r2, r1
 80008cc:	42a5      	cmp	r5, r4
 80008ce:	d10b      	bne.n	80008e8 <_free_r+0x70>
 80008d0:	6824      	ldr	r4, [r4, #0]
 80008d2:	4421      	add	r1, r4
 80008d4:	1854      	adds	r4, r2, r1
 80008d6:	42a3      	cmp	r3, r4
 80008d8:	6011      	str	r1, [r2, #0]
 80008da:	d1e0      	bne.n	800089e <_free_r+0x26>
 80008dc:	681c      	ldr	r4, [r3, #0]
 80008de:	685b      	ldr	r3, [r3, #4]
 80008e0:	6053      	str	r3, [r2, #4]
 80008e2:	440c      	add	r4, r1
 80008e4:	6014      	str	r4, [r2, #0]
 80008e6:	e7da      	b.n	800089e <_free_r+0x26>
 80008e8:	d902      	bls.n	80008f0 <_free_r+0x78>
 80008ea:	230c      	movs	r3, #12
 80008ec:	6003      	str	r3, [r0, #0]
 80008ee:	e7d6      	b.n	800089e <_free_r+0x26>
 80008f0:	6825      	ldr	r5, [r4, #0]
 80008f2:	1961      	adds	r1, r4, r5
 80008f4:	428b      	cmp	r3, r1
 80008f6:	bf04      	itt	eq
 80008f8:	6819      	ldreq	r1, [r3, #0]
 80008fa:	685b      	ldreq	r3, [r3, #4]
 80008fc:	6063      	str	r3, [r4, #4]
 80008fe:	bf04      	itt	eq
 8000900:	1949      	addeq	r1, r1, r5
 8000902:	6021      	streq	r1, [r4, #0]
 8000904:	6054      	str	r4, [r2, #4]
 8000906:	e7ca      	b.n	800089e <_free_r+0x26>
 8000908:	b003      	add	sp, #12
 800090a:	bd30      	pop	{r4, r5, pc}
 800090c:	200001c0 	.word	0x200001c0

08000910 <sbrk_aligned>:
 8000910:	b570      	push	{r4, r5, r6, lr}
 8000912:	4e0e      	ldr	r6, [pc, #56]	; (800094c <sbrk_aligned+0x3c>)
 8000914:	460c      	mov	r4, r1
 8000916:	6831      	ldr	r1, [r6, #0]
 8000918:	4605      	mov	r5, r0
 800091a:	b911      	cbnz	r1, 8000922 <sbrk_aligned+0x12>
 800091c:	f000 fcbc 	bl	8001298 <_sbrk_r>
 8000920:	6030      	str	r0, [r6, #0]
 8000922:	4621      	mov	r1, r4
 8000924:	4628      	mov	r0, r5
 8000926:	f000 fcb7 	bl	8001298 <_sbrk_r>
 800092a:	1c43      	adds	r3, r0, #1
 800092c:	d00a      	beq.n	8000944 <sbrk_aligned+0x34>
 800092e:	1cc4      	adds	r4, r0, #3
 8000930:	f024 0403 	bic.w	r4, r4, #3
 8000934:	42a0      	cmp	r0, r4
 8000936:	d007      	beq.n	8000948 <sbrk_aligned+0x38>
 8000938:	1a21      	subs	r1, r4, r0
 800093a:	4628      	mov	r0, r5
 800093c:	f000 fcac 	bl	8001298 <_sbrk_r>
 8000940:	3001      	adds	r0, #1
 8000942:	d101      	bne.n	8000948 <sbrk_aligned+0x38>
 8000944:	f04f 34ff 	mov.w	r4, #4294967295
 8000948:	4620      	mov	r0, r4
 800094a:	bd70      	pop	{r4, r5, r6, pc}
 800094c:	200001c4 	.word	0x200001c4

08000950 <_malloc_r>:
 8000950:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000954:	1ccd      	adds	r5, r1, #3
 8000956:	f025 0503 	bic.w	r5, r5, #3
 800095a:	3508      	adds	r5, #8
 800095c:	2d0c      	cmp	r5, #12
 800095e:	bf38      	it	cc
 8000960:	250c      	movcc	r5, #12
 8000962:	2d00      	cmp	r5, #0
 8000964:	4607      	mov	r7, r0
 8000966:	db01      	blt.n	800096c <_malloc_r+0x1c>
 8000968:	42a9      	cmp	r1, r5
 800096a:	d905      	bls.n	8000978 <_malloc_r+0x28>
 800096c:	230c      	movs	r3, #12
 800096e:	603b      	str	r3, [r7, #0]
 8000970:	2600      	movs	r6, #0
 8000972:	4630      	mov	r0, r6
 8000974:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000978:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a4c <_malloc_r+0xfc>
 800097c:	f000 f868 	bl	8000a50 <__malloc_lock>
 8000980:	f8d8 3000 	ldr.w	r3, [r8]
 8000984:	461c      	mov	r4, r3
 8000986:	bb5c      	cbnz	r4, 80009e0 <_malloc_r+0x90>
 8000988:	4629      	mov	r1, r5
 800098a:	4638      	mov	r0, r7
 800098c:	f7ff ffc0 	bl	8000910 <sbrk_aligned>
 8000990:	1c43      	adds	r3, r0, #1
 8000992:	4604      	mov	r4, r0
 8000994:	d155      	bne.n	8000a42 <_malloc_r+0xf2>
 8000996:	f8d8 4000 	ldr.w	r4, [r8]
 800099a:	4626      	mov	r6, r4
 800099c:	2e00      	cmp	r6, #0
 800099e:	d145      	bne.n	8000a2c <_malloc_r+0xdc>
 80009a0:	2c00      	cmp	r4, #0
 80009a2:	d048      	beq.n	8000a36 <_malloc_r+0xe6>
 80009a4:	6823      	ldr	r3, [r4, #0]
 80009a6:	4631      	mov	r1, r6
 80009a8:	4638      	mov	r0, r7
 80009aa:	eb04 0903 	add.w	r9, r4, r3
 80009ae:	f000 fc73 	bl	8001298 <_sbrk_r>
 80009b2:	4581      	cmp	r9, r0
 80009b4:	d13f      	bne.n	8000a36 <_malloc_r+0xe6>
 80009b6:	6821      	ldr	r1, [r4, #0]
 80009b8:	1a6d      	subs	r5, r5, r1
 80009ba:	4629      	mov	r1, r5
 80009bc:	4638      	mov	r0, r7
 80009be:	f7ff ffa7 	bl	8000910 <sbrk_aligned>
 80009c2:	3001      	adds	r0, #1
 80009c4:	d037      	beq.n	8000a36 <_malloc_r+0xe6>
 80009c6:	6823      	ldr	r3, [r4, #0]
 80009c8:	442b      	add	r3, r5
 80009ca:	6023      	str	r3, [r4, #0]
 80009cc:	f8d8 3000 	ldr.w	r3, [r8]
 80009d0:	2b00      	cmp	r3, #0
 80009d2:	d038      	beq.n	8000a46 <_malloc_r+0xf6>
 80009d4:	685a      	ldr	r2, [r3, #4]
 80009d6:	42a2      	cmp	r2, r4
 80009d8:	d12b      	bne.n	8000a32 <_malloc_r+0xe2>
 80009da:	2200      	movs	r2, #0
 80009dc:	605a      	str	r2, [r3, #4]
 80009de:	e00f      	b.n	8000a00 <_malloc_r+0xb0>
 80009e0:	6822      	ldr	r2, [r4, #0]
 80009e2:	1b52      	subs	r2, r2, r5
 80009e4:	d41f      	bmi.n	8000a26 <_malloc_r+0xd6>
 80009e6:	2a0b      	cmp	r2, #11
 80009e8:	d917      	bls.n	8000a1a <_malloc_r+0xca>
 80009ea:	1961      	adds	r1, r4, r5
 80009ec:	42a3      	cmp	r3, r4
 80009ee:	6025      	str	r5, [r4, #0]
 80009f0:	bf18      	it	ne
 80009f2:	6059      	strne	r1, [r3, #4]
 80009f4:	6863      	ldr	r3, [r4, #4]
 80009f6:	bf08      	it	eq
 80009f8:	f8c8 1000 	streq.w	r1, [r8]
 80009fc:	5162      	str	r2, [r4, r5]
 80009fe:	604b      	str	r3, [r1, #4]
 8000a00:	4638      	mov	r0, r7
 8000a02:	f104 060b 	add.w	r6, r4, #11
 8000a06:	f000 f829 	bl	8000a5c <__malloc_unlock>
 8000a0a:	f026 0607 	bic.w	r6, r6, #7
 8000a0e:	1d23      	adds	r3, r4, #4
 8000a10:	1af2      	subs	r2, r6, r3
 8000a12:	d0ae      	beq.n	8000972 <_malloc_r+0x22>
 8000a14:	1b9b      	subs	r3, r3, r6
 8000a16:	50a3      	str	r3, [r4, r2]
 8000a18:	e7ab      	b.n	8000972 <_malloc_r+0x22>
 8000a1a:	42a3      	cmp	r3, r4
 8000a1c:	6862      	ldr	r2, [r4, #4]
 8000a1e:	d1dd      	bne.n	80009dc <_malloc_r+0x8c>
 8000a20:	f8c8 2000 	str.w	r2, [r8]
 8000a24:	e7ec      	b.n	8000a00 <_malloc_r+0xb0>
 8000a26:	4623      	mov	r3, r4
 8000a28:	6864      	ldr	r4, [r4, #4]
 8000a2a:	e7ac      	b.n	8000986 <_malloc_r+0x36>
 8000a2c:	4634      	mov	r4, r6
 8000a2e:	6876      	ldr	r6, [r6, #4]
 8000a30:	e7b4      	b.n	800099c <_malloc_r+0x4c>
 8000a32:	4613      	mov	r3, r2
 8000a34:	e7cc      	b.n	80009d0 <_malloc_r+0x80>
 8000a36:	230c      	movs	r3, #12
 8000a38:	603b      	str	r3, [r7, #0]
 8000a3a:	4638      	mov	r0, r7
 8000a3c:	f000 f80e 	bl	8000a5c <__malloc_unlock>
 8000a40:	e797      	b.n	8000972 <_malloc_r+0x22>
 8000a42:	6025      	str	r5, [r4, #0]
 8000a44:	e7dc      	b.n	8000a00 <_malloc_r+0xb0>
 8000a46:	605b      	str	r3, [r3, #4]
 8000a48:	deff      	udf	#255	; 0xff
 8000a4a:	bf00      	nop
 8000a4c:	200001c0 	.word	0x200001c0

08000a50 <__malloc_lock>:
 8000a50:	4801      	ldr	r0, [pc, #4]	; (8000a58 <__malloc_lock+0x8>)
 8000a52:	f7ff bf0f 	b.w	8000874 <__retarget_lock_acquire_recursive>
 8000a56:	bf00      	nop
 8000a58:	200001bc 	.word	0x200001bc

08000a5c <__malloc_unlock>:
 8000a5c:	4801      	ldr	r0, [pc, #4]	; (8000a64 <__malloc_unlock+0x8>)
 8000a5e:	f7ff bf0a 	b.w	8000876 <__retarget_lock_release_recursive>
 8000a62:	bf00      	nop
 8000a64:	200001bc 	.word	0x200001bc

08000a68 <__sfputc_r>:
 8000a68:	6893      	ldr	r3, [r2, #8]
 8000a6a:	3b01      	subs	r3, #1
 8000a6c:	2b00      	cmp	r3, #0
 8000a6e:	b410      	push	{r4}
 8000a70:	6093      	str	r3, [r2, #8]
 8000a72:	da08      	bge.n	8000a86 <__sfputc_r+0x1e>
 8000a74:	6994      	ldr	r4, [r2, #24]
 8000a76:	42a3      	cmp	r3, r4
 8000a78:	db01      	blt.n	8000a7e <__sfputc_r+0x16>
 8000a7a:	290a      	cmp	r1, #10
 8000a7c:	d103      	bne.n	8000a86 <__sfputc_r+0x1e>
 8000a7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a82:	f000 bb73 	b.w	800116c <__swbuf_r>
 8000a86:	6813      	ldr	r3, [r2, #0]
 8000a88:	1c58      	adds	r0, r3, #1
 8000a8a:	6010      	str	r0, [r2, #0]
 8000a8c:	7019      	strb	r1, [r3, #0]
 8000a8e:	4608      	mov	r0, r1
 8000a90:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a94:	4770      	bx	lr

08000a96 <__sfputs_r>:
 8000a96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a98:	4606      	mov	r6, r0
 8000a9a:	460f      	mov	r7, r1
 8000a9c:	4614      	mov	r4, r2
 8000a9e:	18d5      	adds	r5, r2, r3
 8000aa0:	42ac      	cmp	r4, r5
 8000aa2:	d101      	bne.n	8000aa8 <__sfputs_r+0x12>
 8000aa4:	2000      	movs	r0, #0
 8000aa6:	e007      	b.n	8000ab8 <__sfputs_r+0x22>
 8000aa8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000aac:	463a      	mov	r2, r7
 8000aae:	4630      	mov	r0, r6
 8000ab0:	f7ff ffda 	bl	8000a68 <__sfputc_r>
 8000ab4:	1c43      	adds	r3, r0, #1
 8000ab6:	d1f3      	bne.n	8000aa0 <__sfputs_r+0xa>
 8000ab8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000abc <_vfiprintf_r>:
 8000abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ac0:	460d      	mov	r5, r1
 8000ac2:	b09d      	sub	sp, #116	; 0x74
 8000ac4:	4614      	mov	r4, r2
 8000ac6:	4698      	mov	r8, r3
 8000ac8:	4606      	mov	r6, r0
 8000aca:	b118      	cbz	r0, 8000ad4 <_vfiprintf_r+0x18>
 8000acc:	6a03      	ldr	r3, [r0, #32]
 8000ace:	b90b      	cbnz	r3, 8000ad4 <_vfiprintf_r+0x18>
 8000ad0:	f7ff fdcc 	bl	800066c <__sinit>
 8000ad4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ad6:	07d9      	lsls	r1, r3, #31
 8000ad8:	d405      	bmi.n	8000ae6 <_vfiprintf_r+0x2a>
 8000ada:	89ab      	ldrh	r3, [r5, #12]
 8000adc:	059a      	lsls	r2, r3, #22
 8000ade:	d402      	bmi.n	8000ae6 <_vfiprintf_r+0x2a>
 8000ae0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ae2:	f7ff fec7 	bl	8000874 <__retarget_lock_acquire_recursive>
 8000ae6:	89ab      	ldrh	r3, [r5, #12]
 8000ae8:	071b      	lsls	r3, r3, #28
 8000aea:	d501      	bpl.n	8000af0 <_vfiprintf_r+0x34>
 8000aec:	692b      	ldr	r3, [r5, #16]
 8000aee:	b99b      	cbnz	r3, 8000b18 <_vfiprintf_r+0x5c>
 8000af0:	4629      	mov	r1, r5
 8000af2:	4630      	mov	r0, r6
 8000af4:	f000 fb78 	bl	80011e8 <__swsetup_r>
 8000af8:	b170      	cbz	r0, 8000b18 <_vfiprintf_r+0x5c>
 8000afa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000afc:	07dc      	lsls	r4, r3, #31
 8000afe:	d504      	bpl.n	8000b0a <_vfiprintf_r+0x4e>
 8000b00:	f04f 30ff 	mov.w	r0, #4294967295
 8000b04:	b01d      	add	sp, #116	; 0x74
 8000b06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b0a:	89ab      	ldrh	r3, [r5, #12]
 8000b0c:	0598      	lsls	r0, r3, #22
 8000b0e:	d4f7      	bmi.n	8000b00 <_vfiprintf_r+0x44>
 8000b10:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b12:	f7ff feb0 	bl	8000876 <__retarget_lock_release_recursive>
 8000b16:	e7f3      	b.n	8000b00 <_vfiprintf_r+0x44>
 8000b18:	2300      	movs	r3, #0
 8000b1a:	9309      	str	r3, [sp, #36]	; 0x24
 8000b1c:	2320      	movs	r3, #32
 8000b1e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b22:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b26:	2330      	movs	r3, #48	; 0x30
 8000b28:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000cdc <_vfiprintf_r+0x220>
 8000b2c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b30:	f04f 0901 	mov.w	r9, #1
 8000b34:	4623      	mov	r3, r4
 8000b36:	469a      	mov	sl, r3
 8000b38:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b3c:	b10a      	cbz	r2, 8000b42 <_vfiprintf_r+0x86>
 8000b3e:	2a25      	cmp	r2, #37	; 0x25
 8000b40:	d1f9      	bne.n	8000b36 <_vfiprintf_r+0x7a>
 8000b42:	ebba 0b04 	subs.w	fp, sl, r4
 8000b46:	d00b      	beq.n	8000b60 <_vfiprintf_r+0xa4>
 8000b48:	465b      	mov	r3, fp
 8000b4a:	4622      	mov	r2, r4
 8000b4c:	4629      	mov	r1, r5
 8000b4e:	4630      	mov	r0, r6
 8000b50:	f7ff ffa1 	bl	8000a96 <__sfputs_r>
 8000b54:	3001      	adds	r0, #1
 8000b56:	f000 80a9 	beq.w	8000cac <_vfiprintf_r+0x1f0>
 8000b5a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b5c:	445a      	add	r2, fp
 8000b5e:	9209      	str	r2, [sp, #36]	; 0x24
 8000b60:	f89a 3000 	ldrb.w	r3, [sl]
 8000b64:	2b00      	cmp	r3, #0
 8000b66:	f000 80a1 	beq.w	8000cac <_vfiprintf_r+0x1f0>
 8000b6a:	2300      	movs	r3, #0
 8000b6c:	f04f 32ff 	mov.w	r2, #4294967295
 8000b70:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b74:	f10a 0a01 	add.w	sl, sl, #1
 8000b78:	9304      	str	r3, [sp, #16]
 8000b7a:	9307      	str	r3, [sp, #28]
 8000b7c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b80:	931a      	str	r3, [sp, #104]	; 0x68
 8000b82:	4654      	mov	r4, sl
 8000b84:	2205      	movs	r2, #5
 8000b86:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b8a:	4854      	ldr	r0, [pc, #336]	; (8000cdc <_vfiprintf_r+0x220>)
 8000b8c:	f7ff fb28 	bl	80001e0 <memchr>
 8000b90:	9a04      	ldr	r2, [sp, #16]
 8000b92:	b9d8      	cbnz	r0, 8000bcc <_vfiprintf_r+0x110>
 8000b94:	06d1      	lsls	r1, r2, #27
 8000b96:	bf44      	itt	mi
 8000b98:	2320      	movmi	r3, #32
 8000b9a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b9e:	0713      	lsls	r3, r2, #28
 8000ba0:	bf44      	itt	mi
 8000ba2:	232b      	movmi	r3, #43	; 0x2b
 8000ba4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ba8:	f89a 3000 	ldrb.w	r3, [sl]
 8000bac:	2b2a      	cmp	r3, #42	; 0x2a
 8000bae:	d015      	beq.n	8000bdc <_vfiprintf_r+0x120>
 8000bb0:	9a07      	ldr	r2, [sp, #28]
 8000bb2:	4654      	mov	r4, sl
 8000bb4:	2000      	movs	r0, #0
 8000bb6:	f04f 0c0a 	mov.w	ip, #10
 8000bba:	4621      	mov	r1, r4
 8000bbc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bc0:	3b30      	subs	r3, #48	; 0x30
 8000bc2:	2b09      	cmp	r3, #9
 8000bc4:	d94d      	bls.n	8000c62 <_vfiprintf_r+0x1a6>
 8000bc6:	b1b0      	cbz	r0, 8000bf6 <_vfiprintf_r+0x13a>
 8000bc8:	9207      	str	r2, [sp, #28]
 8000bca:	e014      	b.n	8000bf6 <_vfiprintf_r+0x13a>
 8000bcc:	eba0 0308 	sub.w	r3, r0, r8
 8000bd0:	fa09 f303 	lsl.w	r3, r9, r3
 8000bd4:	4313      	orrs	r3, r2
 8000bd6:	9304      	str	r3, [sp, #16]
 8000bd8:	46a2      	mov	sl, r4
 8000bda:	e7d2      	b.n	8000b82 <_vfiprintf_r+0xc6>
 8000bdc:	9b03      	ldr	r3, [sp, #12]
 8000bde:	1d19      	adds	r1, r3, #4
 8000be0:	681b      	ldr	r3, [r3, #0]
 8000be2:	9103      	str	r1, [sp, #12]
 8000be4:	2b00      	cmp	r3, #0
 8000be6:	bfbb      	ittet	lt
 8000be8:	425b      	neglt	r3, r3
 8000bea:	f042 0202 	orrlt.w	r2, r2, #2
 8000bee:	9307      	strge	r3, [sp, #28]
 8000bf0:	9307      	strlt	r3, [sp, #28]
 8000bf2:	bfb8      	it	lt
 8000bf4:	9204      	strlt	r2, [sp, #16]
 8000bf6:	7823      	ldrb	r3, [r4, #0]
 8000bf8:	2b2e      	cmp	r3, #46	; 0x2e
 8000bfa:	d10c      	bne.n	8000c16 <_vfiprintf_r+0x15a>
 8000bfc:	7863      	ldrb	r3, [r4, #1]
 8000bfe:	2b2a      	cmp	r3, #42	; 0x2a
 8000c00:	d134      	bne.n	8000c6c <_vfiprintf_r+0x1b0>
 8000c02:	9b03      	ldr	r3, [sp, #12]
 8000c04:	1d1a      	adds	r2, r3, #4
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	9203      	str	r2, [sp, #12]
 8000c0a:	2b00      	cmp	r3, #0
 8000c0c:	bfb8      	it	lt
 8000c0e:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c12:	3402      	adds	r4, #2
 8000c14:	9305      	str	r3, [sp, #20]
 8000c16:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000cec <_vfiprintf_r+0x230>
 8000c1a:	7821      	ldrb	r1, [r4, #0]
 8000c1c:	2203      	movs	r2, #3
 8000c1e:	4650      	mov	r0, sl
 8000c20:	f7ff fade 	bl	80001e0 <memchr>
 8000c24:	b138      	cbz	r0, 8000c36 <_vfiprintf_r+0x17a>
 8000c26:	9b04      	ldr	r3, [sp, #16]
 8000c28:	eba0 000a 	sub.w	r0, r0, sl
 8000c2c:	2240      	movs	r2, #64	; 0x40
 8000c2e:	4082      	lsls	r2, r0
 8000c30:	4313      	orrs	r3, r2
 8000c32:	3401      	adds	r4, #1
 8000c34:	9304      	str	r3, [sp, #16]
 8000c36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c3a:	4829      	ldr	r0, [pc, #164]	; (8000ce0 <_vfiprintf_r+0x224>)
 8000c3c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c40:	2206      	movs	r2, #6
 8000c42:	f7ff facd 	bl	80001e0 <memchr>
 8000c46:	2800      	cmp	r0, #0
 8000c48:	d03f      	beq.n	8000cca <_vfiprintf_r+0x20e>
 8000c4a:	4b26      	ldr	r3, [pc, #152]	; (8000ce4 <_vfiprintf_r+0x228>)
 8000c4c:	bb1b      	cbnz	r3, 8000c96 <_vfiprintf_r+0x1da>
 8000c4e:	9b03      	ldr	r3, [sp, #12]
 8000c50:	3307      	adds	r3, #7
 8000c52:	f023 0307 	bic.w	r3, r3, #7
 8000c56:	3308      	adds	r3, #8
 8000c58:	9303      	str	r3, [sp, #12]
 8000c5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c5c:	443b      	add	r3, r7
 8000c5e:	9309      	str	r3, [sp, #36]	; 0x24
 8000c60:	e768      	b.n	8000b34 <_vfiprintf_r+0x78>
 8000c62:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c66:	460c      	mov	r4, r1
 8000c68:	2001      	movs	r0, #1
 8000c6a:	e7a6      	b.n	8000bba <_vfiprintf_r+0xfe>
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	3401      	adds	r4, #1
 8000c70:	9305      	str	r3, [sp, #20]
 8000c72:	4619      	mov	r1, r3
 8000c74:	f04f 0c0a 	mov.w	ip, #10
 8000c78:	4620      	mov	r0, r4
 8000c7a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c7e:	3a30      	subs	r2, #48	; 0x30
 8000c80:	2a09      	cmp	r2, #9
 8000c82:	d903      	bls.n	8000c8c <_vfiprintf_r+0x1d0>
 8000c84:	2b00      	cmp	r3, #0
 8000c86:	d0c6      	beq.n	8000c16 <_vfiprintf_r+0x15a>
 8000c88:	9105      	str	r1, [sp, #20]
 8000c8a:	e7c4      	b.n	8000c16 <_vfiprintf_r+0x15a>
 8000c8c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c90:	4604      	mov	r4, r0
 8000c92:	2301      	movs	r3, #1
 8000c94:	e7f0      	b.n	8000c78 <_vfiprintf_r+0x1bc>
 8000c96:	ab03      	add	r3, sp, #12
 8000c98:	9300      	str	r3, [sp, #0]
 8000c9a:	462a      	mov	r2, r5
 8000c9c:	4b12      	ldr	r3, [pc, #72]	; (8000ce8 <_vfiprintf_r+0x22c>)
 8000c9e:	a904      	add	r1, sp, #16
 8000ca0:	4630      	mov	r0, r6
 8000ca2:	f3af 8000 	nop.w
 8000ca6:	4607      	mov	r7, r0
 8000ca8:	1c78      	adds	r0, r7, #1
 8000caa:	d1d6      	bne.n	8000c5a <_vfiprintf_r+0x19e>
 8000cac:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cae:	07d9      	lsls	r1, r3, #31
 8000cb0:	d405      	bmi.n	8000cbe <_vfiprintf_r+0x202>
 8000cb2:	89ab      	ldrh	r3, [r5, #12]
 8000cb4:	059a      	lsls	r2, r3, #22
 8000cb6:	d402      	bmi.n	8000cbe <_vfiprintf_r+0x202>
 8000cb8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cba:	f7ff fddc 	bl	8000876 <__retarget_lock_release_recursive>
 8000cbe:	89ab      	ldrh	r3, [r5, #12]
 8000cc0:	065b      	lsls	r3, r3, #25
 8000cc2:	f53f af1d 	bmi.w	8000b00 <_vfiprintf_r+0x44>
 8000cc6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000cc8:	e71c      	b.n	8000b04 <_vfiprintf_r+0x48>
 8000cca:	ab03      	add	r3, sp, #12
 8000ccc:	9300      	str	r3, [sp, #0]
 8000cce:	462a      	mov	r2, r5
 8000cd0:	4b05      	ldr	r3, [pc, #20]	; (8000ce8 <_vfiprintf_r+0x22c>)
 8000cd2:	a904      	add	r1, sp, #16
 8000cd4:	4630      	mov	r0, r6
 8000cd6:	f000 f879 	bl	8000dcc <_printf_i>
 8000cda:	e7e4      	b.n	8000ca6 <_vfiprintf_r+0x1ea>
 8000cdc:	080013ea 	.word	0x080013ea
 8000ce0:	080013f4 	.word	0x080013f4
 8000ce4:	00000000 	.word	0x00000000
 8000ce8:	08000a97 	.word	0x08000a97
 8000cec:	080013f0 	.word	0x080013f0

08000cf0 <_printf_common>:
 8000cf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cf4:	4616      	mov	r6, r2
 8000cf6:	4699      	mov	r9, r3
 8000cf8:	688a      	ldr	r2, [r1, #8]
 8000cfa:	690b      	ldr	r3, [r1, #16]
 8000cfc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d00:	4293      	cmp	r3, r2
 8000d02:	bfb8      	it	lt
 8000d04:	4613      	movlt	r3, r2
 8000d06:	6033      	str	r3, [r6, #0]
 8000d08:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d0c:	4607      	mov	r7, r0
 8000d0e:	460c      	mov	r4, r1
 8000d10:	b10a      	cbz	r2, 8000d16 <_printf_common+0x26>
 8000d12:	3301      	adds	r3, #1
 8000d14:	6033      	str	r3, [r6, #0]
 8000d16:	6823      	ldr	r3, [r4, #0]
 8000d18:	0699      	lsls	r1, r3, #26
 8000d1a:	bf42      	ittt	mi
 8000d1c:	6833      	ldrmi	r3, [r6, #0]
 8000d1e:	3302      	addmi	r3, #2
 8000d20:	6033      	strmi	r3, [r6, #0]
 8000d22:	6825      	ldr	r5, [r4, #0]
 8000d24:	f015 0506 	ands.w	r5, r5, #6
 8000d28:	d106      	bne.n	8000d38 <_printf_common+0x48>
 8000d2a:	f104 0a19 	add.w	sl, r4, #25
 8000d2e:	68e3      	ldr	r3, [r4, #12]
 8000d30:	6832      	ldr	r2, [r6, #0]
 8000d32:	1a9b      	subs	r3, r3, r2
 8000d34:	42ab      	cmp	r3, r5
 8000d36:	dc26      	bgt.n	8000d86 <_printf_common+0x96>
 8000d38:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000d3c:	1e13      	subs	r3, r2, #0
 8000d3e:	6822      	ldr	r2, [r4, #0]
 8000d40:	bf18      	it	ne
 8000d42:	2301      	movne	r3, #1
 8000d44:	0692      	lsls	r2, r2, #26
 8000d46:	d42b      	bmi.n	8000da0 <_printf_common+0xb0>
 8000d48:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d4c:	4649      	mov	r1, r9
 8000d4e:	4638      	mov	r0, r7
 8000d50:	47c0      	blx	r8
 8000d52:	3001      	adds	r0, #1
 8000d54:	d01e      	beq.n	8000d94 <_printf_common+0xa4>
 8000d56:	6823      	ldr	r3, [r4, #0]
 8000d58:	6922      	ldr	r2, [r4, #16]
 8000d5a:	f003 0306 	and.w	r3, r3, #6
 8000d5e:	2b04      	cmp	r3, #4
 8000d60:	bf02      	ittt	eq
 8000d62:	68e5      	ldreq	r5, [r4, #12]
 8000d64:	6833      	ldreq	r3, [r6, #0]
 8000d66:	1aed      	subeq	r5, r5, r3
 8000d68:	68a3      	ldr	r3, [r4, #8]
 8000d6a:	bf0c      	ite	eq
 8000d6c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d70:	2500      	movne	r5, #0
 8000d72:	4293      	cmp	r3, r2
 8000d74:	bfc4      	itt	gt
 8000d76:	1a9b      	subgt	r3, r3, r2
 8000d78:	18ed      	addgt	r5, r5, r3
 8000d7a:	2600      	movs	r6, #0
 8000d7c:	341a      	adds	r4, #26
 8000d7e:	42b5      	cmp	r5, r6
 8000d80:	d11a      	bne.n	8000db8 <_printf_common+0xc8>
 8000d82:	2000      	movs	r0, #0
 8000d84:	e008      	b.n	8000d98 <_printf_common+0xa8>
 8000d86:	2301      	movs	r3, #1
 8000d88:	4652      	mov	r2, sl
 8000d8a:	4649      	mov	r1, r9
 8000d8c:	4638      	mov	r0, r7
 8000d8e:	47c0      	blx	r8
 8000d90:	3001      	adds	r0, #1
 8000d92:	d103      	bne.n	8000d9c <_printf_common+0xac>
 8000d94:	f04f 30ff 	mov.w	r0, #4294967295
 8000d98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d9c:	3501      	adds	r5, #1
 8000d9e:	e7c6      	b.n	8000d2e <_printf_common+0x3e>
 8000da0:	18e1      	adds	r1, r4, r3
 8000da2:	1c5a      	adds	r2, r3, #1
 8000da4:	2030      	movs	r0, #48	; 0x30
 8000da6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000daa:	4422      	add	r2, r4
 8000dac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000db0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000db4:	3302      	adds	r3, #2
 8000db6:	e7c7      	b.n	8000d48 <_printf_common+0x58>
 8000db8:	2301      	movs	r3, #1
 8000dba:	4622      	mov	r2, r4
 8000dbc:	4649      	mov	r1, r9
 8000dbe:	4638      	mov	r0, r7
 8000dc0:	47c0      	blx	r8
 8000dc2:	3001      	adds	r0, #1
 8000dc4:	d0e6      	beq.n	8000d94 <_printf_common+0xa4>
 8000dc6:	3601      	adds	r6, #1
 8000dc8:	e7d9      	b.n	8000d7e <_printf_common+0x8e>
	...

08000dcc <_printf_i>:
 8000dcc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000dd0:	7e0f      	ldrb	r7, [r1, #24]
 8000dd2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000dd4:	2f78      	cmp	r7, #120	; 0x78
 8000dd6:	4691      	mov	r9, r2
 8000dd8:	4680      	mov	r8, r0
 8000dda:	460c      	mov	r4, r1
 8000ddc:	469a      	mov	sl, r3
 8000dde:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000de2:	d807      	bhi.n	8000df4 <_printf_i+0x28>
 8000de4:	2f62      	cmp	r7, #98	; 0x62
 8000de6:	d80a      	bhi.n	8000dfe <_printf_i+0x32>
 8000de8:	2f00      	cmp	r7, #0
 8000dea:	f000 80d4 	beq.w	8000f96 <_printf_i+0x1ca>
 8000dee:	2f58      	cmp	r7, #88	; 0x58
 8000df0:	f000 80c0 	beq.w	8000f74 <_printf_i+0x1a8>
 8000df4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000df8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000dfc:	e03a      	b.n	8000e74 <_printf_i+0xa8>
 8000dfe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000e02:	2b15      	cmp	r3, #21
 8000e04:	d8f6      	bhi.n	8000df4 <_printf_i+0x28>
 8000e06:	a101      	add	r1, pc, #4	; (adr r1, 8000e0c <_printf_i+0x40>)
 8000e08:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e0c:	08000e65 	.word	0x08000e65
 8000e10:	08000e79 	.word	0x08000e79
 8000e14:	08000df5 	.word	0x08000df5
 8000e18:	08000df5 	.word	0x08000df5
 8000e1c:	08000df5 	.word	0x08000df5
 8000e20:	08000df5 	.word	0x08000df5
 8000e24:	08000e79 	.word	0x08000e79
 8000e28:	08000df5 	.word	0x08000df5
 8000e2c:	08000df5 	.word	0x08000df5
 8000e30:	08000df5 	.word	0x08000df5
 8000e34:	08000df5 	.word	0x08000df5
 8000e38:	08000f7d 	.word	0x08000f7d
 8000e3c:	08000ea5 	.word	0x08000ea5
 8000e40:	08000f37 	.word	0x08000f37
 8000e44:	08000df5 	.word	0x08000df5
 8000e48:	08000df5 	.word	0x08000df5
 8000e4c:	08000f9f 	.word	0x08000f9f
 8000e50:	08000df5 	.word	0x08000df5
 8000e54:	08000ea5 	.word	0x08000ea5
 8000e58:	08000df5 	.word	0x08000df5
 8000e5c:	08000df5 	.word	0x08000df5
 8000e60:	08000f3f 	.word	0x08000f3f
 8000e64:	682b      	ldr	r3, [r5, #0]
 8000e66:	1d1a      	adds	r2, r3, #4
 8000e68:	681b      	ldr	r3, [r3, #0]
 8000e6a:	602a      	str	r2, [r5, #0]
 8000e6c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e70:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e74:	2301      	movs	r3, #1
 8000e76:	e09f      	b.n	8000fb8 <_printf_i+0x1ec>
 8000e78:	6820      	ldr	r0, [r4, #0]
 8000e7a:	682b      	ldr	r3, [r5, #0]
 8000e7c:	0607      	lsls	r7, r0, #24
 8000e7e:	f103 0104 	add.w	r1, r3, #4
 8000e82:	6029      	str	r1, [r5, #0]
 8000e84:	d501      	bpl.n	8000e8a <_printf_i+0xbe>
 8000e86:	681e      	ldr	r6, [r3, #0]
 8000e88:	e003      	b.n	8000e92 <_printf_i+0xc6>
 8000e8a:	0646      	lsls	r6, r0, #25
 8000e8c:	d5fb      	bpl.n	8000e86 <_printf_i+0xba>
 8000e8e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000e92:	2e00      	cmp	r6, #0
 8000e94:	da03      	bge.n	8000e9e <_printf_i+0xd2>
 8000e96:	232d      	movs	r3, #45	; 0x2d
 8000e98:	4276      	negs	r6, r6
 8000e9a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e9e:	485a      	ldr	r0, [pc, #360]	; (8001008 <_printf_i+0x23c>)
 8000ea0:	230a      	movs	r3, #10
 8000ea2:	e012      	b.n	8000eca <_printf_i+0xfe>
 8000ea4:	682b      	ldr	r3, [r5, #0]
 8000ea6:	6820      	ldr	r0, [r4, #0]
 8000ea8:	1d19      	adds	r1, r3, #4
 8000eaa:	6029      	str	r1, [r5, #0]
 8000eac:	0605      	lsls	r5, r0, #24
 8000eae:	d501      	bpl.n	8000eb4 <_printf_i+0xe8>
 8000eb0:	681e      	ldr	r6, [r3, #0]
 8000eb2:	e002      	b.n	8000eba <_printf_i+0xee>
 8000eb4:	0641      	lsls	r1, r0, #25
 8000eb6:	d5fb      	bpl.n	8000eb0 <_printf_i+0xe4>
 8000eb8:	881e      	ldrh	r6, [r3, #0]
 8000eba:	4853      	ldr	r0, [pc, #332]	; (8001008 <_printf_i+0x23c>)
 8000ebc:	2f6f      	cmp	r7, #111	; 0x6f
 8000ebe:	bf0c      	ite	eq
 8000ec0:	2308      	moveq	r3, #8
 8000ec2:	230a      	movne	r3, #10
 8000ec4:	2100      	movs	r1, #0
 8000ec6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000eca:	6865      	ldr	r5, [r4, #4]
 8000ecc:	60a5      	str	r5, [r4, #8]
 8000ece:	2d00      	cmp	r5, #0
 8000ed0:	bfa2      	ittt	ge
 8000ed2:	6821      	ldrge	r1, [r4, #0]
 8000ed4:	f021 0104 	bicge.w	r1, r1, #4
 8000ed8:	6021      	strge	r1, [r4, #0]
 8000eda:	b90e      	cbnz	r6, 8000ee0 <_printf_i+0x114>
 8000edc:	2d00      	cmp	r5, #0
 8000ede:	d04b      	beq.n	8000f78 <_printf_i+0x1ac>
 8000ee0:	4615      	mov	r5, r2
 8000ee2:	fbb6 f1f3 	udiv	r1, r6, r3
 8000ee6:	fb03 6711 	mls	r7, r3, r1, r6
 8000eea:	5dc7      	ldrb	r7, [r0, r7]
 8000eec:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000ef0:	4637      	mov	r7, r6
 8000ef2:	42bb      	cmp	r3, r7
 8000ef4:	460e      	mov	r6, r1
 8000ef6:	d9f4      	bls.n	8000ee2 <_printf_i+0x116>
 8000ef8:	2b08      	cmp	r3, #8
 8000efa:	d10b      	bne.n	8000f14 <_printf_i+0x148>
 8000efc:	6823      	ldr	r3, [r4, #0]
 8000efe:	07de      	lsls	r6, r3, #31
 8000f00:	d508      	bpl.n	8000f14 <_printf_i+0x148>
 8000f02:	6923      	ldr	r3, [r4, #16]
 8000f04:	6861      	ldr	r1, [r4, #4]
 8000f06:	4299      	cmp	r1, r3
 8000f08:	bfde      	ittt	le
 8000f0a:	2330      	movle	r3, #48	; 0x30
 8000f0c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f10:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000f14:	1b52      	subs	r2, r2, r5
 8000f16:	6122      	str	r2, [r4, #16]
 8000f18:	f8cd a000 	str.w	sl, [sp]
 8000f1c:	464b      	mov	r3, r9
 8000f1e:	aa03      	add	r2, sp, #12
 8000f20:	4621      	mov	r1, r4
 8000f22:	4640      	mov	r0, r8
 8000f24:	f7ff fee4 	bl	8000cf0 <_printf_common>
 8000f28:	3001      	adds	r0, #1
 8000f2a:	d14a      	bne.n	8000fc2 <_printf_i+0x1f6>
 8000f2c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f30:	b004      	add	sp, #16
 8000f32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f36:	6823      	ldr	r3, [r4, #0]
 8000f38:	f043 0320 	orr.w	r3, r3, #32
 8000f3c:	6023      	str	r3, [r4, #0]
 8000f3e:	4833      	ldr	r0, [pc, #204]	; (800100c <_printf_i+0x240>)
 8000f40:	2778      	movs	r7, #120	; 0x78
 8000f42:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000f46:	6823      	ldr	r3, [r4, #0]
 8000f48:	6829      	ldr	r1, [r5, #0]
 8000f4a:	061f      	lsls	r7, r3, #24
 8000f4c:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f50:	d402      	bmi.n	8000f58 <_printf_i+0x18c>
 8000f52:	065f      	lsls	r7, r3, #25
 8000f54:	bf48      	it	mi
 8000f56:	b2b6      	uxthmi	r6, r6
 8000f58:	07df      	lsls	r7, r3, #31
 8000f5a:	bf48      	it	mi
 8000f5c:	f043 0320 	orrmi.w	r3, r3, #32
 8000f60:	6029      	str	r1, [r5, #0]
 8000f62:	bf48      	it	mi
 8000f64:	6023      	strmi	r3, [r4, #0]
 8000f66:	b91e      	cbnz	r6, 8000f70 <_printf_i+0x1a4>
 8000f68:	6823      	ldr	r3, [r4, #0]
 8000f6a:	f023 0320 	bic.w	r3, r3, #32
 8000f6e:	6023      	str	r3, [r4, #0]
 8000f70:	2310      	movs	r3, #16
 8000f72:	e7a7      	b.n	8000ec4 <_printf_i+0xf8>
 8000f74:	4824      	ldr	r0, [pc, #144]	; (8001008 <_printf_i+0x23c>)
 8000f76:	e7e4      	b.n	8000f42 <_printf_i+0x176>
 8000f78:	4615      	mov	r5, r2
 8000f7a:	e7bd      	b.n	8000ef8 <_printf_i+0x12c>
 8000f7c:	682b      	ldr	r3, [r5, #0]
 8000f7e:	6826      	ldr	r6, [r4, #0]
 8000f80:	6961      	ldr	r1, [r4, #20]
 8000f82:	1d18      	adds	r0, r3, #4
 8000f84:	6028      	str	r0, [r5, #0]
 8000f86:	0635      	lsls	r5, r6, #24
 8000f88:	681b      	ldr	r3, [r3, #0]
 8000f8a:	d501      	bpl.n	8000f90 <_printf_i+0x1c4>
 8000f8c:	6019      	str	r1, [r3, #0]
 8000f8e:	e002      	b.n	8000f96 <_printf_i+0x1ca>
 8000f90:	0670      	lsls	r0, r6, #25
 8000f92:	d5fb      	bpl.n	8000f8c <_printf_i+0x1c0>
 8000f94:	8019      	strh	r1, [r3, #0]
 8000f96:	2300      	movs	r3, #0
 8000f98:	6123      	str	r3, [r4, #16]
 8000f9a:	4615      	mov	r5, r2
 8000f9c:	e7bc      	b.n	8000f18 <_printf_i+0x14c>
 8000f9e:	682b      	ldr	r3, [r5, #0]
 8000fa0:	1d1a      	adds	r2, r3, #4
 8000fa2:	602a      	str	r2, [r5, #0]
 8000fa4:	681d      	ldr	r5, [r3, #0]
 8000fa6:	6862      	ldr	r2, [r4, #4]
 8000fa8:	2100      	movs	r1, #0
 8000faa:	4628      	mov	r0, r5
 8000fac:	f7ff f918 	bl	80001e0 <memchr>
 8000fb0:	b108      	cbz	r0, 8000fb6 <_printf_i+0x1ea>
 8000fb2:	1b40      	subs	r0, r0, r5
 8000fb4:	6060      	str	r0, [r4, #4]
 8000fb6:	6863      	ldr	r3, [r4, #4]
 8000fb8:	6123      	str	r3, [r4, #16]
 8000fba:	2300      	movs	r3, #0
 8000fbc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000fc0:	e7aa      	b.n	8000f18 <_printf_i+0x14c>
 8000fc2:	6923      	ldr	r3, [r4, #16]
 8000fc4:	462a      	mov	r2, r5
 8000fc6:	4649      	mov	r1, r9
 8000fc8:	4640      	mov	r0, r8
 8000fca:	47d0      	blx	sl
 8000fcc:	3001      	adds	r0, #1
 8000fce:	d0ad      	beq.n	8000f2c <_printf_i+0x160>
 8000fd0:	6823      	ldr	r3, [r4, #0]
 8000fd2:	079b      	lsls	r3, r3, #30
 8000fd4:	d413      	bmi.n	8000ffe <_printf_i+0x232>
 8000fd6:	68e0      	ldr	r0, [r4, #12]
 8000fd8:	9b03      	ldr	r3, [sp, #12]
 8000fda:	4298      	cmp	r0, r3
 8000fdc:	bfb8      	it	lt
 8000fde:	4618      	movlt	r0, r3
 8000fe0:	e7a6      	b.n	8000f30 <_printf_i+0x164>
 8000fe2:	2301      	movs	r3, #1
 8000fe4:	4632      	mov	r2, r6
 8000fe6:	4649      	mov	r1, r9
 8000fe8:	4640      	mov	r0, r8
 8000fea:	47d0      	blx	sl
 8000fec:	3001      	adds	r0, #1
 8000fee:	d09d      	beq.n	8000f2c <_printf_i+0x160>
 8000ff0:	3501      	adds	r5, #1
 8000ff2:	68e3      	ldr	r3, [r4, #12]
 8000ff4:	9903      	ldr	r1, [sp, #12]
 8000ff6:	1a5b      	subs	r3, r3, r1
 8000ff8:	42ab      	cmp	r3, r5
 8000ffa:	dcf2      	bgt.n	8000fe2 <_printf_i+0x216>
 8000ffc:	e7eb      	b.n	8000fd6 <_printf_i+0x20a>
 8000ffe:	2500      	movs	r5, #0
 8001000:	f104 0619 	add.w	r6, r4, #25
 8001004:	e7f5      	b.n	8000ff2 <_printf_i+0x226>
 8001006:	bf00      	nop
 8001008:	080013fb 	.word	0x080013fb
 800100c:	0800140c 	.word	0x0800140c

08001010 <__sflush_r>:
 8001010:	898a      	ldrh	r2, [r1, #12]
 8001012:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001016:	4605      	mov	r5, r0
 8001018:	0710      	lsls	r0, r2, #28
 800101a:	460c      	mov	r4, r1
 800101c:	d458      	bmi.n	80010d0 <__sflush_r+0xc0>
 800101e:	684b      	ldr	r3, [r1, #4]
 8001020:	2b00      	cmp	r3, #0
 8001022:	dc05      	bgt.n	8001030 <__sflush_r+0x20>
 8001024:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001026:	2b00      	cmp	r3, #0
 8001028:	dc02      	bgt.n	8001030 <__sflush_r+0x20>
 800102a:	2000      	movs	r0, #0
 800102c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001030:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001032:	2e00      	cmp	r6, #0
 8001034:	d0f9      	beq.n	800102a <__sflush_r+0x1a>
 8001036:	2300      	movs	r3, #0
 8001038:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800103c:	682f      	ldr	r7, [r5, #0]
 800103e:	6a21      	ldr	r1, [r4, #32]
 8001040:	602b      	str	r3, [r5, #0]
 8001042:	d032      	beq.n	80010aa <__sflush_r+0x9a>
 8001044:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001046:	89a3      	ldrh	r3, [r4, #12]
 8001048:	075a      	lsls	r2, r3, #29
 800104a:	d505      	bpl.n	8001058 <__sflush_r+0x48>
 800104c:	6863      	ldr	r3, [r4, #4]
 800104e:	1ac0      	subs	r0, r0, r3
 8001050:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001052:	b10b      	cbz	r3, 8001058 <__sflush_r+0x48>
 8001054:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001056:	1ac0      	subs	r0, r0, r3
 8001058:	2300      	movs	r3, #0
 800105a:	4602      	mov	r2, r0
 800105c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800105e:	6a21      	ldr	r1, [r4, #32]
 8001060:	4628      	mov	r0, r5
 8001062:	47b0      	blx	r6
 8001064:	1c43      	adds	r3, r0, #1
 8001066:	89a3      	ldrh	r3, [r4, #12]
 8001068:	d106      	bne.n	8001078 <__sflush_r+0x68>
 800106a:	6829      	ldr	r1, [r5, #0]
 800106c:	291d      	cmp	r1, #29
 800106e:	d82b      	bhi.n	80010c8 <__sflush_r+0xb8>
 8001070:	4a29      	ldr	r2, [pc, #164]	; (8001118 <__sflush_r+0x108>)
 8001072:	410a      	asrs	r2, r1
 8001074:	07d6      	lsls	r6, r2, #31
 8001076:	d427      	bmi.n	80010c8 <__sflush_r+0xb8>
 8001078:	2200      	movs	r2, #0
 800107a:	6062      	str	r2, [r4, #4]
 800107c:	04d9      	lsls	r1, r3, #19
 800107e:	6922      	ldr	r2, [r4, #16]
 8001080:	6022      	str	r2, [r4, #0]
 8001082:	d504      	bpl.n	800108e <__sflush_r+0x7e>
 8001084:	1c42      	adds	r2, r0, #1
 8001086:	d101      	bne.n	800108c <__sflush_r+0x7c>
 8001088:	682b      	ldr	r3, [r5, #0]
 800108a:	b903      	cbnz	r3, 800108e <__sflush_r+0x7e>
 800108c:	6560      	str	r0, [r4, #84]	; 0x54
 800108e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001090:	602f      	str	r7, [r5, #0]
 8001092:	2900      	cmp	r1, #0
 8001094:	d0c9      	beq.n	800102a <__sflush_r+0x1a>
 8001096:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800109a:	4299      	cmp	r1, r3
 800109c:	d002      	beq.n	80010a4 <__sflush_r+0x94>
 800109e:	4628      	mov	r0, r5
 80010a0:	f7ff fbea 	bl	8000878 <_free_r>
 80010a4:	2000      	movs	r0, #0
 80010a6:	6360      	str	r0, [r4, #52]	; 0x34
 80010a8:	e7c0      	b.n	800102c <__sflush_r+0x1c>
 80010aa:	2301      	movs	r3, #1
 80010ac:	4628      	mov	r0, r5
 80010ae:	47b0      	blx	r6
 80010b0:	1c41      	adds	r1, r0, #1
 80010b2:	d1c8      	bne.n	8001046 <__sflush_r+0x36>
 80010b4:	682b      	ldr	r3, [r5, #0]
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d0c5      	beq.n	8001046 <__sflush_r+0x36>
 80010ba:	2b1d      	cmp	r3, #29
 80010bc:	d001      	beq.n	80010c2 <__sflush_r+0xb2>
 80010be:	2b16      	cmp	r3, #22
 80010c0:	d101      	bne.n	80010c6 <__sflush_r+0xb6>
 80010c2:	602f      	str	r7, [r5, #0]
 80010c4:	e7b1      	b.n	800102a <__sflush_r+0x1a>
 80010c6:	89a3      	ldrh	r3, [r4, #12]
 80010c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010cc:	81a3      	strh	r3, [r4, #12]
 80010ce:	e7ad      	b.n	800102c <__sflush_r+0x1c>
 80010d0:	690f      	ldr	r7, [r1, #16]
 80010d2:	2f00      	cmp	r7, #0
 80010d4:	d0a9      	beq.n	800102a <__sflush_r+0x1a>
 80010d6:	0793      	lsls	r3, r2, #30
 80010d8:	680e      	ldr	r6, [r1, #0]
 80010da:	bf08      	it	eq
 80010dc:	694b      	ldreq	r3, [r1, #20]
 80010de:	600f      	str	r7, [r1, #0]
 80010e0:	bf18      	it	ne
 80010e2:	2300      	movne	r3, #0
 80010e4:	eba6 0807 	sub.w	r8, r6, r7
 80010e8:	608b      	str	r3, [r1, #8]
 80010ea:	f1b8 0f00 	cmp.w	r8, #0
 80010ee:	dd9c      	ble.n	800102a <__sflush_r+0x1a>
 80010f0:	6a21      	ldr	r1, [r4, #32]
 80010f2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80010f4:	4643      	mov	r3, r8
 80010f6:	463a      	mov	r2, r7
 80010f8:	4628      	mov	r0, r5
 80010fa:	47b0      	blx	r6
 80010fc:	2800      	cmp	r0, #0
 80010fe:	dc06      	bgt.n	800110e <__sflush_r+0xfe>
 8001100:	89a3      	ldrh	r3, [r4, #12]
 8001102:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001106:	81a3      	strh	r3, [r4, #12]
 8001108:	f04f 30ff 	mov.w	r0, #4294967295
 800110c:	e78e      	b.n	800102c <__sflush_r+0x1c>
 800110e:	4407      	add	r7, r0
 8001110:	eba8 0800 	sub.w	r8, r8, r0
 8001114:	e7e9      	b.n	80010ea <__sflush_r+0xda>
 8001116:	bf00      	nop
 8001118:	dfbffffe 	.word	0xdfbffffe

0800111c <_fflush_r>:
 800111c:	b538      	push	{r3, r4, r5, lr}
 800111e:	690b      	ldr	r3, [r1, #16]
 8001120:	4605      	mov	r5, r0
 8001122:	460c      	mov	r4, r1
 8001124:	b913      	cbnz	r3, 800112c <_fflush_r+0x10>
 8001126:	2500      	movs	r5, #0
 8001128:	4628      	mov	r0, r5
 800112a:	bd38      	pop	{r3, r4, r5, pc}
 800112c:	b118      	cbz	r0, 8001136 <_fflush_r+0x1a>
 800112e:	6a03      	ldr	r3, [r0, #32]
 8001130:	b90b      	cbnz	r3, 8001136 <_fflush_r+0x1a>
 8001132:	f7ff fa9b 	bl	800066c <__sinit>
 8001136:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800113a:	2b00      	cmp	r3, #0
 800113c:	d0f3      	beq.n	8001126 <_fflush_r+0xa>
 800113e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001140:	07d0      	lsls	r0, r2, #31
 8001142:	d404      	bmi.n	800114e <_fflush_r+0x32>
 8001144:	0599      	lsls	r1, r3, #22
 8001146:	d402      	bmi.n	800114e <_fflush_r+0x32>
 8001148:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800114a:	f7ff fb93 	bl	8000874 <__retarget_lock_acquire_recursive>
 800114e:	4628      	mov	r0, r5
 8001150:	4621      	mov	r1, r4
 8001152:	f7ff ff5d 	bl	8001010 <__sflush_r>
 8001156:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001158:	07da      	lsls	r2, r3, #31
 800115a:	4605      	mov	r5, r0
 800115c:	d4e4      	bmi.n	8001128 <_fflush_r+0xc>
 800115e:	89a3      	ldrh	r3, [r4, #12]
 8001160:	059b      	lsls	r3, r3, #22
 8001162:	d4e1      	bmi.n	8001128 <_fflush_r+0xc>
 8001164:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001166:	f7ff fb86 	bl	8000876 <__retarget_lock_release_recursive>
 800116a:	e7dd      	b.n	8001128 <_fflush_r+0xc>

0800116c <__swbuf_r>:
 800116c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800116e:	460e      	mov	r6, r1
 8001170:	4614      	mov	r4, r2
 8001172:	4605      	mov	r5, r0
 8001174:	b118      	cbz	r0, 800117e <__swbuf_r+0x12>
 8001176:	6a03      	ldr	r3, [r0, #32]
 8001178:	b90b      	cbnz	r3, 800117e <__swbuf_r+0x12>
 800117a:	f7ff fa77 	bl	800066c <__sinit>
 800117e:	69a3      	ldr	r3, [r4, #24]
 8001180:	60a3      	str	r3, [r4, #8]
 8001182:	89a3      	ldrh	r3, [r4, #12]
 8001184:	071a      	lsls	r2, r3, #28
 8001186:	d525      	bpl.n	80011d4 <__swbuf_r+0x68>
 8001188:	6923      	ldr	r3, [r4, #16]
 800118a:	b31b      	cbz	r3, 80011d4 <__swbuf_r+0x68>
 800118c:	6823      	ldr	r3, [r4, #0]
 800118e:	6922      	ldr	r2, [r4, #16]
 8001190:	1a98      	subs	r0, r3, r2
 8001192:	6963      	ldr	r3, [r4, #20]
 8001194:	b2f6      	uxtb	r6, r6
 8001196:	4283      	cmp	r3, r0
 8001198:	4637      	mov	r7, r6
 800119a:	dc04      	bgt.n	80011a6 <__swbuf_r+0x3a>
 800119c:	4621      	mov	r1, r4
 800119e:	4628      	mov	r0, r5
 80011a0:	f7ff ffbc 	bl	800111c <_fflush_r>
 80011a4:	b9e0      	cbnz	r0, 80011e0 <__swbuf_r+0x74>
 80011a6:	68a3      	ldr	r3, [r4, #8]
 80011a8:	3b01      	subs	r3, #1
 80011aa:	60a3      	str	r3, [r4, #8]
 80011ac:	6823      	ldr	r3, [r4, #0]
 80011ae:	1c5a      	adds	r2, r3, #1
 80011b0:	6022      	str	r2, [r4, #0]
 80011b2:	701e      	strb	r6, [r3, #0]
 80011b4:	6962      	ldr	r2, [r4, #20]
 80011b6:	1c43      	adds	r3, r0, #1
 80011b8:	429a      	cmp	r2, r3
 80011ba:	d004      	beq.n	80011c6 <__swbuf_r+0x5a>
 80011bc:	89a3      	ldrh	r3, [r4, #12]
 80011be:	07db      	lsls	r3, r3, #31
 80011c0:	d506      	bpl.n	80011d0 <__swbuf_r+0x64>
 80011c2:	2e0a      	cmp	r6, #10
 80011c4:	d104      	bne.n	80011d0 <__swbuf_r+0x64>
 80011c6:	4621      	mov	r1, r4
 80011c8:	4628      	mov	r0, r5
 80011ca:	f7ff ffa7 	bl	800111c <_fflush_r>
 80011ce:	b938      	cbnz	r0, 80011e0 <__swbuf_r+0x74>
 80011d0:	4638      	mov	r0, r7
 80011d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011d4:	4621      	mov	r1, r4
 80011d6:	4628      	mov	r0, r5
 80011d8:	f000 f806 	bl	80011e8 <__swsetup_r>
 80011dc:	2800      	cmp	r0, #0
 80011de:	d0d5      	beq.n	800118c <__swbuf_r+0x20>
 80011e0:	f04f 37ff 	mov.w	r7, #4294967295
 80011e4:	e7f4      	b.n	80011d0 <__swbuf_r+0x64>
	...

080011e8 <__swsetup_r>:
 80011e8:	b538      	push	{r3, r4, r5, lr}
 80011ea:	4b2a      	ldr	r3, [pc, #168]	; (8001294 <__swsetup_r+0xac>)
 80011ec:	4605      	mov	r5, r0
 80011ee:	6818      	ldr	r0, [r3, #0]
 80011f0:	460c      	mov	r4, r1
 80011f2:	b118      	cbz	r0, 80011fc <__swsetup_r+0x14>
 80011f4:	6a03      	ldr	r3, [r0, #32]
 80011f6:	b90b      	cbnz	r3, 80011fc <__swsetup_r+0x14>
 80011f8:	f7ff fa38 	bl	800066c <__sinit>
 80011fc:	89a3      	ldrh	r3, [r4, #12]
 80011fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001202:	0718      	lsls	r0, r3, #28
 8001204:	d422      	bmi.n	800124c <__swsetup_r+0x64>
 8001206:	06d9      	lsls	r1, r3, #27
 8001208:	d407      	bmi.n	800121a <__swsetup_r+0x32>
 800120a:	2309      	movs	r3, #9
 800120c:	602b      	str	r3, [r5, #0]
 800120e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001212:	81a3      	strh	r3, [r4, #12]
 8001214:	f04f 30ff 	mov.w	r0, #4294967295
 8001218:	e034      	b.n	8001284 <__swsetup_r+0x9c>
 800121a:	0758      	lsls	r0, r3, #29
 800121c:	d512      	bpl.n	8001244 <__swsetup_r+0x5c>
 800121e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001220:	b141      	cbz	r1, 8001234 <__swsetup_r+0x4c>
 8001222:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001226:	4299      	cmp	r1, r3
 8001228:	d002      	beq.n	8001230 <__swsetup_r+0x48>
 800122a:	4628      	mov	r0, r5
 800122c:	f7ff fb24 	bl	8000878 <_free_r>
 8001230:	2300      	movs	r3, #0
 8001232:	6363      	str	r3, [r4, #52]	; 0x34
 8001234:	89a3      	ldrh	r3, [r4, #12]
 8001236:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800123a:	81a3      	strh	r3, [r4, #12]
 800123c:	2300      	movs	r3, #0
 800123e:	6063      	str	r3, [r4, #4]
 8001240:	6923      	ldr	r3, [r4, #16]
 8001242:	6023      	str	r3, [r4, #0]
 8001244:	89a3      	ldrh	r3, [r4, #12]
 8001246:	f043 0308 	orr.w	r3, r3, #8
 800124a:	81a3      	strh	r3, [r4, #12]
 800124c:	6923      	ldr	r3, [r4, #16]
 800124e:	b94b      	cbnz	r3, 8001264 <__swsetup_r+0x7c>
 8001250:	89a3      	ldrh	r3, [r4, #12]
 8001252:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001256:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800125a:	d003      	beq.n	8001264 <__swsetup_r+0x7c>
 800125c:	4621      	mov	r1, r4
 800125e:	4628      	mov	r0, r5
 8001260:	f000 f850 	bl	8001304 <__smakebuf_r>
 8001264:	89a0      	ldrh	r0, [r4, #12]
 8001266:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800126a:	f010 0301 	ands.w	r3, r0, #1
 800126e:	d00a      	beq.n	8001286 <__swsetup_r+0x9e>
 8001270:	2300      	movs	r3, #0
 8001272:	60a3      	str	r3, [r4, #8]
 8001274:	6963      	ldr	r3, [r4, #20]
 8001276:	425b      	negs	r3, r3
 8001278:	61a3      	str	r3, [r4, #24]
 800127a:	6923      	ldr	r3, [r4, #16]
 800127c:	b943      	cbnz	r3, 8001290 <__swsetup_r+0xa8>
 800127e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001282:	d1c4      	bne.n	800120e <__swsetup_r+0x26>
 8001284:	bd38      	pop	{r3, r4, r5, pc}
 8001286:	0781      	lsls	r1, r0, #30
 8001288:	bf58      	it	pl
 800128a:	6963      	ldrpl	r3, [r4, #20]
 800128c:	60a3      	str	r3, [r4, #8]
 800128e:	e7f4      	b.n	800127a <__swsetup_r+0x92>
 8001290:	2000      	movs	r0, #0
 8001292:	e7f7      	b.n	8001284 <__swsetup_r+0x9c>
 8001294:	20000058 	.word	0x20000058

08001298 <_sbrk_r>:
 8001298:	b538      	push	{r3, r4, r5, lr}
 800129a:	4d06      	ldr	r5, [pc, #24]	; (80012b4 <_sbrk_r+0x1c>)
 800129c:	2300      	movs	r3, #0
 800129e:	4604      	mov	r4, r0
 80012a0:	4608      	mov	r0, r1
 80012a2:	602b      	str	r3, [r5, #0]
 80012a4:	f7ff f908 	bl	80004b8 <_sbrk>
 80012a8:	1c43      	adds	r3, r0, #1
 80012aa:	d102      	bne.n	80012b2 <_sbrk_r+0x1a>
 80012ac:	682b      	ldr	r3, [r5, #0]
 80012ae:	b103      	cbz	r3, 80012b2 <_sbrk_r+0x1a>
 80012b0:	6023      	str	r3, [r4, #0]
 80012b2:	bd38      	pop	{r3, r4, r5, pc}
 80012b4:	200001b8 	.word	0x200001b8

080012b8 <__swhatbuf_r>:
 80012b8:	b570      	push	{r4, r5, r6, lr}
 80012ba:	460c      	mov	r4, r1
 80012bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012c0:	2900      	cmp	r1, #0
 80012c2:	b096      	sub	sp, #88	; 0x58
 80012c4:	4615      	mov	r5, r2
 80012c6:	461e      	mov	r6, r3
 80012c8:	da0d      	bge.n	80012e6 <__swhatbuf_r+0x2e>
 80012ca:	89a3      	ldrh	r3, [r4, #12]
 80012cc:	f013 0f80 	tst.w	r3, #128	; 0x80
 80012d0:	f04f 0100 	mov.w	r1, #0
 80012d4:	bf0c      	ite	eq
 80012d6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80012da:	2340      	movne	r3, #64	; 0x40
 80012dc:	2000      	movs	r0, #0
 80012de:	6031      	str	r1, [r6, #0]
 80012e0:	602b      	str	r3, [r5, #0]
 80012e2:	b016      	add	sp, #88	; 0x58
 80012e4:	bd70      	pop	{r4, r5, r6, pc}
 80012e6:	466a      	mov	r2, sp
 80012e8:	f000 f848 	bl	800137c <_fstat_r>
 80012ec:	2800      	cmp	r0, #0
 80012ee:	dbec      	blt.n	80012ca <__swhatbuf_r+0x12>
 80012f0:	9901      	ldr	r1, [sp, #4]
 80012f2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80012f6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80012fa:	4259      	negs	r1, r3
 80012fc:	4159      	adcs	r1, r3
 80012fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001302:	e7eb      	b.n	80012dc <__swhatbuf_r+0x24>

08001304 <__smakebuf_r>:
 8001304:	898b      	ldrh	r3, [r1, #12]
 8001306:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001308:	079d      	lsls	r5, r3, #30
 800130a:	4606      	mov	r6, r0
 800130c:	460c      	mov	r4, r1
 800130e:	d507      	bpl.n	8001320 <__smakebuf_r+0x1c>
 8001310:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001314:	6023      	str	r3, [r4, #0]
 8001316:	6123      	str	r3, [r4, #16]
 8001318:	2301      	movs	r3, #1
 800131a:	6163      	str	r3, [r4, #20]
 800131c:	b002      	add	sp, #8
 800131e:	bd70      	pop	{r4, r5, r6, pc}
 8001320:	ab01      	add	r3, sp, #4
 8001322:	466a      	mov	r2, sp
 8001324:	f7ff ffc8 	bl	80012b8 <__swhatbuf_r>
 8001328:	9900      	ldr	r1, [sp, #0]
 800132a:	4605      	mov	r5, r0
 800132c:	4630      	mov	r0, r6
 800132e:	f7ff fb0f 	bl	8000950 <_malloc_r>
 8001332:	b948      	cbnz	r0, 8001348 <__smakebuf_r+0x44>
 8001334:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001338:	059a      	lsls	r2, r3, #22
 800133a:	d4ef      	bmi.n	800131c <__smakebuf_r+0x18>
 800133c:	f023 0303 	bic.w	r3, r3, #3
 8001340:	f043 0302 	orr.w	r3, r3, #2
 8001344:	81a3      	strh	r3, [r4, #12]
 8001346:	e7e3      	b.n	8001310 <__smakebuf_r+0xc>
 8001348:	89a3      	ldrh	r3, [r4, #12]
 800134a:	6020      	str	r0, [r4, #0]
 800134c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001350:	81a3      	strh	r3, [r4, #12]
 8001352:	9b00      	ldr	r3, [sp, #0]
 8001354:	6163      	str	r3, [r4, #20]
 8001356:	9b01      	ldr	r3, [sp, #4]
 8001358:	6120      	str	r0, [r4, #16]
 800135a:	b15b      	cbz	r3, 8001374 <__smakebuf_r+0x70>
 800135c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001360:	4630      	mov	r0, r6
 8001362:	f000 f81d 	bl	80013a0 <_isatty_r>
 8001366:	b128      	cbz	r0, 8001374 <__smakebuf_r+0x70>
 8001368:	89a3      	ldrh	r3, [r4, #12]
 800136a:	f023 0303 	bic.w	r3, r3, #3
 800136e:	f043 0301 	orr.w	r3, r3, #1
 8001372:	81a3      	strh	r3, [r4, #12]
 8001374:	89a3      	ldrh	r3, [r4, #12]
 8001376:	431d      	orrs	r5, r3
 8001378:	81a5      	strh	r5, [r4, #12]
 800137a:	e7cf      	b.n	800131c <__smakebuf_r+0x18>

0800137c <_fstat_r>:
 800137c:	b538      	push	{r3, r4, r5, lr}
 800137e:	4d07      	ldr	r5, [pc, #28]	; (800139c <_fstat_r+0x20>)
 8001380:	2300      	movs	r3, #0
 8001382:	4604      	mov	r4, r0
 8001384:	4608      	mov	r0, r1
 8001386:	4611      	mov	r1, r2
 8001388:	602b      	str	r3, [r5, #0]
 800138a:	f7ff f86c 	bl	8000466 <_fstat>
 800138e:	1c43      	adds	r3, r0, #1
 8001390:	d102      	bne.n	8001398 <_fstat_r+0x1c>
 8001392:	682b      	ldr	r3, [r5, #0]
 8001394:	b103      	cbz	r3, 8001398 <_fstat_r+0x1c>
 8001396:	6023      	str	r3, [r4, #0]
 8001398:	bd38      	pop	{r3, r4, r5, pc}
 800139a:	bf00      	nop
 800139c:	200001b8 	.word	0x200001b8

080013a0 <_isatty_r>:
 80013a0:	b538      	push	{r3, r4, r5, lr}
 80013a2:	4d06      	ldr	r5, [pc, #24]	; (80013bc <_isatty_r+0x1c>)
 80013a4:	2300      	movs	r3, #0
 80013a6:	4604      	mov	r4, r0
 80013a8:	4608      	mov	r0, r1
 80013aa:	602b      	str	r3, [r5, #0]
 80013ac:	f7ff f86b 	bl	8000486 <_isatty>
 80013b0:	1c43      	adds	r3, r0, #1
 80013b2:	d102      	bne.n	80013ba <_isatty_r+0x1a>
 80013b4:	682b      	ldr	r3, [r5, #0]
 80013b6:	b103      	cbz	r3, 80013ba <_isatty_r+0x1a>
 80013b8:	6023      	str	r3, [r4, #0]
 80013ba:	bd38      	pop	{r3, r4, r5, pc}
 80013bc:	200001b8 	.word	0x200001b8

080013c0 <_init>:
 80013c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013c2:	bf00      	nop
 80013c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013c6:	bc08      	pop	{r3}
 80013c8:	469e      	mov	lr, r3
 80013ca:	4770      	bx	lr

080013cc <_fini>:
 80013cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ce:	bf00      	nop
 80013d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d2:	bc08      	pop	{r3}
 80013d4:	469e      	mov	lr, r3
 80013d6:	4770      	bx	lr
