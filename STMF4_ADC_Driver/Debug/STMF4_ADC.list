
STMF4_ADC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011bc  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  0800135c  0800135c  0001135c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080013a4  080013a4  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  080013a4  080013a4  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080013a4  080013a4  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080013a4  080013a4  000113a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080013a8  080013a8  000113a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  080013ac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  2000005c  08001408  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001408  000201cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000d23  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000451  00000000  00000000  00020df2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000140  00000000  00000000  00021248  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000d7  00000000  00000000  00021388  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000fa7f  00000000  00000000  0002145f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001a7c  00000000  00000000  00030ede  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0005574b  00000000  00000000  0003295a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b48  00000000  00000000  000880a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000052  00000000  00000000  00088bf0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001344 	.word	0x08001344

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08001344 	.word	0x08001344

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <pa1_adc_init>:
 * third = ch3
 */


void pa1_adc_init(void)
{
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	/*** configure the ADC GPIO PIN ***/

	/* Enable clock access to GPIOA */
	RCC->AHB1ENR |= GPIOAEN;
 8000284:	4b14      	ldr	r3, [pc, #80]	; (80002d8 <pa1_adc_init+0x58>)
 8000286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000288:	4a13      	ldr	r2, [pc, #76]	; (80002d8 <pa1_adc_init+0x58>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set the mode of PA1 to analog */
	GPIOA->MODER |= (1U<<2);
 8000290:	4b12      	ldr	r3, [pc, #72]	; (80002dc <pa1_adc_init+0x5c>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a11      	ldr	r2, [pc, #68]	; (80002dc <pa1_adc_init+0x5c>)
 8000296:	f043 0304 	orr.w	r3, r3, #4
 800029a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<3);
 800029c:	4b0f      	ldr	r3, [pc, #60]	; (80002dc <pa1_adc_init+0x5c>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a0e      	ldr	r2, [pc, #56]	; (80002dc <pa1_adc_init+0x5c>)
 80002a2:	f043 0308 	orr.w	r3, r3, #8
 80002a6:	6013      	str	r3, [r2, #0]

	/*Configure the ADC Module*/
	/* Enable clock access to ADC */
	RCC->APB2ENR |= ADC1EN;
 80002a8:	4b0b      	ldr	r3, [pc, #44]	; (80002d8 <pa1_adc_init+0x58>)
 80002aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002ac:	4a0a      	ldr	r2, [pc, #40]	; (80002d8 <pa1_adc_init+0x58>)
 80002ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002b2:	6453      	str	r3, [r2, #68]	; 0x44

	/*Conversion sequence start*/
	ADC1->SQR3 = ADC_CH1;
 80002b4:	4b0a      	ldr	r3, [pc, #40]	; (80002e0 <pa1_adc_init+0x60>)
 80002b6:	2201      	movs	r2, #1
 80002b8:	635a      	str	r2, [r3, #52]	; 0x34

	/*conversion sequence length*/
	ADC1->SQR1 = ADC_SEQ_LEN_1;
 80002ba:	4b09      	ldr	r3, [pc, #36]	; (80002e0 <pa1_adc_init+0x60>)
 80002bc:	2200      	movs	r2, #0
 80002be:	62da      	str	r2, [r3, #44]	; 0x2c

	/*Enable ADC Module*/
	ADC1->CR2  |= CR2_ADON;
 80002c0:	4b07      	ldr	r3, [pc, #28]	; (80002e0 <pa1_adc_init+0x60>)
 80002c2:	689b      	ldr	r3, [r3, #8]
 80002c4:	4a06      	ldr	r2, [pc, #24]	; (80002e0 <pa1_adc_init+0x60>)
 80002c6:	f043 0301 	orr.w	r3, r3, #1
 80002ca:	6093      	str	r3, [r2, #8]
}
 80002cc:	bf00      	nop
 80002ce:	46bd      	mov	sp, r7
 80002d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	40023800 	.word	0x40023800
 80002dc:	40020000 	.word	0x40020000
 80002e0:	40012000 	.word	0x40012000

080002e4 <start_conversion>:

void start_conversion(void)
{
 80002e4:	b480      	push	{r7}
 80002e6:	af00      	add	r7, sp, #0
	/* Enable contineous conversion */
	ADC1->CR2 |= CR2_CONT;
 80002e8:	4b08      	ldr	r3, [pc, #32]	; (800030c <start_conversion+0x28>)
 80002ea:	689b      	ldr	r3, [r3, #8]
 80002ec:	4a07      	ldr	r2, [pc, #28]	; (800030c <start_conversion+0x28>)
 80002ee:	f043 0302 	orr.w	r3, r3, #2
 80002f2:	6093      	str	r3, [r2, #8]
	/* Start ADC Conversion */
	ADC1->CR2 |= CR2_SWSTART;
 80002f4:	4b05      	ldr	r3, [pc, #20]	; (800030c <start_conversion+0x28>)
 80002f6:	689b      	ldr	r3, [r3, #8]
 80002f8:	4a04      	ldr	r2, [pc, #16]	; (800030c <start_conversion+0x28>)
 80002fa:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80002fe:	6093      	str	r3, [r2, #8]
}
 8000300:	bf00      	nop
 8000302:	46bd      	mov	sp, r7
 8000304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000308:	4770      	bx	lr
 800030a:	bf00      	nop
 800030c:	40012000 	.word	0x40012000

08000310 <adc_read>:

uint32_t adc_read(void)
{
 8000310:	b480      	push	{r7}
 8000312:	af00      	add	r7, sp, #0
	/* Wait for conversion to be complete */
	while(!(ADC1->SR & SR_EOC)){}
 8000314:	bf00      	nop
 8000316:	4b06      	ldr	r3, [pc, #24]	; (8000330 <adc_read+0x20>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	f003 0302 	and.w	r3, r3, #2
 800031e:	2b00      	cmp	r3, #0
 8000320:	d0f9      	beq.n	8000316 <adc_read+0x6>
	/* Read converted result */
	return (ADC1->DR);
 8000322:	4b03      	ldr	r3, [pc, #12]	; (8000330 <adc_read+0x20>)
 8000324:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8000326:	4618      	mov	r0, r3
 8000328:	46bd      	mov	sp, r7
 800032a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800032e:	4770      	bx	lr
 8000330:	40012000 	.word	0x40012000

08000334 <main>:
#include "stdint.h"

uint32_t sensor_value;

int main(void)
{
 8000334:	b580      	push	{r7, lr}
 8000336:	af00      	add	r7, sp, #0
	pa1_adc_init();
 8000338:	f7ff ffa2 	bl	8000280 <pa1_adc_init>
	start_conversion();
 800033c:	f7ff ffd2 	bl	80002e4 <start_conversion>
	while(1)
	{
		sensor_value =  adc_read();
 8000340:	f7ff ffe6 	bl	8000310 <adc_read>
 8000344:	4603      	mov	r3, r0
 8000346:	4a04      	ldr	r2, [pc, #16]	; (8000358 <main+0x24>)
 8000348:	6013      	str	r3, [r2, #0]
		printf("Sensor Value : %d \n\r", (int)sensor_value);
 800034a:	4b03      	ldr	r3, [pc, #12]	; (8000358 <main+0x24>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	4619      	mov	r1, r3
 8000350:	4802      	ldr	r0, [pc, #8]	; (800035c <main+0x28>)
 8000352:	f000 f983 	bl	800065c <iprintf>
		sensor_value =  adc_read();
 8000356:	e7f3      	b.n	8000340 <main+0xc>
 8000358:	20000078 	.word	0x20000078
 800035c:	0800135c 	.word	0x0800135c

08000360 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000360:	b580      	push	{r7, lr}
 8000362:	b086      	sub	sp, #24
 8000364:	af00      	add	r7, sp, #0
 8000366:	60f8      	str	r0, [r7, #12]
 8000368:	60b9      	str	r1, [r7, #8]
 800036a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036c:	2300      	movs	r3, #0
 800036e:	617b      	str	r3, [r7, #20]
 8000370:	e00a      	b.n	8000388 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000372:	f3af 8000 	nop.w
 8000376:	4601      	mov	r1, r0
 8000378:	68bb      	ldr	r3, [r7, #8]
 800037a:	1c5a      	adds	r2, r3, #1
 800037c:	60ba      	str	r2, [r7, #8]
 800037e:	b2ca      	uxtb	r2, r1
 8000380:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000382:	697b      	ldr	r3, [r7, #20]
 8000384:	3301      	adds	r3, #1
 8000386:	617b      	str	r3, [r7, #20]
 8000388:	697a      	ldr	r2, [r7, #20]
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	429a      	cmp	r2, r3
 800038e:	dbf0      	blt.n	8000372 <_read+0x12>
  }

  return len;
 8000390:	687b      	ldr	r3, [r7, #4]
}
 8000392:	4618      	mov	r0, r3
 8000394:	3718      	adds	r7, #24
 8000396:	46bd      	mov	sp, r7
 8000398:	bd80      	pop	{r7, pc}

0800039a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800039a:	b580      	push	{r7, lr}
 800039c:	b086      	sub	sp, #24
 800039e:	af00      	add	r7, sp, #0
 80003a0:	60f8      	str	r0, [r7, #12]
 80003a2:	60b9      	str	r1, [r7, #8]
 80003a4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a6:	2300      	movs	r3, #0
 80003a8:	617b      	str	r3, [r7, #20]
 80003aa:	e009      	b.n	80003c0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80003ac:	68bb      	ldr	r3, [r7, #8]
 80003ae:	1c5a      	adds	r2, r3, #1
 80003b0:	60ba      	str	r2, [r7, #8]
 80003b2:	781b      	ldrb	r3, [r3, #0]
 80003b4:	4618      	mov	r0, r3
 80003b6:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ba:	697b      	ldr	r3, [r7, #20]
 80003bc:	3301      	adds	r3, #1
 80003be:	617b      	str	r3, [r7, #20]
 80003c0:	697a      	ldr	r2, [r7, #20]
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	429a      	cmp	r2, r3
 80003c6:	dbf1      	blt.n	80003ac <_write+0x12>
  }
  return len;
 80003c8:	687b      	ldr	r3, [r7, #4]
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	3718      	adds	r7, #24
 80003ce:	46bd      	mov	sp, r7
 80003d0:	bd80      	pop	{r7, pc}

080003d2 <_close>:

int _close(int file)
{
 80003d2:	b480      	push	{r7}
 80003d4:	b083      	sub	sp, #12
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003da:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003de:	4618      	mov	r0, r3
 80003e0:	370c      	adds	r7, #12
 80003e2:	46bd      	mov	sp, r7
 80003e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e8:	4770      	bx	lr

080003ea <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003ea:	b480      	push	{r7}
 80003ec:	b083      	sub	sp, #12
 80003ee:	af00      	add	r7, sp, #0
 80003f0:	6078      	str	r0, [r7, #4]
 80003f2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003f4:	683b      	ldr	r3, [r7, #0]
 80003f6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003fa:	605a      	str	r2, [r3, #4]
  return 0;
 80003fc:	2300      	movs	r3, #0
}
 80003fe:	4618      	mov	r0, r3
 8000400:	370c      	adds	r7, #12
 8000402:	46bd      	mov	sp, r7
 8000404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000408:	4770      	bx	lr

0800040a <_isatty>:

int _isatty(int file)
{
 800040a:	b480      	push	{r7}
 800040c:	b083      	sub	sp, #12
 800040e:	af00      	add	r7, sp, #0
 8000410:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000412:	2301      	movs	r3, #1
}
 8000414:	4618      	mov	r0, r3
 8000416:	370c      	adds	r7, #12
 8000418:	46bd      	mov	sp, r7
 800041a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800041e:	4770      	bx	lr

08000420 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000420:	b480      	push	{r7}
 8000422:	b085      	sub	sp, #20
 8000424:	af00      	add	r7, sp, #0
 8000426:	60f8      	str	r0, [r7, #12]
 8000428:	60b9      	str	r1, [r7, #8]
 800042a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800042c:	2300      	movs	r3, #0
}
 800042e:	4618      	mov	r0, r3
 8000430:	3714      	adds	r7, #20
 8000432:	46bd      	mov	sp, r7
 8000434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000438:	4770      	bx	lr
	...

0800043c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800043c:	b580      	push	{r7, lr}
 800043e:	b086      	sub	sp, #24
 8000440:	af00      	add	r7, sp, #0
 8000442:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000444:	4a14      	ldr	r2, [pc, #80]	; (8000498 <_sbrk+0x5c>)
 8000446:	4b15      	ldr	r3, [pc, #84]	; (800049c <_sbrk+0x60>)
 8000448:	1ad3      	subs	r3, r2, r3
 800044a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800044c:	697b      	ldr	r3, [r7, #20]
 800044e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000450:	4b13      	ldr	r3, [pc, #76]	; (80004a0 <_sbrk+0x64>)
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	2b00      	cmp	r3, #0
 8000456:	d102      	bne.n	800045e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000458:	4b11      	ldr	r3, [pc, #68]	; (80004a0 <_sbrk+0x64>)
 800045a:	4a12      	ldr	r2, [pc, #72]	; (80004a4 <_sbrk+0x68>)
 800045c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800045e:	4b10      	ldr	r3, [pc, #64]	; (80004a0 <_sbrk+0x64>)
 8000460:	681a      	ldr	r2, [r3, #0]
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	4413      	add	r3, r2
 8000466:	693a      	ldr	r2, [r7, #16]
 8000468:	429a      	cmp	r2, r3
 800046a:	d207      	bcs.n	800047c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800046c:	f000 f99a 	bl	80007a4 <__errno>
 8000470:	4603      	mov	r3, r0
 8000472:	220c      	movs	r2, #12
 8000474:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000476:	f04f 33ff 	mov.w	r3, #4294967295
 800047a:	e009      	b.n	8000490 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800047c:	4b08      	ldr	r3, [pc, #32]	; (80004a0 <_sbrk+0x64>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000482:	4b07      	ldr	r3, [pc, #28]	; (80004a0 <_sbrk+0x64>)
 8000484:	681a      	ldr	r2, [r3, #0]
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	4413      	add	r3, r2
 800048a:	4a05      	ldr	r2, [pc, #20]	; (80004a0 <_sbrk+0x64>)
 800048c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800048e:	68fb      	ldr	r3, [r7, #12]
}
 8000490:	4618      	mov	r0, r3
 8000492:	3718      	adds	r7, #24
 8000494:	46bd      	mov	sp, r7
 8000496:	bd80      	pop	{r7, pc}
 8000498:	20020000 	.word	0x20020000
 800049c:	00000400 	.word	0x00000400
 80004a0:	2000007c 	.word	0x2000007c
 80004a4:	200001d0 	.word	0x200001d0

080004a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004a8:	480d      	ldr	r0, [pc, #52]	; (80004e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004b0:	480c      	ldr	r0, [pc, #48]	; (80004e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80004b2:	490d      	ldr	r1, [pc, #52]	; (80004e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004b4:	4a0d      	ldr	r2, [pc, #52]	; (80004ec <LoopForever+0xe>)
  movs r3, #0
 80004b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004b8:	e002      	b.n	80004c0 <LoopCopyDataInit>

080004ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004be:	3304      	adds	r3, #4

080004c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004c4:	d3f9      	bcc.n	80004ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004c6:	4a0a      	ldr	r2, [pc, #40]	; (80004f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004c8:	4c0a      	ldr	r4, [pc, #40]	; (80004f4 <LoopForever+0x16>)
  movs r3, #0
 80004ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004cc:	e001      	b.n	80004d2 <LoopFillZerobss>

080004ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004d0:	3204      	adds	r2, #4

080004d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004d4:	d3fb      	bcc.n	80004ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004d6:	f000 f96b 	bl	80007b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004da:	f7ff ff2b 	bl	8000334 <main>

080004de <LoopForever>:

LoopForever:
  b LoopForever
 80004de:	e7fe      	b.n	80004de <LoopForever>
  ldr   r0, =_estack
 80004e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004e8:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004ec:	080013ac 	.word	0x080013ac
  ldr r2, =_sbss
 80004f0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004f4:	200001cc 	.word	0x200001cc

080004f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004f8:	e7fe      	b.n	80004f8 <ADC_IRQHandler>
	...

080004fc <std>:
 80004fc:	2300      	movs	r3, #0
 80004fe:	b510      	push	{r4, lr}
 8000500:	4604      	mov	r4, r0
 8000502:	e9c0 3300 	strd	r3, r3, [r0]
 8000506:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800050a:	6083      	str	r3, [r0, #8]
 800050c:	8181      	strh	r1, [r0, #12]
 800050e:	6643      	str	r3, [r0, #100]	; 0x64
 8000510:	81c2      	strh	r2, [r0, #14]
 8000512:	6183      	str	r3, [r0, #24]
 8000514:	4619      	mov	r1, r3
 8000516:	2208      	movs	r2, #8
 8000518:	305c      	adds	r0, #92	; 0x5c
 800051a:	f000 f8f4 	bl	8000706 <memset>
 800051e:	4b05      	ldr	r3, [pc, #20]	; (8000534 <std+0x38>)
 8000520:	6263      	str	r3, [r4, #36]	; 0x24
 8000522:	4b05      	ldr	r3, [pc, #20]	; (8000538 <std+0x3c>)
 8000524:	62a3      	str	r3, [r4, #40]	; 0x28
 8000526:	4b05      	ldr	r3, [pc, #20]	; (800053c <std+0x40>)
 8000528:	62e3      	str	r3, [r4, #44]	; 0x2c
 800052a:	4b05      	ldr	r3, [pc, #20]	; (8000540 <std+0x44>)
 800052c:	6224      	str	r4, [r4, #32]
 800052e:	6323      	str	r3, [r4, #48]	; 0x30
 8000530:	bd10      	pop	{r4, pc}
 8000532:	bf00      	nop
 8000534:	08000681 	.word	0x08000681
 8000538:	080006a3 	.word	0x080006a3
 800053c:	080006db 	.word	0x080006db
 8000540:	080006ff 	.word	0x080006ff

08000544 <stdio_exit_handler>:
 8000544:	4a02      	ldr	r2, [pc, #8]	; (8000550 <stdio_exit_handler+0xc>)
 8000546:	4903      	ldr	r1, [pc, #12]	; (8000554 <stdio_exit_handler+0x10>)
 8000548:	4803      	ldr	r0, [pc, #12]	; (8000558 <stdio_exit_handler+0x14>)
 800054a:	f000 b869 	b.w	8000620 <_fwalk_sglue>
 800054e:	bf00      	nop
 8000550:	20000000 	.word	0x20000000
 8000554:	080010a1 	.word	0x080010a1
 8000558:	2000000c 	.word	0x2000000c

0800055c <cleanup_stdio>:
 800055c:	6841      	ldr	r1, [r0, #4]
 800055e:	4b0c      	ldr	r3, [pc, #48]	; (8000590 <cleanup_stdio+0x34>)
 8000560:	4299      	cmp	r1, r3
 8000562:	b510      	push	{r4, lr}
 8000564:	4604      	mov	r4, r0
 8000566:	d001      	beq.n	800056c <cleanup_stdio+0x10>
 8000568:	f000 fd9a 	bl	80010a0 <_fflush_r>
 800056c:	68a1      	ldr	r1, [r4, #8]
 800056e:	4b09      	ldr	r3, [pc, #36]	; (8000594 <cleanup_stdio+0x38>)
 8000570:	4299      	cmp	r1, r3
 8000572:	d002      	beq.n	800057a <cleanup_stdio+0x1e>
 8000574:	4620      	mov	r0, r4
 8000576:	f000 fd93 	bl	80010a0 <_fflush_r>
 800057a:	68e1      	ldr	r1, [r4, #12]
 800057c:	4b06      	ldr	r3, [pc, #24]	; (8000598 <cleanup_stdio+0x3c>)
 800057e:	4299      	cmp	r1, r3
 8000580:	d004      	beq.n	800058c <cleanup_stdio+0x30>
 8000582:	4620      	mov	r0, r4
 8000584:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000588:	f000 bd8a 	b.w	80010a0 <_fflush_r>
 800058c:	bd10      	pop	{r4, pc}
 800058e:	bf00      	nop
 8000590:	20000080 	.word	0x20000080
 8000594:	200000e8 	.word	0x200000e8
 8000598:	20000150 	.word	0x20000150

0800059c <global_stdio_init.part.0>:
 800059c:	b510      	push	{r4, lr}
 800059e:	4b0b      	ldr	r3, [pc, #44]	; (80005cc <global_stdio_init.part.0+0x30>)
 80005a0:	4c0b      	ldr	r4, [pc, #44]	; (80005d0 <global_stdio_init.part.0+0x34>)
 80005a2:	4a0c      	ldr	r2, [pc, #48]	; (80005d4 <global_stdio_init.part.0+0x38>)
 80005a4:	601a      	str	r2, [r3, #0]
 80005a6:	4620      	mov	r0, r4
 80005a8:	2200      	movs	r2, #0
 80005aa:	2104      	movs	r1, #4
 80005ac:	f7ff ffa6 	bl	80004fc <std>
 80005b0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80005b4:	2201      	movs	r2, #1
 80005b6:	2109      	movs	r1, #9
 80005b8:	f7ff ffa0 	bl	80004fc <std>
 80005bc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80005c0:	2202      	movs	r2, #2
 80005c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005c6:	2112      	movs	r1, #18
 80005c8:	f7ff bf98 	b.w	80004fc <std>
 80005cc:	200001b8 	.word	0x200001b8
 80005d0:	20000080 	.word	0x20000080
 80005d4:	08000545 	.word	0x08000545

080005d8 <__sfp_lock_acquire>:
 80005d8:	4801      	ldr	r0, [pc, #4]	; (80005e0 <__sfp_lock_acquire+0x8>)
 80005da:	f000 b90d 	b.w	80007f8 <__retarget_lock_acquire_recursive>
 80005de:	bf00      	nop
 80005e0:	200001c1 	.word	0x200001c1

080005e4 <__sfp_lock_release>:
 80005e4:	4801      	ldr	r0, [pc, #4]	; (80005ec <__sfp_lock_release+0x8>)
 80005e6:	f000 b908 	b.w	80007fa <__retarget_lock_release_recursive>
 80005ea:	bf00      	nop
 80005ec:	200001c1 	.word	0x200001c1

080005f0 <__sinit>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	4604      	mov	r4, r0
 80005f4:	f7ff fff0 	bl	80005d8 <__sfp_lock_acquire>
 80005f8:	6a23      	ldr	r3, [r4, #32]
 80005fa:	b11b      	cbz	r3, 8000604 <__sinit+0x14>
 80005fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000600:	f7ff bff0 	b.w	80005e4 <__sfp_lock_release>
 8000604:	4b04      	ldr	r3, [pc, #16]	; (8000618 <__sinit+0x28>)
 8000606:	6223      	str	r3, [r4, #32]
 8000608:	4b04      	ldr	r3, [pc, #16]	; (800061c <__sinit+0x2c>)
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	2b00      	cmp	r3, #0
 800060e:	d1f5      	bne.n	80005fc <__sinit+0xc>
 8000610:	f7ff ffc4 	bl	800059c <global_stdio_init.part.0>
 8000614:	e7f2      	b.n	80005fc <__sinit+0xc>
 8000616:	bf00      	nop
 8000618:	0800055d 	.word	0x0800055d
 800061c:	200001b8 	.word	0x200001b8

08000620 <_fwalk_sglue>:
 8000620:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000624:	4607      	mov	r7, r0
 8000626:	4688      	mov	r8, r1
 8000628:	4614      	mov	r4, r2
 800062a:	2600      	movs	r6, #0
 800062c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000630:	f1b9 0901 	subs.w	r9, r9, #1
 8000634:	d505      	bpl.n	8000642 <_fwalk_sglue+0x22>
 8000636:	6824      	ldr	r4, [r4, #0]
 8000638:	2c00      	cmp	r4, #0
 800063a:	d1f7      	bne.n	800062c <_fwalk_sglue+0xc>
 800063c:	4630      	mov	r0, r6
 800063e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000642:	89ab      	ldrh	r3, [r5, #12]
 8000644:	2b01      	cmp	r3, #1
 8000646:	d907      	bls.n	8000658 <_fwalk_sglue+0x38>
 8000648:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800064c:	3301      	adds	r3, #1
 800064e:	d003      	beq.n	8000658 <_fwalk_sglue+0x38>
 8000650:	4629      	mov	r1, r5
 8000652:	4638      	mov	r0, r7
 8000654:	47c0      	blx	r8
 8000656:	4306      	orrs	r6, r0
 8000658:	3568      	adds	r5, #104	; 0x68
 800065a:	e7e9      	b.n	8000630 <_fwalk_sglue+0x10>

0800065c <iprintf>:
 800065c:	b40f      	push	{r0, r1, r2, r3}
 800065e:	b507      	push	{r0, r1, r2, lr}
 8000660:	4906      	ldr	r1, [pc, #24]	; (800067c <iprintf+0x20>)
 8000662:	ab04      	add	r3, sp, #16
 8000664:	6808      	ldr	r0, [r1, #0]
 8000666:	f853 2b04 	ldr.w	r2, [r3], #4
 800066a:	6881      	ldr	r1, [r0, #8]
 800066c:	9301      	str	r3, [sp, #4]
 800066e:	f000 f9e7 	bl	8000a40 <_vfiprintf_r>
 8000672:	b003      	add	sp, #12
 8000674:	f85d eb04 	ldr.w	lr, [sp], #4
 8000678:	b004      	add	sp, #16
 800067a:	4770      	bx	lr
 800067c:	20000058 	.word	0x20000058

08000680 <__sread>:
 8000680:	b510      	push	{r4, lr}
 8000682:	460c      	mov	r4, r1
 8000684:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000688:	f000 f868 	bl	800075c <_read_r>
 800068c:	2800      	cmp	r0, #0
 800068e:	bfab      	itete	ge
 8000690:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000692:	89a3      	ldrhlt	r3, [r4, #12]
 8000694:	181b      	addge	r3, r3, r0
 8000696:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800069a:	bfac      	ite	ge
 800069c:	6563      	strge	r3, [r4, #84]	; 0x54
 800069e:	81a3      	strhlt	r3, [r4, #12]
 80006a0:	bd10      	pop	{r4, pc}

080006a2 <__swrite>:
 80006a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006a6:	461f      	mov	r7, r3
 80006a8:	898b      	ldrh	r3, [r1, #12]
 80006aa:	05db      	lsls	r3, r3, #23
 80006ac:	4605      	mov	r5, r0
 80006ae:	460c      	mov	r4, r1
 80006b0:	4616      	mov	r6, r2
 80006b2:	d505      	bpl.n	80006c0 <__swrite+0x1e>
 80006b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006b8:	2302      	movs	r3, #2
 80006ba:	2200      	movs	r2, #0
 80006bc:	f000 f83c 	bl	8000738 <_lseek_r>
 80006c0:	89a3      	ldrh	r3, [r4, #12]
 80006c2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006c6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80006ca:	81a3      	strh	r3, [r4, #12]
 80006cc:	4632      	mov	r2, r6
 80006ce:	463b      	mov	r3, r7
 80006d0:	4628      	mov	r0, r5
 80006d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006d6:	f000 b853 	b.w	8000780 <_write_r>

080006da <__sseek>:
 80006da:	b510      	push	{r4, lr}
 80006dc:	460c      	mov	r4, r1
 80006de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006e2:	f000 f829 	bl	8000738 <_lseek_r>
 80006e6:	1c43      	adds	r3, r0, #1
 80006e8:	89a3      	ldrh	r3, [r4, #12]
 80006ea:	bf15      	itete	ne
 80006ec:	6560      	strne	r0, [r4, #84]	; 0x54
 80006ee:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80006f2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80006f6:	81a3      	strheq	r3, [r4, #12]
 80006f8:	bf18      	it	ne
 80006fa:	81a3      	strhne	r3, [r4, #12]
 80006fc:	bd10      	pop	{r4, pc}

080006fe <__sclose>:
 80006fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000702:	f000 b809 	b.w	8000718 <_close_r>

08000706 <memset>:
 8000706:	4402      	add	r2, r0
 8000708:	4603      	mov	r3, r0
 800070a:	4293      	cmp	r3, r2
 800070c:	d100      	bne.n	8000710 <memset+0xa>
 800070e:	4770      	bx	lr
 8000710:	f803 1b01 	strb.w	r1, [r3], #1
 8000714:	e7f9      	b.n	800070a <memset+0x4>
	...

08000718 <_close_r>:
 8000718:	b538      	push	{r3, r4, r5, lr}
 800071a:	4d06      	ldr	r5, [pc, #24]	; (8000734 <_close_r+0x1c>)
 800071c:	2300      	movs	r3, #0
 800071e:	4604      	mov	r4, r0
 8000720:	4608      	mov	r0, r1
 8000722:	602b      	str	r3, [r5, #0]
 8000724:	f7ff fe55 	bl	80003d2 <_close>
 8000728:	1c43      	adds	r3, r0, #1
 800072a:	d102      	bne.n	8000732 <_close_r+0x1a>
 800072c:	682b      	ldr	r3, [r5, #0]
 800072e:	b103      	cbz	r3, 8000732 <_close_r+0x1a>
 8000730:	6023      	str	r3, [r4, #0]
 8000732:	bd38      	pop	{r3, r4, r5, pc}
 8000734:	200001bc 	.word	0x200001bc

08000738 <_lseek_r>:
 8000738:	b538      	push	{r3, r4, r5, lr}
 800073a:	4d07      	ldr	r5, [pc, #28]	; (8000758 <_lseek_r+0x20>)
 800073c:	4604      	mov	r4, r0
 800073e:	4608      	mov	r0, r1
 8000740:	4611      	mov	r1, r2
 8000742:	2200      	movs	r2, #0
 8000744:	602a      	str	r2, [r5, #0]
 8000746:	461a      	mov	r2, r3
 8000748:	f7ff fe6a 	bl	8000420 <_lseek>
 800074c:	1c43      	adds	r3, r0, #1
 800074e:	d102      	bne.n	8000756 <_lseek_r+0x1e>
 8000750:	682b      	ldr	r3, [r5, #0]
 8000752:	b103      	cbz	r3, 8000756 <_lseek_r+0x1e>
 8000754:	6023      	str	r3, [r4, #0]
 8000756:	bd38      	pop	{r3, r4, r5, pc}
 8000758:	200001bc 	.word	0x200001bc

0800075c <_read_r>:
 800075c:	b538      	push	{r3, r4, r5, lr}
 800075e:	4d07      	ldr	r5, [pc, #28]	; (800077c <_read_r+0x20>)
 8000760:	4604      	mov	r4, r0
 8000762:	4608      	mov	r0, r1
 8000764:	4611      	mov	r1, r2
 8000766:	2200      	movs	r2, #0
 8000768:	602a      	str	r2, [r5, #0]
 800076a:	461a      	mov	r2, r3
 800076c:	f7ff fdf8 	bl	8000360 <_read>
 8000770:	1c43      	adds	r3, r0, #1
 8000772:	d102      	bne.n	800077a <_read_r+0x1e>
 8000774:	682b      	ldr	r3, [r5, #0]
 8000776:	b103      	cbz	r3, 800077a <_read_r+0x1e>
 8000778:	6023      	str	r3, [r4, #0]
 800077a:	bd38      	pop	{r3, r4, r5, pc}
 800077c:	200001bc 	.word	0x200001bc

08000780 <_write_r>:
 8000780:	b538      	push	{r3, r4, r5, lr}
 8000782:	4d07      	ldr	r5, [pc, #28]	; (80007a0 <_write_r+0x20>)
 8000784:	4604      	mov	r4, r0
 8000786:	4608      	mov	r0, r1
 8000788:	4611      	mov	r1, r2
 800078a:	2200      	movs	r2, #0
 800078c:	602a      	str	r2, [r5, #0]
 800078e:	461a      	mov	r2, r3
 8000790:	f7ff fe03 	bl	800039a <_write>
 8000794:	1c43      	adds	r3, r0, #1
 8000796:	d102      	bne.n	800079e <_write_r+0x1e>
 8000798:	682b      	ldr	r3, [r5, #0]
 800079a:	b103      	cbz	r3, 800079e <_write_r+0x1e>
 800079c:	6023      	str	r3, [r4, #0]
 800079e:	bd38      	pop	{r3, r4, r5, pc}
 80007a0:	200001bc 	.word	0x200001bc

080007a4 <__errno>:
 80007a4:	4b01      	ldr	r3, [pc, #4]	; (80007ac <__errno+0x8>)
 80007a6:	6818      	ldr	r0, [r3, #0]
 80007a8:	4770      	bx	lr
 80007aa:	bf00      	nop
 80007ac:	20000058 	.word	0x20000058

080007b0 <__libc_init_array>:
 80007b0:	b570      	push	{r4, r5, r6, lr}
 80007b2:	4d0d      	ldr	r5, [pc, #52]	; (80007e8 <__libc_init_array+0x38>)
 80007b4:	4c0d      	ldr	r4, [pc, #52]	; (80007ec <__libc_init_array+0x3c>)
 80007b6:	1b64      	subs	r4, r4, r5
 80007b8:	10a4      	asrs	r4, r4, #2
 80007ba:	2600      	movs	r6, #0
 80007bc:	42a6      	cmp	r6, r4
 80007be:	d109      	bne.n	80007d4 <__libc_init_array+0x24>
 80007c0:	4d0b      	ldr	r5, [pc, #44]	; (80007f0 <__libc_init_array+0x40>)
 80007c2:	4c0c      	ldr	r4, [pc, #48]	; (80007f4 <__libc_init_array+0x44>)
 80007c4:	f000 fdbe 	bl	8001344 <_init>
 80007c8:	1b64      	subs	r4, r4, r5
 80007ca:	10a4      	asrs	r4, r4, #2
 80007cc:	2600      	movs	r6, #0
 80007ce:	42a6      	cmp	r6, r4
 80007d0:	d105      	bne.n	80007de <__libc_init_array+0x2e>
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007d8:	4798      	blx	r3
 80007da:	3601      	adds	r6, #1
 80007dc:	e7ee      	b.n	80007bc <__libc_init_array+0xc>
 80007de:	f855 3b04 	ldr.w	r3, [r5], #4
 80007e2:	4798      	blx	r3
 80007e4:	3601      	adds	r6, #1
 80007e6:	e7f2      	b.n	80007ce <__libc_init_array+0x1e>
 80007e8:	080013a4 	.word	0x080013a4
 80007ec:	080013a4 	.word	0x080013a4
 80007f0:	080013a4 	.word	0x080013a4
 80007f4:	080013a8 	.word	0x080013a8

080007f8 <__retarget_lock_acquire_recursive>:
 80007f8:	4770      	bx	lr

080007fa <__retarget_lock_release_recursive>:
 80007fa:	4770      	bx	lr

080007fc <_free_r>:
 80007fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80007fe:	2900      	cmp	r1, #0
 8000800:	d044      	beq.n	800088c <_free_r+0x90>
 8000802:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000806:	9001      	str	r0, [sp, #4]
 8000808:	2b00      	cmp	r3, #0
 800080a:	f1a1 0404 	sub.w	r4, r1, #4
 800080e:	bfb8      	it	lt
 8000810:	18e4      	addlt	r4, r4, r3
 8000812:	f000 f8df 	bl	80009d4 <__malloc_lock>
 8000816:	4a1e      	ldr	r2, [pc, #120]	; (8000890 <_free_r+0x94>)
 8000818:	9801      	ldr	r0, [sp, #4]
 800081a:	6813      	ldr	r3, [r2, #0]
 800081c:	b933      	cbnz	r3, 800082c <_free_r+0x30>
 800081e:	6063      	str	r3, [r4, #4]
 8000820:	6014      	str	r4, [r2, #0]
 8000822:	b003      	add	sp, #12
 8000824:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000828:	f000 b8da 	b.w	80009e0 <__malloc_unlock>
 800082c:	42a3      	cmp	r3, r4
 800082e:	d908      	bls.n	8000842 <_free_r+0x46>
 8000830:	6825      	ldr	r5, [r4, #0]
 8000832:	1961      	adds	r1, r4, r5
 8000834:	428b      	cmp	r3, r1
 8000836:	bf01      	itttt	eq
 8000838:	6819      	ldreq	r1, [r3, #0]
 800083a:	685b      	ldreq	r3, [r3, #4]
 800083c:	1949      	addeq	r1, r1, r5
 800083e:	6021      	streq	r1, [r4, #0]
 8000840:	e7ed      	b.n	800081e <_free_r+0x22>
 8000842:	461a      	mov	r2, r3
 8000844:	685b      	ldr	r3, [r3, #4]
 8000846:	b10b      	cbz	r3, 800084c <_free_r+0x50>
 8000848:	42a3      	cmp	r3, r4
 800084a:	d9fa      	bls.n	8000842 <_free_r+0x46>
 800084c:	6811      	ldr	r1, [r2, #0]
 800084e:	1855      	adds	r5, r2, r1
 8000850:	42a5      	cmp	r5, r4
 8000852:	d10b      	bne.n	800086c <_free_r+0x70>
 8000854:	6824      	ldr	r4, [r4, #0]
 8000856:	4421      	add	r1, r4
 8000858:	1854      	adds	r4, r2, r1
 800085a:	42a3      	cmp	r3, r4
 800085c:	6011      	str	r1, [r2, #0]
 800085e:	d1e0      	bne.n	8000822 <_free_r+0x26>
 8000860:	681c      	ldr	r4, [r3, #0]
 8000862:	685b      	ldr	r3, [r3, #4]
 8000864:	6053      	str	r3, [r2, #4]
 8000866:	440c      	add	r4, r1
 8000868:	6014      	str	r4, [r2, #0]
 800086a:	e7da      	b.n	8000822 <_free_r+0x26>
 800086c:	d902      	bls.n	8000874 <_free_r+0x78>
 800086e:	230c      	movs	r3, #12
 8000870:	6003      	str	r3, [r0, #0]
 8000872:	e7d6      	b.n	8000822 <_free_r+0x26>
 8000874:	6825      	ldr	r5, [r4, #0]
 8000876:	1961      	adds	r1, r4, r5
 8000878:	428b      	cmp	r3, r1
 800087a:	bf04      	itt	eq
 800087c:	6819      	ldreq	r1, [r3, #0]
 800087e:	685b      	ldreq	r3, [r3, #4]
 8000880:	6063      	str	r3, [r4, #4]
 8000882:	bf04      	itt	eq
 8000884:	1949      	addeq	r1, r1, r5
 8000886:	6021      	streq	r1, [r4, #0]
 8000888:	6054      	str	r4, [r2, #4]
 800088a:	e7ca      	b.n	8000822 <_free_r+0x26>
 800088c:	b003      	add	sp, #12
 800088e:	bd30      	pop	{r4, r5, pc}
 8000890:	200001c4 	.word	0x200001c4

08000894 <sbrk_aligned>:
 8000894:	b570      	push	{r4, r5, r6, lr}
 8000896:	4e0e      	ldr	r6, [pc, #56]	; (80008d0 <sbrk_aligned+0x3c>)
 8000898:	460c      	mov	r4, r1
 800089a:	6831      	ldr	r1, [r6, #0]
 800089c:	4605      	mov	r5, r0
 800089e:	b911      	cbnz	r1, 80008a6 <sbrk_aligned+0x12>
 80008a0:	f000 fcbc 	bl	800121c <_sbrk_r>
 80008a4:	6030      	str	r0, [r6, #0]
 80008a6:	4621      	mov	r1, r4
 80008a8:	4628      	mov	r0, r5
 80008aa:	f000 fcb7 	bl	800121c <_sbrk_r>
 80008ae:	1c43      	adds	r3, r0, #1
 80008b0:	d00a      	beq.n	80008c8 <sbrk_aligned+0x34>
 80008b2:	1cc4      	adds	r4, r0, #3
 80008b4:	f024 0403 	bic.w	r4, r4, #3
 80008b8:	42a0      	cmp	r0, r4
 80008ba:	d007      	beq.n	80008cc <sbrk_aligned+0x38>
 80008bc:	1a21      	subs	r1, r4, r0
 80008be:	4628      	mov	r0, r5
 80008c0:	f000 fcac 	bl	800121c <_sbrk_r>
 80008c4:	3001      	adds	r0, #1
 80008c6:	d101      	bne.n	80008cc <sbrk_aligned+0x38>
 80008c8:	f04f 34ff 	mov.w	r4, #4294967295
 80008cc:	4620      	mov	r0, r4
 80008ce:	bd70      	pop	{r4, r5, r6, pc}
 80008d0:	200001c8 	.word	0x200001c8

080008d4 <_malloc_r>:
 80008d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008d8:	1ccd      	adds	r5, r1, #3
 80008da:	f025 0503 	bic.w	r5, r5, #3
 80008de:	3508      	adds	r5, #8
 80008e0:	2d0c      	cmp	r5, #12
 80008e2:	bf38      	it	cc
 80008e4:	250c      	movcc	r5, #12
 80008e6:	2d00      	cmp	r5, #0
 80008e8:	4607      	mov	r7, r0
 80008ea:	db01      	blt.n	80008f0 <_malloc_r+0x1c>
 80008ec:	42a9      	cmp	r1, r5
 80008ee:	d905      	bls.n	80008fc <_malloc_r+0x28>
 80008f0:	230c      	movs	r3, #12
 80008f2:	603b      	str	r3, [r7, #0]
 80008f4:	2600      	movs	r6, #0
 80008f6:	4630      	mov	r0, r6
 80008f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008fc:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80009d0 <_malloc_r+0xfc>
 8000900:	f000 f868 	bl	80009d4 <__malloc_lock>
 8000904:	f8d8 3000 	ldr.w	r3, [r8]
 8000908:	461c      	mov	r4, r3
 800090a:	bb5c      	cbnz	r4, 8000964 <_malloc_r+0x90>
 800090c:	4629      	mov	r1, r5
 800090e:	4638      	mov	r0, r7
 8000910:	f7ff ffc0 	bl	8000894 <sbrk_aligned>
 8000914:	1c43      	adds	r3, r0, #1
 8000916:	4604      	mov	r4, r0
 8000918:	d155      	bne.n	80009c6 <_malloc_r+0xf2>
 800091a:	f8d8 4000 	ldr.w	r4, [r8]
 800091e:	4626      	mov	r6, r4
 8000920:	2e00      	cmp	r6, #0
 8000922:	d145      	bne.n	80009b0 <_malloc_r+0xdc>
 8000924:	2c00      	cmp	r4, #0
 8000926:	d048      	beq.n	80009ba <_malloc_r+0xe6>
 8000928:	6823      	ldr	r3, [r4, #0]
 800092a:	4631      	mov	r1, r6
 800092c:	4638      	mov	r0, r7
 800092e:	eb04 0903 	add.w	r9, r4, r3
 8000932:	f000 fc73 	bl	800121c <_sbrk_r>
 8000936:	4581      	cmp	r9, r0
 8000938:	d13f      	bne.n	80009ba <_malloc_r+0xe6>
 800093a:	6821      	ldr	r1, [r4, #0]
 800093c:	1a6d      	subs	r5, r5, r1
 800093e:	4629      	mov	r1, r5
 8000940:	4638      	mov	r0, r7
 8000942:	f7ff ffa7 	bl	8000894 <sbrk_aligned>
 8000946:	3001      	adds	r0, #1
 8000948:	d037      	beq.n	80009ba <_malloc_r+0xe6>
 800094a:	6823      	ldr	r3, [r4, #0]
 800094c:	442b      	add	r3, r5
 800094e:	6023      	str	r3, [r4, #0]
 8000950:	f8d8 3000 	ldr.w	r3, [r8]
 8000954:	2b00      	cmp	r3, #0
 8000956:	d038      	beq.n	80009ca <_malloc_r+0xf6>
 8000958:	685a      	ldr	r2, [r3, #4]
 800095a:	42a2      	cmp	r2, r4
 800095c:	d12b      	bne.n	80009b6 <_malloc_r+0xe2>
 800095e:	2200      	movs	r2, #0
 8000960:	605a      	str	r2, [r3, #4]
 8000962:	e00f      	b.n	8000984 <_malloc_r+0xb0>
 8000964:	6822      	ldr	r2, [r4, #0]
 8000966:	1b52      	subs	r2, r2, r5
 8000968:	d41f      	bmi.n	80009aa <_malloc_r+0xd6>
 800096a:	2a0b      	cmp	r2, #11
 800096c:	d917      	bls.n	800099e <_malloc_r+0xca>
 800096e:	1961      	adds	r1, r4, r5
 8000970:	42a3      	cmp	r3, r4
 8000972:	6025      	str	r5, [r4, #0]
 8000974:	bf18      	it	ne
 8000976:	6059      	strne	r1, [r3, #4]
 8000978:	6863      	ldr	r3, [r4, #4]
 800097a:	bf08      	it	eq
 800097c:	f8c8 1000 	streq.w	r1, [r8]
 8000980:	5162      	str	r2, [r4, r5]
 8000982:	604b      	str	r3, [r1, #4]
 8000984:	4638      	mov	r0, r7
 8000986:	f104 060b 	add.w	r6, r4, #11
 800098a:	f000 f829 	bl	80009e0 <__malloc_unlock>
 800098e:	f026 0607 	bic.w	r6, r6, #7
 8000992:	1d23      	adds	r3, r4, #4
 8000994:	1af2      	subs	r2, r6, r3
 8000996:	d0ae      	beq.n	80008f6 <_malloc_r+0x22>
 8000998:	1b9b      	subs	r3, r3, r6
 800099a:	50a3      	str	r3, [r4, r2]
 800099c:	e7ab      	b.n	80008f6 <_malloc_r+0x22>
 800099e:	42a3      	cmp	r3, r4
 80009a0:	6862      	ldr	r2, [r4, #4]
 80009a2:	d1dd      	bne.n	8000960 <_malloc_r+0x8c>
 80009a4:	f8c8 2000 	str.w	r2, [r8]
 80009a8:	e7ec      	b.n	8000984 <_malloc_r+0xb0>
 80009aa:	4623      	mov	r3, r4
 80009ac:	6864      	ldr	r4, [r4, #4]
 80009ae:	e7ac      	b.n	800090a <_malloc_r+0x36>
 80009b0:	4634      	mov	r4, r6
 80009b2:	6876      	ldr	r6, [r6, #4]
 80009b4:	e7b4      	b.n	8000920 <_malloc_r+0x4c>
 80009b6:	4613      	mov	r3, r2
 80009b8:	e7cc      	b.n	8000954 <_malloc_r+0x80>
 80009ba:	230c      	movs	r3, #12
 80009bc:	603b      	str	r3, [r7, #0]
 80009be:	4638      	mov	r0, r7
 80009c0:	f000 f80e 	bl	80009e0 <__malloc_unlock>
 80009c4:	e797      	b.n	80008f6 <_malloc_r+0x22>
 80009c6:	6025      	str	r5, [r4, #0]
 80009c8:	e7dc      	b.n	8000984 <_malloc_r+0xb0>
 80009ca:	605b      	str	r3, [r3, #4]
 80009cc:	deff      	udf	#255	; 0xff
 80009ce:	bf00      	nop
 80009d0:	200001c4 	.word	0x200001c4

080009d4 <__malloc_lock>:
 80009d4:	4801      	ldr	r0, [pc, #4]	; (80009dc <__malloc_lock+0x8>)
 80009d6:	f7ff bf0f 	b.w	80007f8 <__retarget_lock_acquire_recursive>
 80009da:	bf00      	nop
 80009dc:	200001c0 	.word	0x200001c0

080009e0 <__malloc_unlock>:
 80009e0:	4801      	ldr	r0, [pc, #4]	; (80009e8 <__malloc_unlock+0x8>)
 80009e2:	f7ff bf0a 	b.w	80007fa <__retarget_lock_release_recursive>
 80009e6:	bf00      	nop
 80009e8:	200001c0 	.word	0x200001c0

080009ec <__sfputc_r>:
 80009ec:	6893      	ldr	r3, [r2, #8]
 80009ee:	3b01      	subs	r3, #1
 80009f0:	2b00      	cmp	r3, #0
 80009f2:	b410      	push	{r4}
 80009f4:	6093      	str	r3, [r2, #8]
 80009f6:	da08      	bge.n	8000a0a <__sfputc_r+0x1e>
 80009f8:	6994      	ldr	r4, [r2, #24]
 80009fa:	42a3      	cmp	r3, r4
 80009fc:	db01      	blt.n	8000a02 <__sfputc_r+0x16>
 80009fe:	290a      	cmp	r1, #10
 8000a00:	d103      	bne.n	8000a0a <__sfputc_r+0x1e>
 8000a02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a06:	f000 bb73 	b.w	80010f0 <__swbuf_r>
 8000a0a:	6813      	ldr	r3, [r2, #0]
 8000a0c:	1c58      	adds	r0, r3, #1
 8000a0e:	6010      	str	r0, [r2, #0]
 8000a10:	7019      	strb	r1, [r3, #0]
 8000a12:	4608      	mov	r0, r1
 8000a14:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a18:	4770      	bx	lr

08000a1a <__sfputs_r>:
 8000a1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a1c:	4606      	mov	r6, r0
 8000a1e:	460f      	mov	r7, r1
 8000a20:	4614      	mov	r4, r2
 8000a22:	18d5      	adds	r5, r2, r3
 8000a24:	42ac      	cmp	r4, r5
 8000a26:	d101      	bne.n	8000a2c <__sfputs_r+0x12>
 8000a28:	2000      	movs	r0, #0
 8000a2a:	e007      	b.n	8000a3c <__sfputs_r+0x22>
 8000a2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a30:	463a      	mov	r2, r7
 8000a32:	4630      	mov	r0, r6
 8000a34:	f7ff ffda 	bl	80009ec <__sfputc_r>
 8000a38:	1c43      	adds	r3, r0, #1
 8000a3a:	d1f3      	bne.n	8000a24 <__sfputs_r+0xa>
 8000a3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a40 <_vfiprintf_r>:
 8000a40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a44:	460d      	mov	r5, r1
 8000a46:	b09d      	sub	sp, #116	; 0x74
 8000a48:	4614      	mov	r4, r2
 8000a4a:	4698      	mov	r8, r3
 8000a4c:	4606      	mov	r6, r0
 8000a4e:	b118      	cbz	r0, 8000a58 <_vfiprintf_r+0x18>
 8000a50:	6a03      	ldr	r3, [r0, #32]
 8000a52:	b90b      	cbnz	r3, 8000a58 <_vfiprintf_r+0x18>
 8000a54:	f7ff fdcc 	bl	80005f0 <__sinit>
 8000a58:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a5a:	07d9      	lsls	r1, r3, #31
 8000a5c:	d405      	bmi.n	8000a6a <_vfiprintf_r+0x2a>
 8000a5e:	89ab      	ldrh	r3, [r5, #12]
 8000a60:	059a      	lsls	r2, r3, #22
 8000a62:	d402      	bmi.n	8000a6a <_vfiprintf_r+0x2a>
 8000a64:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a66:	f7ff fec7 	bl	80007f8 <__retarget_lock_acquire_recursive>
 8000a6a:	89ab      	ldrh	r3, [r5, #12]
 8000a6c:	071b      	lsls	r3, r3, #28
 8000a6e:	d501      	bpl.n	8000a74 <_vfiprintf_r+0x34>
 8000a70:	692b      	ldr	r3, [r5, #16]
 8000a72:	b99b      	cbnz	r3, 8000a9c <_vfiprintf_r+0x5c>
 8000a74:	4629      	mov	r1, r5
 8000a76:	4630      	mov	r0, r6
 8000a78:	f000 fb78 	bl	800116c <__swsetup_r>
 8000a7c:	b170      	cbz	r0, 8000a9c <_vfiprintf_r+0x5c>
 8000a7e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a80:	07dc      	lsls	r4, r3, #31
 8000a82:	d504      	bpl.n	8000a8e <_vfiprintf_r+0x4e>
 8000a84:	f04f 30ff 	mov.w	r0, #4294967295
 8000a88:	b01d      	add	sp, #116	; 0x74
 8000a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a8e:	89ab      	ldrh	r3, [r5, #12]
 8000a90:	0598      	lsls	r0, r3, #22
 8000a92:	d4f7      	bmi.n	8000a84 <_vfiprintf_r+0x44>
 8000a94:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a96:	f7ff feb0 	bl	80007fa <__retarget_lock_release_recursive>
 8000a9a:	e7f3      	b.n	8000a84 <_vfiprintf_r+0x44>
 8000a9c:	2300      	movs	r3, #0
 8000a9e:	9309      	str	r3, [sp, #36]	; 0x24
 8000aa0:	2320      	movs	r3, #32
 8000aa2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000aa6:	f8cd 800c 	str.w	r8, [sp, #12]
 8000aaa:	2330      	movs	r3, #48	; 0x30
 8000aac:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000c60 <_vfiprintf_r+0x220>
 8000ab0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000ab4:	f04f 0901 	mov.w	r9, #1
 8000ab8:	4623      	mov	r3, r4
 8000aba:	469a      	mov	sl, r3
 8000abc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ac0:	b10a      	cbz	r2, 8000ac6 <_vfiprintf_r+0x86>
 8000ac2:	2a25      	cmp	r2, #37	; 0x25
 8000ac4:	d1f9      	bne.n	8000aba <_vfiprintf_r+0x7a>
 8000ac6:	ebba 0b04 	subs.w	fp, sl, r4
 8000aca:	d00b      	beq.n	8000ae4 <_vfiprintf_r+0xa4>
 8000acc:	465b      	mov	r3, fp
 8000ace:	4622      	mov	r2, r4
 8000ad0:	4629      	mov	r1, r5
 8000ad2:	4630      	mov	r0, r6
 8000ad4:	f7ff ffa1 	bl	8000a1a <__sfputs_r>
 8000ad8:	3001      	adds	r0, #1
 8000ada:	f000 80a9 	beq.w	8000c30 <_vfiprintf_r+0x1f0>
 8000ade:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000ae0:	445a      	add	r2, fp
 8000ae2:	9209      	str	r2, [sp, #36]	; 0x24
 8000ae4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ae8:	2b00      	cmp	r3, #0
 8000aea:	f000 80a1 	beq.w	8000c30 <_vfiprintf_r+0x1f0>
 8000aee:	2300      	movs	r3, #0
 8000af0:	f04f 32ff 	mov.w	r2, #4294967295
 8000af4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000af8:	f10a 0a01 	add.w	sl, sl, #1
 8000afc:	9304      	str	r3, [sp, #16]
 8000afe:	9307      	str	r3, [sp, #28]
 8000b00:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b04:	931a      	str	r3, [sp, #104]	; 0x68
 8000b06:	4654      	mov	r4, sl
 8000b08:	2205      	movs	r2, #5
 8000b0a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b0e:	4854      	ldr	r0, [pc, #336]	; (8000c60 <_vfiprintf_r+0x220>)
 8000b10:	f7ff fb66 	bl	80001e0 <memchr>
 8000b14:	9a04      	ldr	r2, [sp, #16]
 8000b16:	b9d8      	cbnz	r0, 8000b50 <_vfiprintf_r+0x110>
 8000b18:	06d1      	lsls	r1, r2, #27
 8000b1a:	bf44      	itt	mi
 8000b1c:	2320      	movmi	r3, #32
 8000b1e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b22:	0713      	lsls	r3, r2, #28
 8000b24:	bf44      	itt	mi
 8000b26:	232b      	movmi	r3, #43	; 0x2b
 8000b28:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b2c:	f89a 3000 	ldrb.w	r3, [sl]
 8000b30:	2b2a      	cmp	r3, #42	; 0x2a
 8000b32:	d015      	beq.n	8000b60 <_vfiprintf_r+0x120>
 8000b34:	9a07      	ldr	r2, [sp, #28]
 8000b36:	4654      	mov	r4, sl
 8000b38:	2000      	movs	r0, #0
 8000b3a:	f04f 0c0a 	mov.w	ip, #10
 8000b3e:	4621      	mov	r1, r4
 8000b40:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b44:	3b30      	subs	r3, #48	; 0x30
 8000b46:	2b09      	cmp	r3, #9
 8000b48:	d94d      	bls.n	8000be6 <_vfiprintf_r+0x1a6>
 8000b4a:	b1b0      	cbz	r0, 8000b7a <_vfiprintf_r+0x13a>
 8000b4c:	9207      	str	r2, [sp, #28]
 8000b4e:	e014      	b.n	8000b7a <_vfiprintf_r+0x13a>
 8000b50:	eba0 0308 	sub.w	r3, r0, r8
 8000b54:	fa09 f303 	lsl.w	r3, r9, r3
 8000b58:	4313      	orrs	r3, r2
 8000b5a:	9304      	str	r3, [sp, #16]
 8000b5c:	46a2      	mov	sl, r4
 8000b5e:	e7d2      	b.n	8000b06 <_vfiprintf_r+0xc6>
 8000b60:	9b03      	ldr	r3, [sp, #12]
 8000b62:	1d19      	adds	r1, r3, #4
 8000b64:	681b      	ldr	r3, [r3, #0]
 8000b66:	9103      	str	r1, [sp, #12]
 8000b68:	2b00      	cmp	r3, #0
 8000b6a:	bfbb      	ittet	lt
 8000b6c:	425b      	neglt	r3, r3
 8000b6e:	f042 0202 	orrlt.w	r2, r2, #2
 8000b72:	9307      	strge	r3, [sp, #28]
 8000b74:	9307      	strlt	r3, [sp, #28]
 8000b76:	bfb8      	it	lt
 8000b78:	9204      	strlt	r2, [sp, #16]
 8000b7a:	7823      	ldrb	r3, [r4, #0]
 8000b7c:	2b2e      	cmp	r3, #46	; 0x2e
 8000b7e:	d10c      	bne.n	8000b9a <_vfiprintf_r+0x15a>
 8000b80:	7863      	ldrb	r3, [r4, #1]
 8000b82:	2b2a      	cmp	r3, #42	; 0x2a
 8000b84:	d134      	bne.n	8000bf0 <_vfiprintf_r+0x1b0>
 8000b86:	9b03      	ldr	r3, [sp, #12]
 8000b88:	1d1a      	adds	r2, r3, #4
 8000b8a:	681b      	ldr	r3, [r3, #0]
 8000b8c:	9203      	str	r2, [sp, #12]
 8000b8e:	2b00      	cmp	r3, #0
 8000b90:	bfb8      	it	lt
 8000b92:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b96:	3402      	adds	r4, #2
 8000b98:	9305      	str	r3, [sp, #20]
 8000b9a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000c70 <_vfiprintf_r+0x230>
 8000b9e:	7821      	ldrb	r1, [r4, #0]
 8000ba0:	2203      	movs	r2, #3
 8000ba2:	4650      	mov	r0, sl
 8000ba4:	f7ff fb1c 	bl	80001e0 <memchr>
 8000ba8:	b138      	cbz	r0, 8000bba <_vfiprintf_r+0x17a>
 8000baa:	9b04      	ldr	r3, [sp, #16]
 8000bac:	eba0 000a 	sub.w	r0, r0, sl
 8000bb0:	2240      	movs	r2, #64	; 0x40
 8000bb2:	4082      	lsls	r2, r0
 8000bb4:	4313      	orrs	r3, r2
 8000bb6:	3401      	adds	r4, #1
 8000bb8:	9304      	str	r3, [sp, #16]
 8000bba:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bbe:	4829      	ldr	r0, [pc, #164]	; (8000c64 <_vfiprintf_r+0x224>)
 8000bc0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bc4:	2206      	movs	r2, #6
 8000bc6:	f7ff fb0b 	bl	80001e0 <memchr>
 8000bca:	2800      	cmp	r0, #0
 8000bcc:	d03f      	beq.n	8000c4e <_vfiprintf_r+0x20e>
 8000bce:	4b26      	ldr	r3, [pc, #152]	; (8000c68 <_vfiprintf_r+0x228>)
 8000bd0:	bb1b      	cbnz	r3, 8000c1a <_vfiprintf_r+0x1da>
 8000bd2:	9b03      	ldr	r3, [sp, #12]
 8000bd4:	3307      	adds	r3, #7
 8000bd6:	f023 0307 	bic.w	r3, r3, #7
 8000bda:	3308      	adds	r3, #8
 8000bdc:	9303      	str	r3, [sp, #12]
 8000bde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000be0:	443b      	add	r3, r7
 8000be2:	9309      	str	r3, [sp, #36]	; 0x24
 8000be4:	e768      	b.n	8000ab8 <_vfiprintf_r+0x78>
 8000be6:	fb0c 3202 	mla	r2, ip, r2, r3
 8000bea:	460c      	mov	r4, r1
 8000bec:	2001      	movs	r0, #1
 8000bee:	e7a6      	b.n	8000b3e <_vfiprintf_r+0xfe>
 8000bf0:	2300      	movs	r3, #0
 8000bf2:	3401      	adds	r4, #1
 8000bf4:	9305      	str	r3, [sp, #20]
 8000bf6:	4619      	mov	r1, r3
 8000bf8:	f04f 0c0a 	mov.w	ip, #10
 8000bfc:	4620      	mov	r0, r4
 8000bfe:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c02:	3a30      	subs	r2, #48	; 0x30
 8000c04:	2a09      	cmp	r2, #9
 8000c06:	d903      	bls.n	8000c10 <_vfiprintf_r+0x1d0>
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	d0c6      	beq.n	8000b9a <_vfiprintf_r+0x15a>
 8000c0c:	9105      	str	r1, [sp, #20]
 8000c0e:	e7c4      	b.n	8000b9a <_vfiprintf_r+0x15a>
 8000c10:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c14:	4604      	mov	r4, r0
 8000c16:	2301      	movs	r3, #1
 8000c18:	e7f0      	b.n	8000bfc <_vfiprintf_r+0x1bc>
 8000c1a:	ab03      	add	r3, sp, #12
 8000c1c:	9300      	str	r3, [sp, #0]
 8000c1e:	462a      	mov	r2, r5
 8000c20:	4b12      	ldr	r3, [pc, #72]	; (8000c6c <_vfiprintf_r+0x22c>)
 8000c22:	a904      	add	r1, sp, #16
 8000c24:	4630      	mov	r0, r6
 8000c26:	f3af 8000 	nop.w
 8000c2a:	4607      	mov	r7, r0
 8000c2c:	1c78      	adds	r0, r7, #1
 8000c2e:	d1d6      	bne.n	8000bde <_vfiprintf_r+0x19e>
 8000c30:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c32:	07d9      	lsls	r1, r3, #31
 8000c34:	d405      	bmi.n	8000c42 <_vfiprintf_r+0x202>
 8000c36:	89ab      	ldrh	r3, [r5, #12]
 8000c38:	059a      	lsls	r2, r3, #22
 8000c3a:	d402      	bmi.n	8000c42 <_vfiprintf_r+0x202>
 8000c3c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c3e:	f7ff fddc 	bl	80007fa <__retarget_lock_release_recursive>
 8000c42:	89ab      	ldrh	r3, [r5, #12]
 8000c44:	065b      	lsls	r3, r3, #25
 8000c46:	f53f af1d 	bmi.w	8000a84 <_vfiprintf_r+0x44>
 8000c4a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c4c:	e71c      	b.n	8000a88 <_vfiprintf_r+0x48>
 8000c4e:	ab03      	add	r3, sp, #12
 8000c50:	9300      	str	r3, [sp, #0]
 8000c52:	462a      	mov	r2, r5
 8000c54:	4b05      	ldr	r3, [pc, #20]	; (8000c6c <_vfiprintf_r+0x22c>)
 8000c56:	a904      	add	r1, sp, #16
 8000c58:	4630      	mov	r0, r6
 8000c5a:	f000 f879 	bl	8000d50 <_printf_i>
 8000c5e:	e7e4      	b.n	8000c2a <_vfiprintf_r+0x1ea>
 8000c60:	08001371 	.word	0x08001371
 8000c64:	0800137b 	.word	0x0800137b
 8000c68:	00000000 	.word	0x00000000
 8000c6c:	08000a1b 	.word	0x08000a1b
 8000c70:	08001377 	.word	0x08001377

08000c74 <_printf_common>:
 8000c74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c78:	4616      	mov	r6, r2
 8000c7a:	4699      	mov	r9, r3
 8000c7c:	688a      	ldr	r2, [r1, #8]
 8000c7e:	690b      	ldr	r3, [r1, #16]
 8000c80:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c84:	4293      	cmp	r3, r2
 8000c86:	bfb8      	it	lt
 8000c88:	4613      	movlt	r3, r2
 8000c8a:	6033      	str	r3, [r6, #0]
 8000c8c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c90:	4607      	mov	r7, r0
 8000c92:	460c      	mov	r4, r1
 8000c94:	b10a      	cbz	r2, 8000c9a <_printf_common+0x26>
 8000c96:	3301      	adds	r3, #1
 8000c98:	6033      	str	r3, [r6, #0]
 8000c9a:	6823      	ldr	r3, [r4, #0]
 8000c9c:	0699      	lsls	r1, r3, #26
 8000c9e:	bf42      	ittt	mi
 8000ca0:	6833      	ldrmi	r3, [r6, #0]
 8000ca2:	3302      	addmi	r3, #2
 8000ca4:	6033      	strmi	r3, [r6, #0]
 8000ca6:	6825      	ldr	r5, [r4, #0]
 8000ca8:	f015 0506 	ands.w	r5, r5, #6
 8000cac:	d106      	bne.n	8000cbc <_printf_common+0x48>
 8000cae:	f104 0a19 	add.w	sl, r4, #25
 8000cb2:	68e3      	ldr	r3, [r4, #12]
 8000cb4:	6832      	ldr	r2, [r6, #0]
 8000cb6:	1a9b      	subs	r3, r3, r2
 8000cb8:	42ab      	cmp	r3, r5
 8000cba:	dc26      	bgt.n	8000d0a <_printf_common+0x96>
 8000cbc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000cc0:	1e13      	subs	r3, r2, #0
 8000cc2:	6822      	ldr	r2, [r4, #0]
 8000cc4:	bf18      	it	ne
 8000cc6:	2301      	movne	r3, #1
 8000cc8:	0692      	lsls	r2, r2, #26
 8000cca:	d42b      	bmi.n	8000d24 <_printf_common+0xb0>
 8000ccc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cd0:	4649      	mov	r1, r9
 8000cd2:	4638      	mov	r0, r7
 8000cd4:	47c0      	blx	r8
 8000cd6:	3001      	adds	r0, #1
 8000cd8:	d01e      	beq.n	8000d18 <_printf_common+0xa4>
 8000cda:	6823      	ldr	r3, [r4, #0]
 8000cdc:	6922      	ldr	r2, [r4, #16]
 8000cde:	f003 0306 	and.w	r3, r3, #6
 8000ce2:	2b04      	cmp	r3, #4
 8000ce4:	bf02      	ittt	eq
 8000ce6:	68e5      	ldreq	r5, [r4, #12]
 8000ce8:	6833      	ldreq	r3, [r6, #0]
 8000cea:	1aed      	subeq	r5, r5, r3
 8000cec:	68a3      	ldr	r3, [r4, #8]
 8000cee:	bf0c      	ite	eq
 8000cf0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000cf4:	2500      	movne	r5, #0
 8000cf6:	4293      	cmp	r3, r2
 8000cf8:	bfc4      	itt	gt
 8000cfa:	1a9b      	subgt	r3, r3, r2
 8000cfc:	18ed      	addgt	r5, r5, r3
 8000cfe:	2600      	movs	r6, #0
 8000d00:	341a      	adds	r4, #26
 8000d02:	42b5      	cmp	r5, r6
 8000d04:	d11a      	bne.n	8000d3c <_printf_common+0xc8>
 8000d06:	2000      	movs	r0, #0
 8000d08:	e008      	b.n	8000d1c <_printf_common+0xa8>
 8000d0a:	2301      	movs	r3, #1
 8000d0c:	4652      	mov	r2, sl
 8000d0e:	4649      	mov	r1, r9
 8000d10:	4638      	mov	r0, r7
 8000d12:	47c0      	blx	r8
 8000d14:	3001      	adds	r0, #1
 8000d16:	d103      	bne.n	8000d20 <_printf_common+0xac>
 8000d18:	f04f 30ff 	mov.w	r0, #4294967295
 8000d1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d20:	3501      	adds	r5, #1
 8000d22:	e7c6      	b.n	8000cb2 <_printf_common+0x3e>
 8000d24:	18e1      	adds	r1, r4, r3
 8000d26:	1c5a      	adds	r2, r3, #1
 8000d28:	2030      	movs	r0, #48	; 0x30
 8000d2a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d2e:	4422      	add	r2, r4
 8000d30:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d34:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d38:	3302      	adds	r3, #2
 8000d3a:	e7c7      	b.n	8000ccc <_printf_common+0x58>
 8000d3c:	2301      	movs	r3, #1
 8000d3e:	4622      	mov	r2, r4
 8000d40:	4649      	mov	r1, r9
 8000d42:	4638      	mov	r0, r7
 8000d44:	47c0      	blx	r8
 8000d46:	3001      	adds	r0, #1
 8000d48:	d0e6      	beq.n	8000d18 <_printf_common+0xa4>
 8000d4a:	3601      	adds	r6, #1
 8000d4c:	e7d9      	b.n	8000d02 <_printf_common+0x8e>
	...

08000d50 <_printf_i>:
 8000d50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d54:	7e0f      	ldrb	r7, [r1, #24]
 8000d56:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d58:	2f78      	cmp	r7, #120	; 0x78
 8000d5a:	4691      	mov	r9, r2
 8000d5c:	4680      	mov	r8, r0
 8000d5e:	460c      	mov	r4, r1
 8000d60:	469a      	mov	sl, r3
 8000d62:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d66:	d807      	bhi.n	8000d78 <_printf_i+0x28>
 8000d68:	2f62      	cmp	r7, #98	; 0x62
 8000d6a:	d80a      	bhi.n	8000d82 <_printf_i+0x32>
 8000d6c:	2f00      	cmp	r7, #0
 8000d6e:	f000 80d4 	beq.w	8000f1a <_printf_i+0x1ca>
 8000d72:	2f58      	cmp	r7, #88	; 0x58
 8000d74:	f000 80c0 	beq.w	8000ef8 <_printf_i+0x1a8>
 8000d78:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d7c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d80:	e03a      	b.n	8000df8 <_printf_i+0xa8>
 8000d82:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d86:	2b15      	cmp	r3, #21
 8000d88:	d8f6      	bhi.n	8000d78 <_printf_i+0x28>
 8000d8a:	a101      	add	r1, pc, #4	; (adr r1, 8000d90 <_printf_i+0x40>)
 8000d8c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d90:	08000de9 	.word	0x08000de9
 8000d94:	08000dfd 	.word	0x08000dfd
 8000d98:	08000d79 	.word	0x08000d79
 8000d9c:	08000d79 	.word	0x08000d79
 8000da0:	08000d79 	.word	0x08000d79
 8000da4:	08000d79 	.word	0x08000d79
 8000da8:	08000dfd 	.word	0x08000dfd
 8000dac:	08000d79 	.word	0x08000d79
 8000db0:	08000d79 	.word	0x08000d79
 8000db4:	08000d79 	.word	0x08000d79
 8000db8:	08000d79 	.word	0x08000d79
 8000dbc:	08000f01 	.word	0x08000f01
 8000dc0:	08000e29 	.word	0x08000e29
 8000dc4:	08000ebb 	.word	0x08000ebb
 8000dc8:	08000d79 	.word	0x08000d79
 8000dcc:	08000d79 	.word	0x08000d79
 8000dd0:	08000f23 	.word	0x08000f23
 8000dd4:	08000d79 	.word	0x08000d79
 8000dd8:	08000e29 	.word	0x08000e29
 8000ddc:	08000d79 	.word	0x08000d79
 8000de0:	08000d79 	.word	0x08000d79
 8000de4:	08000ec3 	.word	0x08000ec3
 8000de8:	682b      	ldr	r3, [r5, #0]
 8000dea:	1d1a      	adds	r2, r3, #4
 8000dec:	681b      	ldr	r3, [r3, #0]
 8000dee:	602a      	str	r2, [r5, #0]
 8000df0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000df4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000df8:	2301      	movs	r3, #1
 8000dfa:	e09f      	b.n	8000f3c <_printf_i+0x1ec>
 8000dfc:	6820      	ldr	r0, [r4, #0]
 8000dfe:	682b      	ldr	r3, [r5, #0]
 8000e00:	0607      	lsls	r7, r0, #24
 8000e02:	f103 0104 	add.w	r1, r3, #4
 8000e06:	6029      	str	r1, [r5, #0]
 8000e08:	d501      	bpl.n	8000e0e <_printf_i+0xbe>
 8000e0a:	681e      	ldr	r6, [r3, #0]
 8000e0c:	e003      	b.n	8000e16 <_printf_i+0xc6>
 8000e0e:	0646      	lsls	r6, r0, #25
 8000e10:	d5fb      	bpl.n	8000e0a <_printf_i+0xba>
 8000e12:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000e16:	2e00      	cmp	r6, #0
 8000e18:	da03      	bge.n	8000e22 <_printf_i+0xd2>
 8000e1a:	232d      	movs	r3, #45	; 0x2d
 8000e1c:	4276      	negs	r6, r6
 8000e1e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e22:	485a      	ldr	r0, [pc, #360]	; (8000f8c <_printf_i+0x23c>)
 8000e24:	230a      	movs	r3, #10
 8000e26:	e012      	b.n	8000e4e <_printf_i+0xfe>
 8000e28:	682b      	ldr	r3, [r5, #0]
 8000e2a:	6820      	ldr	r0, [r4, #0]
 8000e2c:	1d19      	adds	r1, r3, #4
 8000e2e:	6029      	str	r1, [r5, #0]
 8000e30:	0605      	lsls	r5, r0, #24
 8000e32:	d501      	bpl.n	8000e38 <_printf_i+0xe8>
 8000e34:	681e      	ldr	r6, [r3, #0]
 8000e36:	e002      	b.n	8000e3e <_printf_i+0xee>
 8000e38:	0641      	lsls	r1, r0, #25
 8000e3a:	d5fb      	bpl.n	8000e34 <_printf_i+0xe4>
 8000e3c:	881e      	ldrh	r6, [r3, #0]
 8000e3e:	4853      	ldr	r0, [pc, #332]	; (8000f8c <_printf_i+0x23c>)
 8000e40:	2f6f      	cmp	r7, #111	; 0x6f
 8000e42:	bf0c      	ite	eq
 8000e44:	2308      	moveq	r3, #8
 8000e46:	230a      	movne	r3, #10
 8000e48:	2100      	movs	r1, #0
 8000e4a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e4e:	6865      	ldr	r5, [r4, #4]
 8000e50:	60a5      	str	r5, [r4, #8]
 8000e52:	2d00      	cmp	r5, #0
 8000e54:	bfa2      	ittt	ge
 8000e56:	6821      	ldrge	r1, [r4, #0]
 8000e58:	f021 0104 	bicge.w	r1, r1, #4
 8000e5c:	6021      	strge	r1, [r4, #0]
 8000e5e:	b90e      	cbnz	r6, 8000e64 <_printf_i+0x114>
 8000e60:	2d00      	cmp	r5, #0
 8000e62:	d04b      	beq.n	8000efc <_printf_i+0x1ac>
 8000e64:	4615      	mov	r5, r2
 8000e66:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e6a:	fb03 6711 	mls	r7, r3, r1, r6
 8000e6e:	5dc7      	ldrb	r7, [r0, r7]
 8000e70:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e74:	4637      	mov	r7, r6
 8000e76:	42bb      	cmp	r3, r7
 8000e78:	460e      	mov	r6, r1
 8000e7a:	d9f4      	bls.n	8000e66 <_printf_i+0x116>
 8000e7c:	2b08      	cmp	r3, #8
 8000e7e:	d10b      	bne.n	8000e98 <_printf_i+0x148>
 8000e80:	6823      	ldr	r3, [r4, #0]
 8000e82:	07de      	lsls	r6, r3, #31
 8000e84:	d508      	bpl.n	8000e98 <_printf_i+0x148>
 8000e86:	6923      	ldr	r3, [r4, #16]
 8000e88:	6861      	ldr	r1, [r4, #4]
 8000e8a:	4299      	cmp	r1, r3
 8000e8c:	bfde      	ittt	le
 8000e8e:	2330      	movle	r3, #48	; 0x30
 8000e90:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e94:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e98:	1b52      	subs	r2, r2, r5
 8000e9a:	6122      	str	r2, [r4, #16]
 8000e9c:	f8cd a000 	str.w	sl, [sp]
 8000ea0:	464b      	mov	r3, r9
 8000ea2:	aa03      	add	r2, sp, #12
 8000ea4:	4621      	mov	r1, r4
 8000ea6:	4640      	mov	r0, r8
 8000ea8:	f7ff fee4 	bl	8000c74 <_printf_common>
 8000eac:	3001      	adds	r0, #1
 8000eae:	d14a      	bne.n	8000f46 <_printf_i+0x1f6>
 8000eb0:	f04f 30ff 	mov.w	r0, #4294967295
 8000eb4:	b004      	add	sp, #16
 8000eb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000eba:	6823      	ldr	r3, [r4, #0]
 8000ebc:	f043 0320 	orr.w	r3, r3, #32
 8000ec0:	6023      	str	r3, [r4, #0]
 8000ec2:	4833      	ldr	r0, [pc, #204]	; (8000f90 <_printf_i+0x240>)
 8000ec4:	2778      	movs	r7, #120	; 0x78
 8000ec6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000eca:	6823      	ldr	r3, [r4, #0]
 8000ecc:	6829      	ldr	r1, [r5, #0]
 8000ece:	061f      	lsls	r7, r3, #24
 8000ed0:	f851 6b04 	ldr.w	r6, [r1], #4
 8000ed4:	d402      	bmi.n	8000edc <_printf_i+0x18c>
 8000ed6:	065f      	lsls	r7, r3, #25
 8000ed8:	bf48      	it	mi
 8000eda:	b2b6      	uxthmi	r6, r6
 8000edc:	07df      	lsls	r7, r3, #31
 8000ede:	bf48      	it	mi
 8000ee0:	f043 0320 	orrmi.w	r3, r3, #32
 8000ee4:	6029      	str	r1, [r5, #0]
 8000ee6:	bf48      	it	mi
 8000ee8:	6023      	strmi	r3, [r4, #0]
 8000eea:	b91e      	cbnz	r6, 8000ef4 <_printf_i+0x1a4>
 8000eec:	6823      	ldr	r3, [r4, #0]
 8000eee:	f023 0320 	bic.w	r3, r3, #32
 8000ef2:	6023      	str	r3, [r4, #0]
 8000ef4:	2310      	movs	r3, #16
 8000ef6:	e7a7      	b.n	8000e48 <_printf_i+0xf8>
 8000ef8:	4824      	ldr	r0, [pc, #144]	; (8000f8c <_printf_i+0x23c>)
 8000efa:	e7e4      	b.n	8000ec6 <_printf_i+0x176>
 8000efc:	4615      	mov	r5, r2
 8000efe:	e7bd      	b.n	8000e7c <_printf_i+0x12c>
 8000f00:	682b      	ldr	r3, [r5, #0]
 8000f02:	6826      	ldr	r6, [r4, #0]
 8000f04:	6961      	ldr	r1, [r4, #20]
 8000f06:	1d18      	adds	r0, r3, #4
 8000f08:	6028      	str	r0, [r5, #0]
 8000f0a:	0635      	lsls	r5, r6, #24
 8000f0c:	681b      	ldr	r3, [r3, #0]
 8000f0e:	d501      	bpl.n	8000f14 <_printf_i+0x1c4>
 8000f10:	6019      	str	r1, [r3, #0]
 8000f12:	e002      	b.n	8000f1a <_printf_i+0x1ca>
 8000f14:	0670      	lsls	r0, r6, #25
 8000f16:	d5fb      	bpl.n	8000f10 <_printf_i+0x1c0>
 8000f18:	8019      	strh	r1, [r3, #0]
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	6123      	str	r3, [r4, #16]
 8000f1e:	4615      	mov	r5, r2
 8000f20:	e7bc      	b.n	8000e9c <_printf_i+0x14c>
 8000f22:	682b      	ldr	r3, [r5, #0]
 8000f24:	1d1a      	adds	r2, r3, #4
 8000f26:	602a      	str	r2, [r5, #0]
 8000f28:	681d      	ldr	r5, [r3, #0]
 8000f2a:	6862      	ldr	r2, [r4, #4]
 8000f2c:	2100      	movs	r1, #0
 8000f2e:	4628      	mov	r0, r5
 8000f30:	f7ff f956 	bl	80001e0 <memchr>
 8000f34:	b108      	cbz	r0, 8000f3a <_printf_i+0x1ea>
 8000f36:	1b40      	subs	r0, r0, r5
 8000f38:	6060      	str	r0, [r4, #4]
 8000f3a:	6863      	ldr	r3, [r4, #4]
 8000f3c:	6123      	str	r3, [r4, #16]
 8000f3e:	2300      	movs	r3, #0
 8000f40:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f44:	e7aa      	b.n	8000e9c <_printf_i+0x14c>
 8000f46:	6923      	ldr	r3, [r4, #16]
 8000f48:	462a      	mov	r2, r5
 8000f4a:	4649      	mov	r1, r9
 8000f4c:	4640      	mov	r0, r8
 8000f4e:	47d0      	blx	sl
 8000f50:	3001      	adds	r0, #1
 8000f52:	d0ad      	beq.n	8000eb0 <_printf_i+0x160>
 8000f54:	6823      	ldr	r3, [r4, #0]
 8000f56:	079b      	lsls	r3, r3, #30
 8000f58:	d413      	bmi.n	8000f82 <_printf_i+0x232>
 8000f5a:	68e0      	ldr	r0, [r4, #12]
 8000f5c:	9b03      	ldr	r3, [sp, #12]
 8000f5e:	4298      	cmp	r0, r3
 8000f60:	bfb8      	it	lt
 8000f62:	4618      	movlt	r0, r3
 8000f64:	e7a6      	b.n	8000eb4 <_printf_i+0x164>
 8000f66:	2301      	movs	r3, #1
 8000f68:	4632      	mov	r2, r6
 8000f6a:	4649      	mov	r1, r9
 8000f6c:	4640      	mov	r0, r8
 8000f6e:	47d0      	blx	sl
 8000f70:	3001      	adds	r0, #1
 8000f72:	d09d      	beq.n	8000eb0 <_printf_i+0x160>
 8000f74:	3501      	adds	r5, #1
 8000f76:	68e3      	ldr	r3, [r4, #12]
 8000f78:	9903      	ldr	r1, [sp, #12]
 8000f7a:	1a5b      	subs	r3, r3, r1
 8000f7c:	42ab      	cmp	r3, r5
 8000f7e:	dcf2      	bgt.n	8000f66 <_printf_i+0x216>
 8000f80:	e7eb      	b.n	8000f5a <_printf_i+0x20a>
 8000f82:	2500      	movs	r5, #0
 8000f84:	f104 0619 	add.w	r6, r4, #25
 8000f88:	e7f5      	b.n	8000f76 <_printf_i+0x226>
 8000f8a:	bf00      	nop
 8000f8c:	08001382 	.word	0x08001382
 8000f90:	08001393 	.word	0x08001393

08000f94 <__sflush_r>:
 8000f94:	898a      	ldrh	r2, [r1, #12]
 8000f96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f9a:	4605      	mov	r5, r0
 8000f9c:	0710      	lsls	r0, r2, #28
 8000f9e:	460c      	mov	r4, r1
 8000fa0:	d458      	bmi.n	8001054 <__sflush_r+0xc0>
 8000fa2:	684b      	ldr	r3, [r1, #4]
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	dc05      	bgt.n	8000fb4 <__sflush_r+0x20>
 8000fa8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	dc02      	bgt.n	8000fb4 <__sflush_r+0x20>
 8000fae:	2000      	movs	r0, #0
 8000fb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fb4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fb6:	2e00      	cmp	r6, #0
 8000fb8:	d0f9      	beq.n	8000fae <__sflush_r+0x1a>
 8000fba:	2300      	movs	r3, #0
 8000fbc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000fc0:	682f      	ldr	r7, [r5, #0]
 8000fc2:	6a21      	ldr	r1, [r4, #32]
 8000fc4:	602b      	str	r3, [r5, #0]
 8000fc6:	d032      	beq.n	800102e <__sflush_r+0x9a>
 8000fc8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000fca:	89a3      	ldrh	r3, [r4, #12]
 8000fcc:	075a      	lsls	r2, r3, #29
 8000fce:	d505      	bpl.n	8000fdc <__sflush_r+0x48>
 8000fd0:	6863      	ldr	r3, [r4, #4]
 8000fd2:	1ac0      	subs	r0, r0, r3
 8000fd4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000fd6:	b10b      	cbz	r3, 8000fdc <__sflush_r+0x48>
 8000fd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000fda:	1ac0      	subs	r0, r0, r3
 8000fdc:	2300      	movs	r3, #0
 8000fde:	4602      	mov	r2, r0
 8000fe0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fe2:	6a21      	ldr	r1, [r4, #32]
 8000fe4:	4628      	mov	r0, r5
 8000fe6:	47b0      	blx	r6
 8000fe8:	1c43      	adds	r3, r0, #1
 8000fea:	89a3      	ldrh	r3, [r4, #12]
 8000fec:	d106      	bne.n	8000ffc <__sflush_r+0x68>
 8000fee:	6829      	ldr	r1, [r5, #0]
 8000ff0:	291d      	cmp	r1, #29
 8000ff2:	d82b      	bhi.n	800104c <__sflush_r+0xb8>
 8000ff4:	4a29      	ldr	r2, [pc, #164]	; (800109c <__sflush_r+0x108>)
 8000ff6:	410a      	asrs	r2, r1
 8000ff8:	07d6      	lsls	r6, r2, #31
 8000ffa:	d427      	bmi.n	800104c <__sflush_r+0xb8>
 8000ffc:	2200      	movs	r2, #0
 8000ffe:	6062      	str	r2, [r4, #4]
 8001000:	04d9      	lsls	r1, r3, #19
 8001002:	6922      	ldr	r2, [r4, #16]
 8001004:	6022      	str	r2, [r4, #0]
 8001006:	d504      	bpl.n	8001012 <__sflush_r+0x7e>
 8001008:	1c42      	adds	r2, r0, #1
 800100a:	d101      	bne.n	8001010 <__sflush_r+0x7c>
 800100c:	682b      	ldr	r3, [r5, #0]
 800100e:	b903      	cbnz	r3, 8001012 <__sflush_r+0x7e>
 8001010:	6560      	str	r0, [r4, #84]	; 0x54
 8001012:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001014:	602f      	str	r7, [r5, #0]
 8001016:	2900      	cmp	r1, #0
 8001018:	d0c9      	beq.n	8000fae <__sflush_r+0x1a>
 800101a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800101e:	4299      	cmp	r1, r3
 8001020:	d002      	beq.n	8001028 <__sflush_r+0x94>
 8001022:	4628      	mov	r0, r5
 8001024:	f7ff fbea 	bl	80007fc <_free_r>
 8001028:	2000      	movs	r0, #0
 800102a:	6360      	str	r0, [r4, #52]	; 0x34
 800102c:	e7c0      	b.n	8000fb0 <__sflush_r+0x1c>
 800102e:	2301      	movs	r3, #1
 8001030:	4628      	mov	r0, r5
 8001032:	47b0      	blx	r6
 8001034:	1c41      	adds	r1, r0, #1
 8001036:	d1c8      	bne.n	8000fca <__sflush_r+0x36>
 8001038:	682b      	ldr	r3, [r5, #0]
 800103a:	2b00      	cmp	r3, #0
 800103c:	d0c5      	beq.n	8000fca <__sflush_r+0x36>
 800103e:	2b1d      	cmp	r3, #29
 8001040:	d001      	beq.n	8001046 <__sflush_r+0xb2>
 8001042:	2b16      	cmp	r3, #22
 8001044:	d101      	bne.n	800104a <__sflush_r+0xb6>
 8001046:	602f      	str	r7, [r5, #0]
 8001048:	e7b1      	b.n	8000fae <__sflush_r+0x1a>
 800104a:	89a3      	ldrh	r3, [r4, #12]
 800104c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001050:	81a3      	strh	r3, [r4, #12]
 8001052:	e7ad      	b.n	8000fb0 <__sflush_r+0x1c>
 8001054:	690f      	ldr	r7, [r1, #16]
 8001056:	2f00      	cmp	r7, #0
 8001058:	d0a9      	beq.n	8000fae <__sflush_r+0x1a>
 800105a:	0793      	lsls	r3, r2, #30
 800105c:	680e      	ldr	r6, [r1, #0]
 800105e:	bf08      	it	eq
 8001060:	694b      	ldreq	r3, [r1, #20]
 8001062:	600f      	str	r7, [r1, #0]
 8001064:	bf18      	it	ne
 8001066:	2300      	movne	r3, #0
 8001068:	eba6 0807 	sub.w	r8, r6, r7
 800106c:	608b      	str	r3, [r1, #8]
 800106e:	f1b8 0f00 	cmp.w	r8, #0
 8001072:	dd9c      	ble.n	8000fae <__sflush_r+0x1a>
 8001074:	6a21      	ldr	r1, [r4, #32]
 8001076:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001078:	4643      	mov	r3, r8
 800107a:	463a      	mov	r2, r7
 800107c:	4628      	mov	r0, r5
 800107e:	47b0      	blx	r6
 8001080:	2800      	cmp	r0, #0
 8001082:	dc06      	bgt.n	8001092 <__sflush_r+0xfe>
 8001084:	89a3      	ldrh	r3, [r4, #12]
 8001086:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800108a:	81a3      	strh	r3, [r4, #12]
 800108c:	f04f 30ff 	mov.w	r0, #4294967295
 8001090:	e78e      	b.n	8000fb0 <__sflush_r+0x1c>
 8001092:	4407      	add	r7, r0
 8001094:	eba8 0800 	sub.w	r8, r8, r0
 8001098:	e7e9      	b.n	800106e <__sflush_r+0xda>
 800109a:	bf00      	nop
 800109c:	dfbffffe 	.word	0xdfbffffe

080010a0 <_fflush_r>:
 80010a0:	b538      	push	{r3, r4, r5, lr}
 80010a2:	690b      	ldr	r3, [r1, #16]
 80010a4:	4605      	mov	r5, r0
 80010a6:	460c      	mov	r4, r1
 80010a8:	b913      	cbnz	r3, 80010b0 <_fflush_r+0x10>
 80010aa:	2500      	movs	r5, #0
 80010ac:	4628      	mov	r0, r5
 80010ae:	bd38      	pop	{r3, r4, r5, pc}
 80010b0:	b118      	cbz	r0, 80010ba <_fflush_r+0x1a>
 80010b2:	6a03      	ldr	r3, [r0, #32]
 80010b4:	b90b      	cbnz	r3, 80010ba <_fflush_r+0x1a>
 80010b6:	f7ff fa9b 	bl	80005f0 <__sinit>
 80010ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010be:	2b00      	cmp	r3, #0
 80010c0:	d0f3      	beq.n	80010aa <_fflush_r+0xa>
 80010c2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80010c4:	07d0      	lsls	r0, r2, #31
 80010c6:	d404      	bmi.n	80010d2 <_fflush_r+0x32>
 80010c8:	0599      	lsls	r1, r3, #22
 80010ca:	d402      	bmi.n	80010d2 <_fflush_r+0x32>
 80010cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010ce:	f7ff fb93 	bl	80007f8 <__retarget_lock_acquire_recursive>
 80010d2:	4628      	mov	r0, r5
 80010d4:	4621      	mov	r1, r4
 80010d6:	f7ff ff5d 	bl	8000f94 <__sflush_r>
 80010da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80010dc:	07da      	lsls	r2, r3, #31
 80010de:	4605      	mov	r5, r0
 80010e0:	d4e4      	bmi.n	80010ac <_fflush_r+0xc>
 80010e2:	89a3      	ldrh	r3, [r4, #12]
 80010e4:	059b      	lsls	r3, r3, #22
 80010e6:	d4e1      	bmi.n	80010ac <_fflush_r+0xc>
 80010e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010ea:	f7ff fb86 	bl	80007fa <__retarget_lock_release_recursive>
 80010ee:	e7dd      	b.n	80010ac <_fflush_r+0xc>

080010f0 <__swbuf_r>:
 80010f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010f2:	460e      	mov	r6, r1
 80010f4:	4614      	mov	r4, r2
 80010f6:	4605      	mov	r5, r0
 80010f8:	b118      	cbz	r0, 8001102 <__swbuf_r+0x12>
 80010fa:	6a03      	ldr	r3, [r0, #32]
 80010fc:	b90b      	cbnz	r3, 8001102 <__swbuf_r+0x12>
 80010fe:	f7ff fa77 	bl	80005f0 <__sinit>
 8001102:	69a3      	ldr	r3, [r4, #24]
 8001104:	60a3      	str	r3, [r4, #8]
 8001106:	89a3      	ldrh	r3, [r4, #12]
 8001108:	071a      	lsls	r2, r3, #28
 800110a:	d525      	bpl.n	8001158 <__swbuf_r+0x68>
 800110c:	6923      	ldr	r3, [r4, #16]
 800110e:	b31b      	cbz	r3, 8001158 <__swbuf_r+0x68>
 8001110:	6823      	ldr	r3, [r4, #0]
 8001112:	6922      	ldr	r2, [r4, #16]
 8001114:	1a98      	subs	r0, r3, r2
 8001116:	6963      	ldr	r3, [r4, #20]
 8001118:	b2f6      	uxtb	r6, r6
 800111a:	4283      	cmp	r3, r0
 800111c:	4637      	mov	r7, r6
 800111e:	dc04      	bgt.n	800112a <__swbuf_r+0x3a>
 8001120:	4621      	mov	r1, r4
 8001122:	4628      	mov	r0, r5
 8001124:	f7ff ffbc 	bl	80010a0 <_fflush_r>
 8001128:	b9e0      	cbnz	r0, 8001164 <__swbuf_r+0x74>
 800112a:	68a3      	ldr	r3, [r4, #8]
 800112c:	3b01      	subs	r3, #1
 800112e:	60a3      	str	r3, [r4, #8]
 8001130:	6823      	ldr	r3, [r4, #0]
 8001132:	1c5a      	adds	r2, r3, #1
 8001134:	6022      	str	r2, [r4, #0]
 8001136:	701e      	strb	r6, [r3, #0]
 8001138:	6962      	ldr	r2, [r4, #20]
 800113a:	1c43      	adds	r3, r0, #1
 800113c:	429a      	cmp	r2, r3
 800113e:	d004      	beq.n	800114a <__swbuf_r+0x5a>
 8001140:	89a3      	ldrh	r3, [r4, #12]
 8001142:	07db      	lsls	r3, r3, #31
 8001144:	d506      	bpl.n	8001154 <__swbuf_r+0x64>
 8001146:	2e0a      	cmp	r6, #10
 8001148:	d104      	bne.n	8001154 <__swbuf_r+0x64>
 800114a:	4621      	mov	r1, r4
 800114c:	4628      	mov	r0, r5
 800114e:	f7ff ffa7 	bl	80010a0 <_fflush_r>
 8001152:	b938      	cbnz	r0, 8001164 <__swbuf_r+0x74>
 8001154:	4638      	mov	r0, r7
 8001156:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001158:	4621      	mov	r1, r4
 800115a:	4628      	mov	r0, r5
 800115c:	f000 f806 	bl	800116c <__swsetup_r>
 8001160:	2800      	cmp	r0, #0
 8001162:	d0d5      	beq.n	8001110 <__swbuf_r+0x20>
 8001164:	f04f 37ff 	mov.w	r7, #4294967295
 8001168:	e7f4      	b.n	8001154 <__swbuf_r+0x64>
	...

0800116c <__swsetup_r>:
 800116c:	b538      	push	{r3, r4, r5, lr}
 800116e:	4b2a      	ldr	r3, [pc, #168]	; (8001218 <__swsetup_r+0xac>)
 8001170:	4605      	mov	r5, r0
 8001172:	6818      	ldr	r0, [r3, #0]
 8001174:	460c      	mov	r4, r1
 8001176:	b118      	cbz	r0, 8001180 <__swsetup_r+0x14>
 8001178:	6a03      	ldr	r3, [r0, #32]
 800117a:	b90b      	cbnz	r3, 8001180 <__swsetup_r+0x14>
 800117c:	f7ff fa38 	bl	80005f0 <__sinit>
 8001180:	89a3      	ldrh	r3, [r4, #12]
 8001182:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001186:	0718      	lsls	r0, r3, #28
 8001188:	d422      	bmi.n	80011d0 <__swsetup_r+0x64>
 800118a:	06d9      	lsls	r1, r3, #27
 800118c:	d407      	bmi.n	800119e <__swsetup_r+0x32>
 800118e:	2309      	movs	r3, #9
 8001190:	602b      	str	r3, [r5, #0]
 8001192:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001196:	81a3      	strh	r3, [r4, #12]
 8001198:	f04f 30ff 	mov.w	r0, #4294967295
 800119c:	e034      	b.n	8001208 <__swsetup_r+0x9c>
 800119e:	0758      	lsls	r0, r3, #29
 80011a0:	d512      	bpl.n	80011c8 <__swsetup_r+0x5c>
 80011a2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011a4:	b141      	cbz	r1, 80011b8 <__swsetup_r+0x4c>
 80011a6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011aa:	4299      	cmp	r1, r3
 80011ac:	d002      	beq.n	80011b4 <__swsetup_r+0x48>
 80011ae:	4628      	mov	r0, r5
 80011b0:	f7ff fb24 	bl	80007fc <_free_r>
 80011b4:	2300      	movs	r3, #0
 80011b6:	6363      	str	r3, [r4, #52]	; 0x34
 80011b8:	89a3      	ldrh	r3, [r4, #12]
 80011ba:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80011be:	81a3      	strh	r3, [r4, #12]
 80011c0:	2300      	movs	r3, #0
 80011c2:	6063      	str	r3, [r4, #4]
 80011c4:	6923      	ldr	r3, [r4, #16]
 80011c6:	6023      	str	r3, [r4, #0]
 80011c8:	89a3      	ldrh	r3, [r4, #12]
 80011ca:	f043 0308 	orr.w	r3, r3, #8
 80011ce:	81a3      	strh	r3, [r4, #12]
 80011d0:	6923      	ldr	r3, [r4, #16]
 80011d2:	b94b      	cbnz	r3, 80011e8 <__swsetup_r+0x7c>
 80011d4:	89a3      	ldrh	r3, [r4, #12]
 80011d6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011da:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011de:	d003      	beq.n	80011e8 <__swsetup_r+0x7c>
 80011e0:	4621      	mov	r1, r4
 80011e2:	4628      	mov	r0, r5
 80011e4:	f000 f850 	bl	8001288 <__smakebuf_r>
 80011e8:	89a0      	ldrh	r0, [r4, #12]
 80011ea:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011ee:	f010 0301 	ands.w	r3, r0, #1
 80011f2:	d00a      	beq.n	800120a <__swsetup_r+0x9e>
 80011f4:	2300      	movs	r3, #0
 80011f6:	60a3      	str	r3, [r4, #8]
 80011f8:	6963      	ldr	r3, [r4, #20]
 80011fa:	425b      	negs	r3, r3
 80011fc:	61a3      	str	r3, [r4, #24]
 80011fe:	6923      	ldr	r3, [r4, #16]
 8001200:	b943      	cbnz	r3, 8001214 <__swsetup_r+0xa8>
 8001202:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001206:	d1c4      	bne.n	8001192 <__swsetup_r+0x26>
 8001208:	bd38      	pop	{r3, r4, r5, pc}
 800120a:	0781      	lsls	r1, r0, #30
 800120c:	bf58      	it	pl
 800120e:	6963      	ldrpl	r3, [r4, #20]
 8001210:	60a3      	str	r3, [r4, #8]
 8001212:	e7f4      	b.n	80011fe <__swsetup_r+0x92>
 8001214:	2000      	movs	r0, #0
 8001216:	e7f7      	b.n	8001208 <__swsetup_r+0x9c>
 8001218:	20000058 	.word	0x20000058

0800121c <_sbrk_r>:
 800121c:	b538      	push	{r3, r4, r5, lr}
 800121e:	4d06      	ldr	r5, [pc, #24]	; (8001238 <_sbrk_r+0x1c>)
 8001220:	2300      	movs	r3, #0
 8001222:	4604      	mov	r4, r0
 8001224:	4608      	mov	r0, r1
 8001226:	602b      	str	r3, [r5, #0]
 8001228:	f7ff f908 	bl	800043c <_sbrk>
 800122c:	1c43      	adds	r3, r0, #1
 800122e:	d102      	bne.n	8001236 <_sbrk_r+0x1a>
 8001230:	682b      	ldr	r3, [r5, #0]
 8001232:	b103      	cbz	r3, 8001236 <_sbrk_r+0x1a>
 8001234:	6023      	str	r3, [r4, #0]
 8001236:	bd38      	pop	{r3, r4, r5, pc}
 8001238:	200001bc 	.word	0x200001bc

0800123c <__swhatbuf_r>:
 800123c:	b570      	push	{r4, r5, r6, lr}
 800123e:	460c      	mov	r4, r1
 8001240:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001244:	2900      	cmp	r1, #0
 8001246:	b096      	sub	sp, #88	; 0x58
 8001248:	4615      	mov	r5, r2
 800124a:	461e      	mov	r6, r3
 800124c:	da0d      	bge.n	800126a <__swhatbuf_r+0x2e>
 800124e:	89a3      	ldrh	r3, [r4, #12]
 8001250:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001254:	f04f 0100 	mov.w	r1, #0
 8001258:	bf0c      	ite	eq
 800125a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800125e:	2340      	movne	r3, #64	; 0x40
 8001260:	2000      	movs	r0, #0
 8001262:	6031      	str	r1, [r6, #0]
 8001264:	602b      	str	r3, [r5, #0]
 8001266:	b016      	add	sp, #88	; 0x58
 8001268:	bd70      	pop	{r4, r5, r6, pc}
 800126a:	466a      	mov	r2, sp
 800126c:	f000 f848 	bl	8001300 <_fstat_r>
 8001270:	2800      	cmp	r0, #0
 8001272:	dbec      	blt.n	800124e <__swhatbuf_r+0x12>
 8001274:	9901      	ldr	r1, [sp, #4]
 8001276:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800127a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800127e:	4259      	negs	r1, r3
 8001280:	4159      	adcs	r1, r3
 8001282:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001286:	e7eb      	b.n	8001260 <__swhatbuf_r+0x24>

08001288 <__smakebuf_r>:
 8001288:	898b      	ldrh	r3, [r1, #12]
 800128a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800128c:	079d      	lsls	r5, r3, #30
 800128e:	4606      	mov	r6, r0
 8001290:	460c      	mov	r4, r1
 8001292:	d507      	bpl.n	80012a4 <__smakebuf_r+0x1c>
 8001294:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001298:	6023      	str	r3, [r4, #0]
 800129a:	6123      	str	r3, [r4, #16]
 800129c:	2301      	movs	r3, #1
 800129e:	6163      	str	r3, [r4, #20]
 80012a0:	b002      	add	sp, #8
 80012a2:	bd70      	pop	{r4, r5, r6, pc}
 80012a4:	ab01      	add	r3, sp, #4
 80012a6:	466a      	mov	r2, sp
 80012a8:	f7ff ffc8 	bl	800123c <__swhatbuf_r>
 80012ac:	9900      	ldr	r1, [sp, #0]
 80012ae:	4605      	mov	r5, r0
 80012b0:	4630      	mov	r0, r6
 80012b2:	f7ff fb0f 	bl	80008d4 <_malloc_r>
 80012b6:	b948      	cbnz	r0, 80012cc <__smakebuf_r+0x44>
 80012b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012bc:	059a      	lsls	r2, r3, #22
 80012be:	d4ef      	bmi.n	80012a0 <__smakebuf_r+0x18>
 80012c0:	f023 0303 	bic.w	r3, r3, #3
 80012c4:	f043 0302 	orr.w	r3, r3, #2
 80012c8:	81a3      	strh	r3, [r4, #12]
 80012ca:	e7e3      	b.n	8001294 <__smakebuf_r+0xc>
 80012cc:	89a3      	ldrh	r3, [r4, #12]
 80012ce:	6020      	str	r0, [r4, #0]
 80012d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012d4:	81a3      	strh	r3, [r4, #12]
 80012d6:	9b00      	ldr	r3, [sp, #0]
 80012d8:	6163      	str	r3, [r4, #20]
 80012da:	9b01      	ldr	r3, [sp, #4]
 80012dc:	6120      	str	r0, [r4, #16]
 80012de:	b15b      	cbz	r3, 80012f8 <__smakebuf_r+0x70>
 80012e0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012e4:	4630      	mov	r0, r6
 80012e6:	f000 f81d 	bl	8001324 <_isatty_r>
 80012ea:	b128      	cbz	r0, 80012f8 <__smakebuf_r+0x70>
 80012ec:	89a3      	ldrh	r3, [r4, #12]
 80012ee:	f023 0303 	bic.w	r3, r3, #3
 80012f2:	f043 0301 	orr.w	r3, r3, #1
 80012f6:	81a3      	strh	r3, [r4, #12]
 80012f8:	89a3      	ldrh	r3, [r4, #12]
 80012fa:	431d      	orrs	r5, r3
 80012fc:	81a5      	strh	r5, [r4, #12]
 80012fe:	e7cf      	b.n	80012a0 <__smakebuf_r+0x18>

08001300 <_fstat_r>:
 8001300:	b538      	push	{r3, r4, r5, lr}
 8001302:	4d07      	ldr	r5, [pc, #28]	; (8001320 <_fstat_r+0x20>)
 8001304:	2300      	movs	r3, #0
 8001306:	4604      	mov	r4, r0
 8001308:	4608      	mov	r0, r1
 800130a:	4611      	mov	r1, r2
 800130c:	602b      	str	r3, [r5, #0]
 800130e:	f7ff f86c 	bl	80003ea <_fstat>
 8001312:	1c43      	adds	r3, r0, #1
 8001314:	d102      	bne.n	800131c <_fstat_r+0x1c>
 8001316:	682b      	ldr	r3, [r5, #0]
 8001318:	b103      	cbz	r3, 800131c <_fstat_r+0x1c>
 800131a:	6023      	str	r3, [r4, #0]
 800131c:	bd38      	pop	{r3, r4, r5, pc}
 800131e:	bf00      	nop
 8001320:	200001bc 	.word	0x200001bc

08001324 <_isatty_r>:
 8001324:	b538      	push	{r3, r4, r5, lr}
 8001326:	4d06      	ldr	r5, [pc, #24]	; (8001340 <_isatty_r+0x1c>)
 8001328:	2300      	movs	r3, #0
 800132a:	4604      	mov	r4, r0
 800132c:	4608      	mov	r0, r1
 800132e:	602b      	str	r3, [r5, #0]
 8001330:	f7ff f86b 	bl	800040a <_isatty>
 8001334:	1c43      	adds	r3, r0, #1
 8001336:	d102      	bne.n	800133e <_isatty_r+0x1a>
 8001338:	682b      	ldr	r3, [r5, #0]
 800133a:	b103      	cbz	r3, 800133e <_isatty_r+0x1a>
 800133c:	6023      	str	r3, [r4, #0]
 800133e:	bd38      	pop	{r3, r4, r5, pc}
 8001340:	200001bc 	.word	0x200001bc

08001344 <_init>:
 8001344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001346:	bf00      	nop
 8001348:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800134a:	bc08      	pop	{r3}
 800134c:	469e      	mov	lr, r3
 800134e:	4770      	bx	lr

08001350 <_fini>:
 8001350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001352:	bf00      	nop
 8001354:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001356:	bc08      	pop	{r3}
 8001358:	469e      	mov	lr, r3
 800135a:	4770      	bx	lr
